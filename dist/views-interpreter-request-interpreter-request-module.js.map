{"version":3,"sources":["./src/app/views/interpreter-request/reject-reques/reject-request.component.ts","./src/app/views/interpreter-request/reject-reques/reject-request.component.html","./src/app/views/interpreter-request/interpreter-request.module.ts","./src/app/views/interpreter-request/interpreter-history-list/interpreter-history-list.component.ts","./src/app/views/interpreter-request/interpreter-history-list/interpreter-history-list.component.html","./src/app/views/interpreter-request/interpreter-request-routing.module.ts","./src/app/views/interpreter-request/complete-request/complete-request.component.ts","./src/app/views/interpreter-request/complete-request/complete-request.component.html","./src/app/views/interpreter-request/cancelled-request/cancelled-request.component.ts","./src/app/views/interpreter-request/cancelled-request/cancelled-request.component.html","./src/app/views/interpreter-request/interpreter-request-list/interpreter-request-list.component.ts","./src/app/views/interpreter-request/interpreter-request-list/interpreter-request-list.component.html","./src/app/views/interpreter-request/all-request/all-request.component.ts","./src/app/views/interpreter-request/all-request/all-request.component.html","./src/app/views/interpreter-request/step-forms/step-forms.component.ts","./src/app/views/interpreter-request/step-forms/step-forms.component.html","./src/app/views/interpreter-request/accept-request/accept-request.component.ts","./src/app/views/interpreter-request/accept-request/accept-request.component.html","./src/app/shared/services/validations.service.ts"],"names":[],"mappings":"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","file":"views-interpreter-request-interpreter-request-module.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-reject-request',\n  templateUrl: './reject-request.component.html',\n  styleUrls: ['./reject-request.component.scss']\n})\nexport class RejectRequestComponent implements OnInit {\n\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj2;\n  msg;\n  searchControl: FormControl = new FormControl();\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit() {\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n    this.interpreterRequestData();\n    this.searchControl.valueChanges\n      .pipe(debounceTime(200))\n      .subscribe(value => {\n        this.filerData(value);\n      });\n\n  }\n\n  filerData(val) {\n    if (val) {\n      val = val.toLowerCase();\n    } else {\n      return this.filteredUser = [... this.userData];\n    }\n\n    const columns = Object.keys(this.userData[0]);\n    if (!columns.length) {\n      return;\n    }\n\n    const rows = this.userData.filter(function (d) {\n      for (let i = 0; i <= columns.length; i++) {\n        const column = columns[i];\n        // console.log(d[column]);\n        if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n          return true;\n        }\n      }\n    });\n    this.filteredUser = rows;\n  }\n\n  interpreterRequestData() {\n    this.service.interpreterRejectList(this.roleId, this.userId, '3')\n      .subscribe(res => {\n        console.log(\"api response\", res);\n        if (res['status'] == '1') {\n          this.list_Obj = res['data'];\n          this.userData = [...res['data']];\n          this.filteredUser = this.list_Obj;\n        }\n      });\n  }\n}\n\n","<div class=\"\">\n  <div class=\"breadcrumb\">\n    <ul class=\"heading\">\n        <li><a>Rejected Request </a></li>\n        <li>List</li>\n    </ul>\n</div>\n  \n    <div class=\"separator-breadcrumb border-top\"></div>\n\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <input id=\"search\" placeholder=\"Search\" [formControl]=\"searchControl\"  class=\"form-control form-control-rounded\" type=\"text\">\n        </div>\n  </div>\n\n\n\n      <div class=\"col-md-12\">\n          <div class=\"card  o-hidden\">\n              <ngx-datatable *ngIf=\"filteredUser?.length\"\n              style=\"height: 500px; box-shadow: none\"\n              class=\"material fullscreen\"\n              [columnMode]=\"'force'\"\n              [headerHeight]=\"50\"\n              [footerHeight]=\"50\"\n              [rowHeight]=\"60\"\n              [scrollbarV]=\"true\"\n              [rows]=\"filteredUser\">\n              <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                <ng-template ngx-datatable-header-template>\n                 S.No\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                    {{rowIndex +1}}\n                </ng-template>\n               </ngx-datatable-column>\n\n               <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                <ng-template ngx-datatable-header-template>\n                  Caseworker\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.caseworker_name}}\n                </ng-template>\n              </ngx-datatable-column> -->\n\n               <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                <ng-template ngx-datatable-header-template>\n                  Appointment Type\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.appointment_type}}\n                </ng-template>\n              </ngx-datatable-column>\n              <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                <ng-template ngx-datatable-header-template>\n                  Cell Phone\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.cell_phone}}\n                </ng-template>\n              </ngx-datatable-column>\n                <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                    <ng-template ngx-datatable-header-template>\n                      Requester\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.requester_name}}\n                    </ng-template>\n                </ngx-datatable-column> -->\n                <!-- <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\">\n                  <ng-template ngx-datatable-header-template>\n                      Interpreter\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.name}}\n                  </ng-template>  \n              </ngx-datatable-column>\n              \n              <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                <ng-template ngx-datatable-header-template>\n                  Interpreter Mobile\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.mobile}}\n                </ng-template>  \n            </ngx-datatable-column> -->\n            <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n\n              <ngx-datatable-column>\n                <ng-template ngx-datatable-header-template>\n                  <span title=\"Requested date\">Requested date</span>\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  <span title=\"{{row.date}}\"> {{row.date | date:'MM/dd/yyyy' }}</span>\n                </ng-template>  \n            </ngx-datatable-column>\n              <ng-template ngx-datatable-header-template>Status\n              </ng-template>\n              \n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" >\n                  Rejected Request\n              </ng-template>\n             \n          </ngx-datatable-column>\n          \n          \n          <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n            <ng-template ngx-datatable-header-template>Action\n            </ng-template>\n            \n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" >\n              <button class=\"btn btn-outline-danger ml-2\"\n              (click)=\"requestComplete(row.ris_id, completeConfirmModal)\">\n                  Completed\n              </button>\n            </ng-template>\n          </ngx-datatable-column> -->\n        \n          \n          \n            \n\n                <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                  <ng-template ngx-datatable-header-template *ngIf=\"roleId=='1';then Status; else Actions\">\n                  </ng-template>\n                  <ng-template ngx-datatable-header-template #Status>Status\n                  </ng-template>\n                  <ng-template ngx-datatable-header-template #Actions>Actions\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Status>\n                      <button class=\"btn btn-outline-secondary ml-2\" >Request Accept</button>  \n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Actions>\n                    <button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>  \n                    <button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>  \n                </ng-template>\n              </ngx-datatable-column>\n-->\n            </ngx-datatable>\n          </div>\n        <ng-container *ngIf=\"list_Obj?.length <= 0\">\n            No Data Found\n        </ng-container>\n      </div>\n        \n    </div>\n</div>  \n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InterpreterRequestRoutingModule } from './interpreter-request-routing.module';\nimport { InterpreterRequestListComponent } from './interpreter-request-list/interpreter-request-list.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { TagInputModule } from 'ngx-chips';\nimport { AgmCoreModule } from '@agm/core';\nimport { AcceptRequestComponent } from './accept-request/accept-request.component';\nimport { CompleteRequestComponent } from './complete-request/complete-request.component';\nimport { CancelledRequestComponent } from './cancelled-request/cancelled-request.component';\nimport { RejectRequestComponent } from './reject-reques/reject-request.component';\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { AllRequestComponent } from './all-request/all-request.component';\nimport { InterpreterHistoryListComponent } from './interpreter-history-list/interpreter-history-list.component';\n\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatInputModule} from '@angular/material/input';\nimport { StepFormsComponent } from './step-forms/step-forms.component';\n\n@NgModule({\n  declarations: [InterpreterRequestListComponent, \n    AcceptRequestComponent, \n    CompleteRequestComponent, \n    CancelledRequestComponent, \n    RejectRequestComponent, \n    AllRequestComponent, InterpreterHistoryListComponent, StepFormsComponent],\n  imports: [\n    CommonModule,\n    InterpreterRequestRoutingModule,\n    FormsModule,\n    NgxDatatableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatInputModule,\n    NgxMaskModule.forRoot(),\n    ReactiveFormsModule,\n    SharedComponentsModule,\n    TagInputModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBC_D6nmnxc-Og6sZJ_hfuxRbHcJB9Is38',//'AIzaSyBkH1R6_PO7fNY5L0z6CvV00oeNX8Vn0iE', \n      libraries: ['places']\n    }),\n    NgbModule,\n  ]\n})\nexport class InterpreterRequestModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-interpreter-history-list',\n  templateUrl: './interpreter-history-list.component.html',\n  styleUrls: ['./interpreter-history-list.component.scss']\n})\nexport class InterpreterHistoryListComponent implements OnInit {\n  filteredUser;\n  userData;\n  requestId;\n  interpreter_obj;\n  resp_msg;\n  searchControl: FormControl = new FormControl();\n\n  constructor(\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router\n  ) { }\n\n  ngOnInit(){\n    this.requestId = JSON.parse(localStorage.getItem('interhistory'));\n    this.searchControl.valueChanges\n    .pipe(debounceTime(200))\n    .subscribe(value => {\n      this.filerData(value);\n    });\n    this.numOfInterpreter();\n  }\n\n  filerData(val) {\n    if (val) {\n      val = val.toLowerCase();\n    } else {\n      console.log(\"xxxxxxx\", this.filteredUser);\n      return this.filteredUser = [... this.userData];\n    }\n\n    const columns = Object.keys(this.userData[0]);\n    if (!columns.length) {\n      return;\n    }\n\n    const rows = this.userData.filter(function (d) {\n      for (let i = 0; i <= columns.length; i++) {\n        const column = columns[i];\n        // console.log(d[column]);\n        if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n          return true;\n        }\n      }\n    });\n    this.filteredUser = rows;\n  }\n\n  numOfInterpreter(){\n    console.log(this.requestId);\n    this.service.getNoOfInterpreter(this.requestId).subscribe(res => {\n      if(res['status'] == 1){\n        this.interpreter_obj = res['data'];\n        this.userData = [...res['data']];\n        this.filteredUser = this.interpreter_obj;\n      }else{\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message,'', { timeOut: 2000, positionClass: 'toast-top-center' });\n      }\n    })\n  }\n\n}\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n      <ul class=\"heading\">\n          <li><a>Assign Interpreter</a></li>\n          <li>List</li>\n      </ul>\n  </div>\n    \n      <div class=\"separator-breadcrumb border-top\"></div>\n  \n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <input id=\"search\" placeholder=\"Search\" [formControl]=\"searchControl\"  class=\"form-control form-control-rounded\" type=\"text\">\n          </div>\n    </div>\n  \n        <div class=\"col-md-12 lang_block\">\n            <div class=\"card  o-hidden\">\n                <ngx-datatable *ngIf=\"filteredUser?.length\"\n                style=\"height: 500px; box-shadow: none\"\n                class=\"material fullscreen\"\n                [columnMode]=\"'force'\"\n                [headerHeight]=\"50\"\n                [footerHeight]=\"50\"\n                [rowHeight]=\"60\"\n                [scrollbarV]=\"true\"\n                [rows]=\"filteredUser\">\n                <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"50\">\n                  <ng-template ngx-datatable-header-template>\n                   S.No\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                      {{rowIndex +1}}\n                  </ng-template>\n                 </ngx-datatable-column>\n                 <ngx-datatable-column name=\"Full Name\" prop=\"name\" [minWidth]=\"20\" >\n                  <ng-template ngx-datatable-header-template >\n                   Full Name\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    <span class=\"full_name\">{{row.first_name}} {{row.last_name}}</span>\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Email\" prop=\"email\" [minWidth]=\"70\">\n                  <ng-template ngx-datatable-header-template>\n                    Email\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.email}}\n                  </ng-template>\n                </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Mobile\" prop=\"mobile\" [minWidth]=\"30\">\n                      <ng-template ngx-datatable-header-template>\n                        Mobile\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.country_code}}{{row.mobile | mask: '(000) 000-0000'}}\n                      </ng-template>\n                  </ngx-datatable-column>\n              \n         \n              </ngx-datatable>\n            </div>\n          <ng-container *ngIf=\"interpreter_obj?.length <= 0\">\n              No Data Found\n          </ng-container>\n        </div>\n          \n      </div>\n  </div> \n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AcceptRequestComponent } from './accept-request/accept-request.component';\nimport { CompleteRequestComponent } from './complete-request/complete-request.component';\nimport { CancelledRequestComponent } from './cancelled-request/cancelled-request.component';\nimport { InterpreterRequestListComponent } from './interpreter-request-list/interpreter-request-list.component';\nimport { RejectRequestComponent } from './reject-reques/reject-request.component';\nimport { AllRequestComponent } from './all-request/all-request.component';\nimport { InterpreterHistoryListComponent } from './interpreter-history-list/interpreter-history-list.component';\nimport { StepFormsComponent } from './step-forms/step-forms.component';\n\n\nconst routes: Routes = [\n  { path: 'all-request-list', component:AllRequestComponent },\n  { path: 'all-request-list/:id', component:AllRequestComponent },\n  { path: 'list', component: InterpreterRequestListComponent },\n  { path: 'accept-list', component: AcceptRequestComponent },\n  { path: 'completed-list', component: CompleteRequestComponent },\n  { path: 'cancelled-list', component: CancelledRequestComponent },\n  { path: 'reject-list', component: RejectRequestComponent },\n  { path: 'interpreter-history', component: InterpreterHistoryListComponent },\n  { path: 'step-form', component: StepFormsComponent },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InterpreterRequestRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-complete-request',\n  templateUrl: './complete-request.component.html',\n  styleUrls: ['./complete-request.component.scss']\n})\nexport class CompleteRequestComponent implements OnInit {\n  \n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  view_obj;\n  resp_msg;\n  // searchControl: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service:HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit(){\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n\n    // this.interpreterRequestData('1');\n    this.getCompleteReq('1');\n    // this.searchControl.valueChanges\n    // .pipe(debounceTime(200))\n    // .subscribe(value => {\n    //   this.filerData(value);\n    // });\n   \n  }\n\n  // filerData(val) {\n  //   if (val) {\n  //     val = val.toLowerCase();\n  //   } else {\n  //     console.log(\"xxxxxxx\",this.filteredUser);\n  //     return this.filteredUser = [... this.userData];\n  //   }\n\n  //   const columns = Object.keys( this.userData[0]);\n  //   if (!columns.length) {\n  //     return;\n  //   }\n\n  //   const rows =  this.userData.filter(function(d) {\n  //     for (let i = 0; i <= columns.length; i++) {\n  //       const column = columns[i];\n  //       // console.log(d[column]);\n  //       if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n  //         return true;\n  //       }\n  //     }\n  //   });\n  //   this.filteredUser = rows;\n  // }\n\n//   interpreterRequestData(e){\n//     this.allData = this.search_name.value;\n//     this.startDate = this.range.value.start_date;\n//     this.endDate = this.range.value.end_date;\n//     this.service.interpreterRequestList(this.roleId,this.userId,'4',this.allData,\n//     this.startDate,this.endDate)\n//     .subscribe(res => {\n//       if(res['status']=='1'){\n//         console.log(\"api response\",res);\n//         this.list_Obj = res['data'];\n//         this.userData = [...res['data']];\n//         // console.log(\"listttttttt\", this.list_Obj);\n//         this.filteredUser = this.list_Obj;\n//       }\n       \n//     });\n// }\n getRowClass = (row) => {    \n    return {\n      'completeRequest': row.status == \"3\",\n    };\n   }\ngetCompleteReq(e){\n  this.allData = this.search_name.value;\n  this.startDate = this.range.value.start_date;\n  this.endDate = this.range.value.end_date;\n  this.service.post(\"getCompleteReq\",{role_id:this.roleId,user_id:this.userId,status:'4',search_info:this.allData,start_date: this.startDate,end_date:this.endDate})\n  .subscribe(res => {\n    if(res['status']=='1'){\n      console.log(\"api response=========================\",res);\n      this.list_Obj = res['data'];\n      this.userData = [...res['data']];\n      // console.log(\"listttttttt\", this.list_Obj);\n      this.filteredUser = this.list_Obj;\n    }\n     \n  });\n}\n\nviewDetail(request_id){\n  console.log(\"id--\",  request_id);\n  this.service.getRequestDetail(request_id).subscribe(res => {\n    if(res['status'] == 1){\n      this.view_obj = res['data'][0];\n      console.log(\"api response\",  this.view_obj);\n      localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n      this.router.navigate(['/request-scheduler/details',request_id]);\n\n    }else{\n      this.resp_msg = res;\n      this.toastr.error(this.resp_msg.message,'', { timeOut: 2000, positionClass: 'toast-top-center' });\n    }   \n  })\n}\n\n\n}\n\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n        <ul class=\"heading\">\n            <li><a>Completed</a></li>\n            <li>List</li>\n        </ul>\n    </div>\n\n    <div class=\"separator-breadcrumb border-top\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <input id=\"search\" (keyup)=\"getCompleteReq($event.target.value)\" placeholder=\"Search\"\n                    [formControl]=\"search_name\" class=\"form-control form-control-rounded\" type=\"text\">\n            </div>\n        </div>\n\n        <div class=\"col-md-4 dummy_text\">\n            <mat-form-field appearance=\"fill\">\n                <!-- <mat-label>Enter a date range</mat-label> -->\n                <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n                    <input matStartDate formControlName=\"start_date\" (dateChange)=\"getCompleteReq($event.target.value)\"\n                        placeholder=\"Start date\">\n                    <input matEndDate formControlName=\"end_date\" (dateChange)=\"getCompleteReq($event.target.value)\"\n                        placeholder=\"End date\">\n\n                </mat-date-range-input>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-date-range-picker #picker></mat-date-range-picker>\n            </mat-form-field>\n        </div>\n\n        <div class=\"col-md-12\">\n            <div class=\"card o-hidden\">\n                <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\"\n                    class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                    [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\"  [rowClass]=\"getRowClass\">\n                    <!-- <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                        <ng-template ngx-datatable-header-template>\n                            S.No\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\"\n                            let-row=\"row\">\n                            {{rowIndex +1}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n<ng-template ngx-datatable-header-template>\nCaseworker\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n{{row.caseworker_name}}\n</ng-template>\n</ngx-datatable-column> -->\n                    <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                        <ng-template ngx-datatable-header-template>\n                            IR\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.ir}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Client Name\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.client_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                        <ng-template ngx-datatable-header-template>\n                            LOB\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lob_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                        <ng-template ngx-datatable-header-template>\n                            Assignment Type\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.assignment_type}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Language\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lang_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                   <!--  <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                        <ng-template ngx-datatable-header-template>\n                            Cell Phone\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n                    <ngx-datatable-column>\n                        <ng-template ngx-datatable-header-template>\n                          <span title=\"Requested date\">Requested date</span>\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n                        </ng-template>  \n                    </ngx-datatable-column>\n                    <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                        <ng-template ngx-datatable-header-template>\n                            Appointment Type\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.appointment_type}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                        <ng-template ngx-datatable-header-template>\n                            Cell Phone\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.cell_phone | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n                    <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n<ng-template ngx-datatable-header-template>\nRequester\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n{{row.requester_name}}\n</ng-template>\n</ngx-datatable-column> -->\n                    <!-- <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Interpreter\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                        <ng-template ngx-datatable-header-template>\n                            Interpreter Mobile\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.mobile | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column>\n                        <ng-template ngx-datatable-header-template>\n                            <span title=\"Requested date\">Requested date</span>\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column>\n                        <ng-template ngx-datatable-header-template>\n                            <span title=\"Appointment date\"> Appointment date</span>\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                        <ng-template ngx-datatable-header-template>Status\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            Completed Request\n                        </ng-template>\n\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                        <ng-template ngx-datatable-header-template>Action\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail(row.ris_id)\">View</button>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n\n\n\n\n\n                    <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n<ng-template ngx-datatable-header-template *ngIf=\"roleId=='1';then Status; else Actions\">\n</ng-template>\n<ng-template ngx-datatable-header-template #Status>Status\n</ng-template>\n<ng-template ngx-datatable-header-template #Actions>Actions\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Status>\n<button class=\"btn btn-outline-secondary ml-2\" >Request Accept</button>\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Actions>\n<button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>\n<button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>\n</ng-template>\n</ngx-datatable-column>\n-->\n                </ngx-datatable>\n            </div>\n            <!-- <ng-container *ngIf=\"list_Obj?.length <= 0\">\n                No Data Found\n            </ng-container> -->\n\n              <div class=\"col-md-12 text-center findnew\" *ngIf=\"list_Obj?.length <= 0\">\n                <img src=\"../assets/images/nosearch.png\"><br><br>\n                <h5><b>We couldn't find what you're looking for</b></h5>\n </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-cancelled-request',\n  templateUrl: './cancelled-request.component.html',\n  styleUrls: ['./cancelled-request.component.scss']\n})\nexport class CancelledRequestComponent implements OnInit {\n\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  view_obj;\n  resp_msg;\n  // searchControl: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  // range = new FormGroup({\n  //   start_date: new FormControl(),\n  //   end_date: new FormControl()\n  // });  \n  allData;\n  startDate;\n  endDate;\n \n  array_Obj2;\n  searchControl: FormControl = new FormControl();\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit() {\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n    this.interpreterRequestData('e');\n    this.searchControl.valueChanges\n      .pipe(debounceTime(200))\n      .subscribe(value => {\n        this.filerData(value);\n      });\n\n  }\n\n  filerData(val) {\n    if (val) {\n      val = val.toLowerCase();\n    } else {\n      return this.filteredUser = [... this.userData];\n    }\n\n    const columns = Object.keys(this.userData[0]);\n    if (!columns.length) {\n      return;\n    }\n\n    const rows = this.userData.filter(function (d) {\n      for (let i = 0; i <= columns.length; i++) {\n        const column = columns[i];\n        // console.log(d[column]);\n        if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n          return true;\n        }\n      }\n    });\n    this.filteredUser = rows;\n  }\n\n  interpreterRequestData(e) {\n    this.service.interpreterRejectList(this.roleId, this.userId, '3')\n      .subscribe(res => {\n        console.log(\"api response================\", res);\n        if (res['status'] == '1') {\n          this.list_Obj = res['data'];\n          this.userData = [...res['data']];\n          this.filteredUser = this.list_Obj;\n        }\n      });\n  }\n  viewDetail(request_id){\n    console.log(\"id--\",  request_id);\n    this.service.getRequestDetail(request_id).subscribe(res => {\n      if(res['status'] == 1){\n        this.view_obj = res['data'][0];\n        console.log(\"view object apiii\",  this.view_obj);\n        localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n        this.router.navigate(['/request-scheduler/details',request_id]);\n      }\n      else{\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message,'', { timeOut: 2000 });\n      }\n    })\n  }\n getRowClass = (row) => {    \n    return {\n      'rejecteRequest': 1 == 1,\n    };\n   }\n}\n","<div class=\"\">\n  <div class=\"breadcrumb\">\n    <ul class=\"heading\">\n      <li><a>Cencelled</a></li>\n      <li>List</li>\n    </ul>\n  </div>\n\n  <div class=\"separator-breadcrumb border-top\"></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <div class=\"form-group\">\n        <input id=\"search\" (keyup)=\"interpreterRequestData($event.target.value)\" placeholder=\"Search\"\n          [formControl]=\"search_name\" class=\"form-control form-control-rounded\" type=\"text\">\n      </div>\n    </div>\n\n\n    <div class=\"col-md-12\">\n      <div class=\"card o-hidden\">\n        <ngx-datatable  [rowClass]=\"getRowClass\" *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\"\n          [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"\n          [rows]=\"filteredUser\">\n        <!--   <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n            <ng-template ngx-datatable-header-template>\n              S.No\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n              {{rowIndex +1}}\n            </ng-template>\n          </ngx-datatable-column> -->\n\n          <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n<ng-template ngx-datatable-header-template>\nCaseworker\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n{{row.caseworker_name}}\n</ng-template>\n</ngx-datatable-column> -->\n          <ngx-datatable-column name=\"IR\" prop=\"ir\">\n            <ng-template ngx-datatable-header-template>\n              IR\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.ir}}\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n            <ng-template ngx-datatable-header-template>\n              Client Name\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.client_name}}\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n            <ng-template ngx-datatable-header-template>\n              LOB\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.lob_name}}\n            </ng-template>\n          </ngx-datatable-column>\n\n          <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n            <ng-template ngx-datatable-header-template>\n              Assignment Type\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.assignment_type}}\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n            <ng-template ngx-datatable-header-template>\n              Language\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.lang_name}}\n            </ng-template>\n          </ngx-datatable-column>\n\n          <!-- <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n            <ng-template ngx-datatable-header-template>\n              Cell Phone\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n            </ng-template>\n          </ngx-datatable-column> -->\n          <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n              <span title=\"Requested date\">Requested date</span>\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n            </ng-template>\n          </ngx-datatable-column>\n          <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                      <ng-template ngx-datatable-header-template>\n                          Appointment Type\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          {{row.appointment_type}}\n                      </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                      <ng-template ngx-datatable-header-template>\n                          Cell Phone\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          {{row.cell_phone | mask: '(000) 000-0000'}}\n                      </ng-template>\n                  </ngx-datatable-column> -->\n          <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n<ng-template ngx-datatable-header-template>\nRequester\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n{{row.requester_name}}\n</ng-template>\n</ngx-datatable-column> -->\n          <!-- <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\">\n                      <ng-template ngx-datatable-header-template>\n                          Interpreter\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          {{row.name}}\n                      </ng-template>\n                  </ngx-datatable-column>\n\n                  <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                      <ng-template ngx-datatable-header-template>\n                          Interpreter Mobile\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          {{row.mobile | mask: '(000) 000-0000'}}\n                      </ng-template>\n                  </ngx-datatable-column> -->\n\n          <!-- <ngx-datatable-column>\n                      <ng-template ngx-datatable-header-template>\n                          <span title=\"Requested date\">Requested date</span>\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n                      </ng-template>\n                  </ngx-datatable-column> -->\n\n          <!-- <ngx-datatable-column>\n                      <ng-template ngx-datatable-header-template>\n                          <span title=\"Appointment date\"> Appointment date</span>\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                          <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n                      </ng-template>\n                  </ngx-datatable-column> -->\n\n          <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n            <ng-template ngx-datatable-header-template>Status\n            </ng-template>\n\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              Canceled\n            </ng-template>\n\n          </ngx-datatable-column>\n\n          <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n            <ng-template ngx-datatable-header-template>Action\n            </ng-template>\n\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail(row.ris_id)\">View</button>\n            </ng-template>\n          </ngx-datatable-column>\n\n\n\n\n\n\n          <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n<ng-template ngx-datatable-header-template *ngIf=\"roleId=='1';then Status; else Actions\">\n</ng-template>\n<ng-template ngx-datatable-header-template #Status>Status\n</ng-template>\n<ng-template ngx-datatable-header-template #Actions>Actions\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Status>\n<button class=\"btn btn-outline-secondary ml-2\" >Request Accept</button>\n</ng-template>\n<ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Actions>\n<button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>\n<button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>\n</ng-template>\n</ngx-datatable-column>\n-->\n        </ngx-datatable>\n      </div>\n      <!-- <ng-container *ngIf=\"list_Obj?.length <= 0\">\n        No Data Found\n      </ng-container> -->\n        <div class=\"col-md-12 text-center findnew\" *ngIf=\"list_Obj?.length <= 0\">\n                <img src=\"../assets/images/nosearch.png\"><br><br>\n                <h5><b>We couldn't find what you're looking for</b></h5>\n </div>\n    </div>\n\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-interpreter-request-list',\n  templateUrl: './interpreter-request-list.component.html',\n  styleUrls: ['./interpreter-request-list.component.scss']\n})\nexport class InterpreterRequestListComponent implements OnInit {\n  view_obj;\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  resp_msg;\n \n  \n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service:HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit(){\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n\n    console.log(\"userId-\",this.userId)\n    // console.log(\"roleId-\",this.roleId)\n    this.PendingRequestData('1');\n    // this.interpreterRequestData();\n    // this.searchControl.valueChanges\n    // .pipe(debounceTime(200))\n    // .subscribe(value => {\n    //   this.filerData(value);\n    // });\n    /*this.roleData = JSON.parse(localStorage.getItem('Allpermission'));\n    this.array_Obj = this.roleData['data'][0];\n    if(this.array_Obj.id){\n      this.array_Obj = this.roleData['data'][0];\n      console.log(\"roleData\", this.array_Obj);\n    }\n    */\n  }\n\n  \n/*========== Search Filter For Table Start Here========*/\n  filerData(val) {\n    if (val) {\n      val = val.toLowerCase();\n    } else {\n      console.log(\"xxxxxxx\",this.filteredUser);\n      return this.filteredUser = [... this.userData];\n    }\n\n    const columns = Object.keys( this.userData[0]);\n    if (!columns.length) {\n      return;\n    }\n\n    const rows =  this.userData.filter(function(d) {\n      for (let i = 0; i <= columns.length; i++) {\n        const column = columns[i];\n        // console.log(d[column]);\n        if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n          return true;\n        }\n      }\n    });\n    this.filteredUser = rows;\n  }\n/*========== Search Filter For Table End Here========*/\n\n/*========== Pending Request Start Here========*/\n    PendingRequestData(e){\n      this.allData = this.search_name.value;\n      this.startDate = this.range.value.start_date;\n      this.endDate = this.range.value.end_date;\n      this.service.AllPendingRequest(this.allData,this.startDate,this.endDate,this.userId)\n      .subscribe(res => {\n      if(res['status']=='1'){\n        console.log(\"api response\",res);\n        this.list_Obj = res['data'];\n        this.userData = [...res['data']];\n        // console.log(\"listttttttt\", this.list_Obj);\n        this.filteredUser = this.list_Obj;\n      }  \n    });\n}\n/*========== Pending Request End Here========*/\n\n\n  \n//   interpreterRequestData(){\n//     this.service.interpreterRequestList(this.roleId,this.userId,'1')\n//     .subscribe(res => {\n//       if(res['status']=='1'){\n//         console.log(\"api response\",res);\n//         this.list_Obj = res['data'];\n//         this.userData = [...res['data']];\n//         // console.log(\"listttttttt\", this.list_Obj);\n//         this.filteredUser = this.list_Obj;\n//       }\n       \n//     });\n// }\n\n\n/*========== Accept/Denay Through Interpreter Start Here========*/\n\n// requestComplete(id, modal) {\ninterpreterReply(ris_id,res_type,modal){\n \n  this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.service.interpreterReqReply(this.userId,ris_id,res_type)\n            .subscribe(res => {\n              console.log(\"res---\", res)\n              this.status_msg = res;\n              if (res['status'] == '1') {\n                this.toastr.success(this.status_msg.message,'', { timeOut: 1000, positionClass: 'toast-top-center' });\n                // location.reload();\n\n                if(res_type=='1'){\n                  this.router.navigate(['/interpreter-request/accept-list']);\n                }else{\n                  this.router.navigate(['/interpreter-request/cancelled-list']);\n                }\n                \n                // this.interpreterRequestData();\n              }else{\n                this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n                this.router.navigate(['/interpreter-request/list']);\n              }\n            })\n      }, (reason) => {\n  });\n}\n/*========== Accept/Declined Through Interpreter End Here========*/\n getRowClass = (row) => {    \n    return {\n      'newRequest': row.status == \"0\",\n      'broadcastRequest': row.status == \"1\",\n      'progressRequest': row.status == \"2\",\n      'completeRequest': row.status == \"3\",\n      'rejecteRequest': row.status == \"4\",\n    };\n   }\n/*========== Show Details Start Here========*/\n\nviewDetail(request_id){\n  console.log(\"id--\",  request_id);\n  this.service.getRequestDetail(request_id).subscribe(res => {\n    if(res['status'] == 1){\n      this.view_obj = res['data'][0];\n      console.log(\"view object\",  this.view_obj);\n      localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n      this.router.navigate(['/request-scheduler/details',request_id])\n    }else{\n      this.resp_msg = res;\n      this.toastr.error(this.resp_msg.message,'', { timeOut: 2000, positionClass: 'toast-top-center' });\n    }\n      \n  })\n}\n/*========== Show Details End Here========*/\n\n\n/*\n  interpreterReply_old(user_id,ris_id,res_type,modal){\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n    this.service.interpreterReqReply(user_id,ris_id,res_type).subscribe(res => {\n      this.status_msg = res;\n        if (res['status'] == '1') {\n          this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n          // location.reload();\n          this.router.navigate(['/interpreter-request/reject-list']);\n          // this.interpreterRequestData();\n        }else{\n          this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n          this.router.navigate(['/interpreter-request/list']);\n        }\n    })\n    });\n  }\n*/\n  /*========== Number of Interpreter Popup Open Start Here========*/\n\n  numOfInterpreter(id,totalInterpreter,modal){\n    // this.router.navigate(['/interpreter-request/interpreter-history']);\n    // console.log(\"iddddddddddd\",id);\n    // localStorage.setItem('interhistory', JSON.stringify(id));\n    console.log(\"totalInterpreter\",totalInterpreter)\n    if(totalInterpreter==0){\n      this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n    }else{\n      // this.router.navigate(['/languages/interpreter-detail']);\n        this.router.navigate(['/interpreter/interpreter-list/',id,2]);\n        // interpreter-list/:id/:type\n    }\n\n  }\n\n  /*========== Number of Interpreter Popup Open End Here========*/\n}\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n      <ul class=\"heading\">\n          <li><a>Broadcasting</a></li>\n          <li>List</li>\n      </ul>\n  </div>\n    \n      <div class=\"separator-breadcrumb border-top\"></div>\n  \n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <div class=\"form-group\">\n            <input id=\"search\" (keyup)=\"PendingRequestData($event.target.value)\" placeholder=\"Search\" [formControl]=\"search_name\"  class=\"form-control form-control-rounded\" type=\"text\">\n          </div>\n    </div>\n\n    <div class=\"col-md-4 dummy_text\">\n      <mat-form-field appearance=\"fill\">\n        <!-- <mat-label>Enter a date range</mat-label> -->\n        <mat-date-range-input [formGroup]=\"range\" \n        [rangePicker]=\"picker\">\n          <input matStartDate formControlName=\"start_date\" (dateChange)=\"PendingRequestData($event.target.value)\" placeholder=\"Start date\">\n          <input matEndDate formControlName=\"end_date\" (dateChange)=\"PendingRequestData($event.target.value)\" placeholder=\"End date\">\n\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n      </mat-form-field>\n    </div>\n\n\n        <div class=\"col-md-12 lang_block\">\n            <div class=\"card  o-hidden\">\n              <ngx-datatable *ngIf=\"filteredUser?.length\"\n                style=\"height: 500px; box-shadow: none\"\n                class=\"material fullscreen\"\n                [columnMode]=\"'force'\"\n                [headerHeight]=\"50\"\n                [footerHeight]=\"50\"\n                [rowHeight]=\"60\"\n                [scrollbarV]=\"true\"\n                [rows]=\"filteredUser\" [rowClass]=\"getRowClass\">\n                <!-- <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                  <ng-template ngx-datatable-header-template>\n                   S.No\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                      {{rowIndex +1}}\n                  </ng-template>\n                 </ngx-datatable-column> -->\n                 <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                  <ng-template ngx-datatable-header-template>\n                    IR\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.ir}}\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                  <ng-template ngx-datatable-header-template>\n                    Client Name\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.client_name}}\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                  <ng-template ngx-datatable-header-template>\n                    LOB\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.lob_name}}\n                  </ng-template>\n                </ngx-datatable-column>\n      \n                <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                  <ng-template ngx-datatable-header-template>\n                    Assignment Type\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.assignment_type}}\n                  </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n                  <ng-template ngx-datatable-header-template>\n                    Language\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.lang_name}}\n                  </ng-template>\n                </ngx-datatable-column>\n                 <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                  <ng-template ngx-datatable-header-template>\n                    Caseworker\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.caseworker_name}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n\n                 <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                  <ng-template ngx-datatable-header-template>\n                    Appointment Type\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.appointment_type}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n              <!--   <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                  <ng-template ngx-datatable-header-template>\n                    Cell Phone\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n                  <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                      <ng-template ngx-datatable-header-template>\n                        Requester\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.requester_name}}\n                      </ng-template>\n                  </ngx-datatable-column> -->\n                  <!-- <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\" *ngIf=\"roleId=='1'\">\n                    <ng-template ngx-datatable-header-template>\n                       No. Of Interpreter\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        <span class=\"Cursor_Point\" (click)=\"numOfInterpreter(row.ris_id,row.no_of_interpreter,interpreterConfirmModal)\">{{row.no_of_interpreter}}</span>\n                    </ng-template>  \n                </ngx-datatable-column> -->\n                \n                <!-- <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                  <ng-template ngx-datatable-header-template>\n                    Interpreter Mobile\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.mobile | mask: '(000) 000-0000'}}\n                  </ng-template>  \n               </ngx-datatable-column> -->\n\n               <ngx-datatable-column>\n                <ng-template ngx-datatable-header-template>\n                  <span title=\"Requested date\">Requested date</span>\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n                </ng-template>  \n            </ngx-datatable-column>\n\n            <!-- <ngx-datatable-column>\n              <ng-template ngx-datatable-header-template>\n                <span title=\"Appointment date\">Appointment date</span>\n              </ng-template>\n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n              </ng-template>  \n          </ngx-datatable-column> -->\n             \n              <ngx-datatable-column [width]=\"150\" [sortable]=\"false\">\n                <ng-template ngx-datatable-header-template>Status\n                </ng-template>\n                \n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" >\n                             <span *ngIf=\"row.status==0\">New Request</span>\n                            <span *ngIf=\"row.status==1\">Broadcasting</span>\n                            <span *ngIf=\"row.status==2\">In Progress</span>\n                            <span *ngIf=\"row.status==3\">Completed</span>\n                            <span *ngIf=\"row.status==4\">Reassign</span>\n                </ng-template>\n               \n            </ngx-datatable-column>\n            \n            \n             <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" >\n                <ng-template ngx-datatable-header-template>Action\n                </ng-template>\n                \n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail(row.ris_id)\">View</button>  \n                   <button *ngIf=\"roleId !='1' && roleId !='4' \" class=\"btn btn-outline-danger ml-2\"\n                  (click)=\"interpreterReply(row.ris_id,'1', acceptConfirmModal)\">\n                  Accept\n                  </button>\n\n                  <button *ngIf=\"roleId != '1' && roleId !='4'\" class=\"btn btn-outline-danger ml-2\"\n                  (click)=\"interpreterReply(row.ris_id,'3', rejectConfirmModal)\">\n                  Reject\n                  </button> \n              </ng-template>\n            </ngx-datatable-column>\n            \n            \n\n            </ngx-datatable>\n          </div>\n        <!--   <ng-container *ngIf=\"list_Obj?.length <= 0\">\n              No Data Found\n          </ng-container> -->\n\n          <div class=\"col-md-12 text-center findnew\" *ngIf=\"list_Obj?.length <= 0\">\n                <img src=\"../assets/images/nosearch.png\"><br><br>\n                <h5><b>We couldn't find what you're looking for</b></h5>\n            </div>\n        </div>\n          \n      </div>\n  </div>  \n  <ng-template #acceptConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>Are you sure? you want to Accept Request?</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n  </ng-template>\n\n\n  <ng-template #rejectConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>Are you sure? you want to Reject Request?</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n  </ng-template>\n\n  <ng-template #interpreterConfirmModal let-modal>\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\"\n        (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <p><strong>There is no interpreter available.</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\"\n        (click)=\"modal.dismiss('cancel')\">Cancel</button>\n      <!-- <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button> -->\n    </div>\n  </ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-all-request',\n  templateUrl: './all-request.component.html',\n  styleUrls: ['./all-request.component.scss']\n})\nexport class AllRequestComponent implements OnInit {\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  reminder;\n \n  view_obj;\n  resp_msg;\n  status;\n  email_formdata;\n  status_formdata;\n  searchEmail = '';\n  searchStatus = '';\n  request_status: FormControl = new FormControl();\n  searchControl: FormControl = new FormControl();\n  search_email: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(  private productService: ProductService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router) { }\n\n  ngOnInit(){\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n    console.log(\"============this.role id\",this.roleId);\n    this.interpreterAllRequest('1');\n    this.GetAllPagesPermission();\n    this.searchControl.valueChanges\n      .pipe(debounceTime(200))\n      .subscribe(value => {\n        this.filerData(value);\n      });\n  } \n\n     /*========== Filter Start Here========*/\n      filerData(val) {\n        if (val) {\n          val = val.toLowerCase();\n        } else {\n          console.log(\"xxxxxxx\", this.filteredUser);\n          return this.filteredUser = [... this.userData];\n        }\n\n        const columns = Object.keys(this.userData[0]);\n        if (!columns.length) {\n          return;\n        }\n\n        const rows = this.userData.filter(function (d) {\n          for (let i = 0; i <= columns.length; i++) {\n            const column = columns[i];\n            // console.log(d[column]);\n            if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n              return true;\n            }\n          }\n        });\n        this.filteredUser = rows;\n      }\n       /*========== Filter End Here========*/\n\n       /*========== All Request List Start Here========*/\n      interpreterAllRequest(e) {\n        // this.allData = this.search_name.value;\n        this.startDate = this.range.value.start_date;\n        this.endDate = this.range.value.end_date;\n\n\n        this.status = this.request_status.value ;\n      \n        this.searchStatus = this.status ;\n        // console.log(\"statusssss\",this.searchStatus );\n         this.email_formdata = this.search_email.value;\n         this.searchEmail = this.email_formdata ;\n\n        //  alert(this.status);\n\n         this.service.interpreterAllRequestList(this.searchStatus,this.searchEmail,this.startDate,this.endDate)\n          .subscribe(res => {\n            if (res['status'] == '1') {\n              console.log(\"api response\", res);\n              this.list_Obj = res['data'];\n              this.userData = [...res['data']];\n              this.filteredUser = this.list_Obj;\n            }else{\n              this.list_Obj = [];\n              this.userData = [];\n              this.filteredUser = [];\n            }\n\n          });\n      }\n       /*========== All Request List End Here========*/\n\n       /*========== Detail Start Here========*/\n      viewDetail(request_id){\n        console.log(\"id--\",  request_id);\n        this.service.getRequestDetail(request_id).subscribe(res => {\n          if(res['status'] == 1){\n            this.view_obj = res['data'][0];\n            console.log(\"api data\",  this.view_obj);\n            localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n            this.router.navigate(['/request-scheduler/details',request_id]);\n          }else{\n            this.resp_msg = res;\n            this.toastr.error(this.resp_msg.message,'', { timeOut: 2000 , positionClass: 'toast-top-center' });\n          }\n            \n        })\n      }\n  PermissionData=[]\n      GetAllPagesPermission(){\n        this.service.get('getClientRoleMenusForPages/'+JSON.parse(localStorage.getItem('roleId'))).subscribe(res => {\n        this.PermissionData=res['data'];\n        console.log('PermissionData',this.PermissionData)\n        for (var i = 0; i < this.PermissionData.length; ++i) {\n                           var aa= document.getElementsByClassName('ClientViewId');\n\n           if(this.PermissionData[i].module_id == 7){\n               if(this.PermissionData[i].add_permission == 'true'){\n                 document.getElementById('ClientAddId').classList.remove('displayNone')\n               }else{\n                 document.getElementById('ClientAddId').classList.add('displayNone')\n              }\n\n               if(this.PermissionData[i].view_permission == 'true'){\n                 for (var nk = 0; nk < aa.length; ++nk) {\n                 document.getElementsByClassName('ClientViewId')[nk].classList.remove('displayNone')\n                 }\n\n               }else{\n                 for (var nk = 0; nk < aa.length; ++nk) {\n                 document.getElementsByClassName('ClientViewId')[nk].classList.add('displayNone')\n                 }\n              }\n           }else{\n                        document.getElementById('ClientAddId').classList.add('displayNone')\n                for (var nk = 0; nk < aa.length; ++nk) {\n                 document.getElementsByClassName('ClientViewId')[nk].classList.add('displayNone')\n                 }\n\n           }\n         } \n        })\n      }\n\n       /*========== Detail End Here========*/\n\n       newRequest(){\n        this.router.navigate(['/client-request/step-form']);\n       }\n\n}\n","<div class=\"\">\n  <div class=\"breadcrumb\">\n    <ul class=\"heading\">\n      <li><a>All Request</a></li>\n      <li>List</li>\n    </ul>\n  </div>\n\n\n  <div class=\"separator-breadcrumb border-top\"></div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <div class=\"form-group\">\n        <input id=\"search\" placeholder=\"Email\" (keyup)=\"interpreterAllRequest($event.target.value)\"\n          [formControl]=\"search_email\" class=\"form-control form-control-rounded\" type=\"text\">\n      </div>\n\n    </div>\n\n\n    <div class=\"col-md-2\">\n      <div class=\"form-group\">\n        <select class=\"form-control form-control-rounded\" (change)=\"interpreterAllRequest($event.target.value)\"\n          [formControl]=\"request_status\">\n          <option value=\"\">Select Status</option>\n\n          <option class=\"black-text bg-warning\" value=\"1\">New Request</option>\n          <option class=\"bg-black text-white\" value=\"2\">Broadcasting</option>\n          <option class=\"bg-primary text-white\" value=\"3\">In Progress</option>\n          <option class=\"bg-success black-text\" value=\"4\">Completed</option>\n          <option class=\"bg-danger text-white\" value=\"5\">Cancelled</option>\n          <option class=\"bg-default black-text\" value=\"6\">Unable To Fill</option>\n\n          <!-- <option class=\"text-warning\" value=\"1\">New Request</option>\n  <option class=\"assign-color\" value=\"2\">Broadcasting</option>\n  <option class=\"text-primary\" value=\"3\">In Progress</option>\n  <option class=\"text-success\" value=\"4\">Completed</option>\n  <option class=\"text-danger\" value=\"5\">Cancelled</option> -->\n\n\n\n        </select>\n      </div>\n    </div>\n\n    <div class=\"col-md-4 dummy_text\">\n      <mat-form-field appearance=\"fill\">\n        <!-- <mat-label>Enter a date range</mat-label> -->\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n          <input matStartDate formControlName=\"start_date\" (dateChange)=\"interpreterAllRequest($event.target.value)\"\n            placeholder=\"Start date\">\n          <input matEndDate formControlName=\"end_date\" (dateChange)=\"interpreterAllRequest($event.target.value)\"\n            placeholder=\"End date\">\n\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n      </mat-form-field>\n    </div>\n\n    <div id=\"ClientAddId\" class=\"col-md-2\">\n      <button class=\"btn btn-primary float-right\" (click)=\"newRequest()\">Create New Request</button>\n  </div>\n    <!-- <div class=\"col-md-2\">\n  <button class=\"btn btn-outline-secondary\" (click)=\"interpreterAllRequest()\">Apply</button>\n  </div> -->\n\n\n    <div class=\"col-md-12 lang_block\">\n      <div class=\"card o-hidden\">\n        <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\"\n          [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"\n          [rows]=\"filteredUser\">\n          <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n            <ng-template ngx-datatable-header-template>\n              S.No\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n              {{rowIndex +1}}\n            </ng-template>\n          </ngx-datatable-column>\n\n          <!-- <ngx-datatable-column name=\"Email\" prop=\"email\">\n            <ng-template ngx-datatable-header-template>\n              Email\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.email}}\n            </ng-template>\n          </ngx-datatable-column> -->\n\n\n          <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n            <ng-template ngx-datatable-header-template>\n              Language\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.lang_name}}\n            </ng-template>\n          </ngx-datatable-column>\n\n\n\n\n          <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n            <ng-template ngx-datatable-header-template>\n              Cell Phone\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.cell_phone | mask: '(000) 000-0000'}}\n            </ng-template>\n          </ngx-datatable-column>\n\n          <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n              <span title=\"Appointment date\"> Appointment date</span>\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <span title=\"{{row.date}}\"> {{row.date | date:'MM/dd/yyyy' }}</span>\n            </ng-template>\n          </ngx-datatable-column>\n\n          <ngx-datatable-column name=\"Site Contact\" prop=\"site_contact\">\n            <ng-template ngx-datatable-header-template>\n              Site Contact\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.site_contact | mask: '(000) 000-0000'}}\n            </ng-template>\n          </ngx-datatable-column>\n\n          <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" *ngIf=\"roleId=='1'\">\n            <ng-template ngx-datatable-header-template>Status\n            </ng-template>\n\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n\n              <span class=\"text-warning\" *ngIf=\"row.status==1\">New Request</span>\n              <span class=\"assign-color\" *ngIf=\"row.status==2\">Broadcasting</span>\n              <span class=\"text-primary\" *ngIf=\"row.status==3\">In Progress</span>\n              <span class=\"text-success\" *ngIf=\"row.status==4\">Completed</span>\n              <span class=\"text-danger\" *ngIf=\"row.status==5\">Canceled</span>\n              <!-- <span class=\"text-danger\" >Unable to fill</span> -->\n            </ng-template>\n\n          </ngx-datatable-column>\n\n\n          <ngx-datatable-column  [width]=\"120\" [sortable]=\"false\">\n            <ng-template ngx-datatable-header-template>Action\n            </ng-template>\n\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <button  class=\"ClientViewId btn btn-outline-secondary mr-1\" (click)=\"viewDetail(row.id)\">View</button>\n            </ng-template>\n          </ngx-datatable-column>\n        </ngx-datatable>\n      </div>\n      <ng-container *ngIf=\"list_Obj?.length <= 0\">\n        No Data Found\n      </ng-container>\n    </div>\n\n  </div>\n</div>\n\n<style type=\"text/css\">\n  .displayNone{\n    display: none !important;\n  }\n \n\n</style>","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\n// import { Component, OnInit,TemplateRef, ViewChild } from '@angular/core';\nimport { HttpService } from \"../../../shared/services/http.service\";\nimport { ValidationsService } from 'src/app/shared/services/validations.service';\nimport { FormGroup, FormBuilder, FormArray, Validators, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\n// import {} from 'googlemaps';\nimport { environment } from 'src/environments/environment';\n\nimport { HttpClient, HttpHeaders, HttpEvent } from '@angular/common/http';\n\nimport { MapsAPILoader } from '@agm/core';\nimport { DataLayerService } from 'src/app/shared/services/data-layer.service';\ninterface marker {\n\tlat: number;\n\tlng: number;\n\tlabel?: string;\n\tdraggable: boolean;\n  visible: boolean;\n  opacity: number;\n}\n@Component({\n  selector: 'app-step-forms',\n  templateUrl: './step-forms.component.html',\n  styleUrls: ['./step-forms.component.scss']\n})\nexport class StepFormsComponent implements OnInit {\n\n  latitude: number;\n  longitude: number;\n  zoom: number;\n  address: string;\n  private geoCoder;\n  lat_value:number;\n  long_value:number;\n  address1: string;\n  @ViewChild('search')\n  public searchElementRef: ElementRef;\n  \n  stepOneForm: FormGroup;\n  submitted: boolean;\n  public step1_Obj;\n  public languageObj;\n  step_Msg;\n  public newlanguageVal;\n\n  startTime;\n  endTime;\n  strStartTime;\n  strEndTime;\n\n  step1 = false;\n  myvar;\n  select_form: FormControl = new FormControl('no');\n  constructor(\n    public validation: ValidationsService,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    private router: Router,\n    private dl: DataLayerService,\n    public service: HttpService,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,private http:HttpClient\n\n  ) { }\n\n  ngOnInit(){\n    // this.GetAllPagesPermission()\n    this.createForm1();\n    this.languageList();\n    this.date_func();\n    this.mapsAPILoader.load().then(() => {\n      this.setCurrentLocation();\n      this.geoCoder = new google.maps.Geocoder;\n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement,{});\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          // console.log(\"latitude--\",this.latitude)\n          console.log(\"address--\",place.formatted_address);\n          this.address1 = place.formatted_address;\n\n\n          console.log(\"address are coming--\",this.address1);\n\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          // this.lat_value =  this.latitude;\n          // this.long_value =  this.longitude;\n          console.log(\"latitude 1--\", this.latitude)\n          console.log(\"longitude 2--\", this.longitude)\n          this.zoom = 12;\n        });\n      });\n    });\n    // }\n    \n  }\n\n  // GetAllPagesPermission(){\n  //       this.service.get('getClientRoleMenusForPages/'+JSON.parse(localStorage.getItem('roleId'))).subscribe(res => {\n  //      var count=0;\n  //       for (var i = 0; i < res['data'].length; ++i) {\n  //          if(res['data'][i].module_id == 7){\n  //           if(res['data'][i].add_permission == 'false'){\n  //                this.router.navigate(['/client-request/all-request-list']);    \n  //              }else{\n  //                count+=1\n  //              }\n  //          }else{\n  //            if(count == 0){\n  //                this.router.navigate(['/client-request/all-request-list']);    \n  //            }\n  //          }\n  //          }\n  //       })\n  //     }\n\n\n  /*==========Map Function Start Here========*/\n  private setCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.zoom = 8;\n        this.getAddress(this.latitude, this.longitude);\n      });\n    }\n  }\n  \n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 12;\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n  \n    });\n  }\n\n   /*==========Map Function End Here========*/\n  /*==========Step Form Value Start Here========*/\n  createForm1() {\n    this.stepOneForm = this.fb.group({\n      caseworker_name: ['',this.validation.name_validation],\n      requester_name: [''],\n      adams_county: ['',this.validation.name_validation],\n      office_phone: ['',this.validation.mobile_validator],\n      cell_phone: ['',this.validation.mobile_validator],\n      email_address: ['',this.validation.email_validator],\n      site_contact: [''],\n      case_name: ['',this.validation.name_validation],\n      client_name: ['',this.validation.name_validation],\n      trails: ['',this.validation.name_validation],\n      language: ['',this.validation.onlyRequired_validator],\n      nature_of_appointment:['',this.validation.name_validation],\n      date:['',this.validation.onlyRequired_validator],\n      start_time:['',this.validation.onlyRequired_validator],\n      end_time:['',this.validation.onlyRequired_validator],\n      simultaneous:['',this.validation.onlyRequired_validator],\n      address:['',this.validation.onlyRequired_validator],\n      latitude:[''],\n      longitude:[''],\n      type:['1'],\n      service_requested:['',this.validation.onlyRequired_validator],\n      })\n  }\n  /*==========Step Form Value End Here========*/\n\n   /*==========Today and future date function start here========*/\n   date_func(){\n     if(document.getElementsByName(\"setTodaysDate\") != null){\n      var today = new Date().toISOString().split('T')[0];\n     if(document.getElementsByName(\"setTodaysDate\")[0] != undefined){\n      document.getElementsByName(\"setTodaysDate\")[0].setAttribute('min', today);\n       }\n       }\n  }\n /*==========Today and future date function end here========*/\n\n newRequest(e){\n   console.log(e);\n   document.getElementById('firstFormId').classList.remove('displayNone')\n   this.myvar = e.target.value\n  }\n\n  languageList(){\n    this.service.getLanguage()\n    .subscribe(res => {\n        console.log(\"api responsee list\",res);\n        this.languageObj = res['data'];\n    });\n   }\n\n   onChange(id){\n    this.newlanguageVal = id.target.value;\n   }\n\n     /*==========Start and end time valid function start here========*/\n\n   start_end_time(e){ \n    var beginningTime = this.stepOneForm.value.start_time;\n    var endTime = this.stepOneForm.value.end_time;\n    // var beginningTime = moment(this.stepOneForm.value.start_time, 'h:mma');\n    // var endTime = moment(this.stepOneForm.value.end_time, 'h:mma');\n    if (beginningTime > endTime) {\n      this.stepOneForm.controls['start_time'].setValue('');\n      this.stepOneForm.controls['end_time'].setValue('');\n      this.toastr.error(\"Invalid Time\",'', { timeOut: 2000 });\n    }\n    if (beginningTime == endTime) {\n      this.stepOneForm.controls['start_time'].setValue('');\n      this.stepOneForm.controls['end_time'].setValue('');\n      this.toastr.error(\"Invalid Time\",'', { timeOut: 2000 });\n    }\n    if (beginningTime < endTime) {\n      // this.toastr.success(\"Valid Time \",'', { timeOut: 2000 });\n    }\n   }\n    /*==========Start and end time valid function end here========*/\n\n     /*==========Form submit function start here========*/\n     saveForm(){\n      this.stepOneForm.value.language =  this.newlanguageVal;\n      this.stepOneForm.value.address = this.address1;\n      this.stepOneForm.value.latitude = this.latitude;\n      this.stepOneForm.value.longitude = this.longitude;\n     \n      this.submitted = true;\n      if (this.stepOneForm.invalid) {\n        return;\n      }\n      this.submitted = false;\n      console.log(\"all val in form\", this.stepOneForm.value);\n      this.service.getStepTwelveForm(this.stepOneForm.value)\n      .subscribe(res => {\n          console.log(\"api response\",res);\n          this.step1_Obj = res;\n          console.log(\"ressss\",this.step1_Obj);\n          this.toastr.success(this.step1_Obj.message,'', { timeOut: 2000 });\n          this.router.navigate(['/client-request/all-request-list']);\n      });\n    }\n\n     /*==========Form submit function end here========*/\n  \n\n}\n","<div class=\"breadcrumb\">\n    <!-- <h1>Language</h1> -->\n    <ul class=\"heading\">\n        <li><a>Step Form</a></li>\n        <li>Add</li>\n    </ul>\n</div>\n\n\n\n<div class=\"separator-breadcrumb border-top\"></div>\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <div class=\"card mb-4\">\n            <div class=\"card-body\">\n                <div class=\"col-md-3 pl-0\">\n                    <div class=\"form-group\">\n                      <select class=\"form-control\"  (change)=\"newRequest($event)\"  [formControl]=\"select_form\">\n                        <option value=\"no\" selected=\"\" disabled>Select Form</option>\n                        <option  value=\"newrequest\">New Request</option>\n                      </select>\n                    </div>\n                </div>\n                <div id=\"firstFormId\" class=\"displayNone\">\n                <form  [formGroup]=\"stepOneForm\">\n\n                    <h4>Information Required:</h4>\n                    <h5>Requester Information</h5>\n\n                    <div class=\"row\">\n                        <div class=\"col-md-6 form-group mb-3\">\n                            <label>Caseworker Name</label>\n                            <input type=\"text\" formControlName=\"caseworker_name\" class=\"form-control\"\n                                placeholder=\"Caseworker Name\">\n                            <div *ngIf=\"stepOneForm.controls['caseworker_name'].errors && ( !stepOneForm.controls['caseworker_name'].pristine || submitted ||stepOneForm.controls['caseworker_name'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['caseworker_name'].errors.required\">Caseworker Name\n                                    is required.</div>\n                                <div [hidden]=\"!stepOneForm.controls.caseworker_name.hasError('minlength')\">Caseworker\n                                    Name length should be minimum 2 characters.</div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Requester Name (if different than caseworker)</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"requester_name\"\n                                placeholder=\"Requester Name (if different than caseworker)\">\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Adams County Department/Division</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"adams_county\"\n                                placeholder=\"Adams County Department/Division\">\n                            <div *ngIf=\"stepOneForm.controls['adams_county'].errors && ( !stepOneForm.controls['adams_county'].pristine || submitted ||stepOneForm.controls['adams_county'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['adams_county'].errors.required\">County is\n                                    required.</div>\n                                <div [hidden]=\"!stepOneForm.controls.adams_county.hasError('minlength')\">County length\n                                    should be minimum 2 characters.</div>\n                            </div>\n                        </div>\n\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Office Phone</label>\n                            <input type=\"text\" class=\"form-control\"\n                                onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \"\n                                formControlName=\"office_phone\" placeholder=\"Office Phone\">\n                            <div *ngIf=\"stepOneForm.controls['office_phone'].errors && ( !stepOneForm.controls['office_phone'].pristine || submitted ||stepOneForm.controls['office_phone'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['office_phone'].errors.required\">Office Phone is\n                                    required.</div>\n                                <div [hidden]=\"!stepOneForm.controls['office_phone'].hasError('minlength')\">Office Phone\n                                    length should be minimum 8 characters.</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Cell Phone</label>\n                            <input type=\"text\" class=\"form-control\"\n                                onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \"\n                                formControlName=\"cell_phone\" placeholder=\"Cell Phone\">\n                            <div *ngIf=\"stepOneForm.controls['cell_phone'].errors && ( !stepOneForm.controls['cell_phone'].pristine || submitted ||stepOneForm.controls['cell_phone'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['cell_phone'].errors.required\">Cell Phone is\n                                    required.</div>\n                                <div [hidden]=\"!stepOneForm.controls['cell_phone'].hasError('minlength')\">Cell Phone\n                                    length should be minimum 8 characters.</div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Email Address</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"email_address\"\n                                placeholder=\"Email Address\">\n                            <div *ngIf=\"stepOneForm.controls['email_address'].errors && ( !stepOneForm.controls['email_address'].pristine || submitted ||stepOneForm.controls['email_address'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['email_address'].errors.required\">Email Address is\n                                    required.</div>\n                                <div [hidden]=\"!stepOneForm.controls['email_address'].errors.pattern\">Invalid email.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Site Contact (if different from caseworker/requester)</label>\n                            <input type=\"text\" class=\"form-control\"\n                                onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \"\n                                formControlName=\"site_contact\"\n                                placeholder=\"Site Contact (if different from caseworker/requester)\">\n                        </div>\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Case Name</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"case_name\" placeholder=\"Case Name\">\n                            <div *ngIf=\"stepOneForm.controls['case_name'].errors && ( !stepOneForm.controls['case_name'].pristine || submitted ||stepOneForm.controls['case_name'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['case_name'].errors.required\">Case Name is\n                                    required.</div>\n                                <div [hidden]=\"!stepOneForm.controls.case_name.hasError('minlength')\">Case Name length\n                                    should be minimum 2 characters.</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <h5>Appointment Information</h5>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Client Name (first and last, as relevant)</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"client_name\"\n                                placeholder=\"Client Name (first and last, as relevant)\">\n                            <div *ngIf=\"stepOneForm.controls['client_name'].errors && ( !stepOneForm.controls['client_name'].pristine || submitted ||stepOneForm.controls['client_name'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['client_name'].errors.required\">Client Name is\n                                    required.</div>\n                                <div [hidden]=\"!stepOneForm.controls.client_name.hasError('minlength')\">Client Name\n                                    length should be minimum 2 characters.</div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Trails / Ref#</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"trails\"\n                                placeholder=\"Trails / Ref#\">\n                            <div *ngIf=\"stepOneForm.controls['trails'].errors && ( !stepOneForm.controls['trails'].pristine || submitted ||stepOneForm.controls['trails'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['trails'].errors.required\">Trails is required.\n                                </div>\n                                <div [hidden]=\"!stepOneForm.controls.trails.hasError('minlength')\">Trails length should\n                                    be minimum 2 characters.</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Language</label>\n                            <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"onChange($event)\" formControlName=\"language\"\n                                    id=\"language\" name=\"language\">\n                                    <option value=\"\">Language</option>\n                                    <option *ngFor=\"let lan of languageObj\" [value]=\"lan.id\">\n                                        {{lan?.name}}\n                                    </option>\n                                </select>\n                                <!-- </div> -->\n                            </div>\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"language\" placeholder=\"Language\"> -->\n                            <div *ngIf=\"stepOneForm.controls['language'].errors && ( !stepOneForm.controls['language'].pristine || submitted ||stepOneForm.controls['language'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['language'].errors.required\">Language is required.\n                                </div>\n                                <!-- <div [hidden]=\"!stepOneForm.controls.caseworker_name.hasError('minlength')\">caseworker_name length should be minimum 2 characters.</div> -->\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Nature of Appointment / Appointment type</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"nature_of_appointment\"\n                                placeholder=\"Nature of Appointment / Appointment type\">\n                            <div *ngIf=\"stepOneForm.controls['nature_of_appointment'].errors && ( !stepOneForm.controls['nature_of_appointment'].pristine || submitted ||stepOneForm.controls['nature_of_appointment'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['nature_of_appointment'].errors.required\">Nature of\n                                    Appointment is required.</div>\n                                <div [hidden]=\"!stepOneForm.controls.nature_of_appointment.hasError('minlength')\">Nature\n                                    of Appointment length should be minimum 2 characters.</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Date</label>\n                            <input type=\"date\" name=\"setTodaysDate\" class=\"form-control\" formControlName=\"date\"\n                                placeholder=\"Date\">\n                            <div *ngIf=\"stepOneForm.controls['date'].errors && ( !stepOneForm.controls['date'].pristine || submitted ||stepOneForm.controls['date'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['date'].errors.required\">Date is required.</div>\n                                <!-- <div [hidden]=\"!stepOneForm.controls.caseworker_name.hasError('minlength')\">caseworker_name length should be minimum 2 characters.</div> -->\n                            </div>\n                        </div>\n\n                        <div class=\"col-md-6 form-group mb-3\">\n                            <label>If simultaneous, how many receivers required?</label>\n                            <div class=\"form-check\">\n                                <label class=\"form-check-label\" for=\"gridRadios1\">\n                                <input class=\"form-check-input radio-inline \" \n                               formControlName=\"simultaneous\" type=\"radio\" id=\"gridRadios1\"\n                               value=\"0\">\n                                No\n                                </label>\n                          \n                                <label class=\"form-check-label pl-5\" for=\"gridRadios2\">\n                                <input class=\"form-check-input radio-inline\" \n                                 formControlName=\"simultaneous\" type=\"radio\" id=\"gridRadios2\"  \n                                 value=\"1\">\n                                 Yes\n                                </label>\n                            </div>\n                            <div *ngIf=\"stepOneForm.controls['simultaneous'].errors && (!stepOneForm.controls['simultaneous'].pristine || submitted ||stepOneForm.controls['simultaneous'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['simultaneous'].errors.required\">Simultaneous is required.</div> \n                              </div>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Start Time</label>\n                            <input type=\"time\" class=\"form-control\" id=\"txtStartTime\" formControlName=\"start_time\" placeholder=\"Start Time\">\n                            <div *ngIf=\"stepOneForm.controls['start_time'].errors && ( !stepOneForm.controls['start_time'].pristine || submitted ||stepOneForm.controls['start_time'].touched )\" class=\"error-msg\">\n                               <div [hidden]=\"!stepOneForm.controls['start_time'].errors.required\">Start Time is required.</div>\n                               <!-- <div [hidden]=\"!stepOneForm.controls.caseworker_name.hasError('minlength')\">caseworker_name length should be minimum 2 characters.</div> -->\n                             </div>\n                        </div>\n\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Anticipated End Time</label>\n                            <input type=\"time\"  class=\"form-control\" id=\"txtEndTime\" (change)=\"start_end_time($event)\" formControlName=\"end_time\" placeholder=\"Anticipated End Time\">\n                            <div *ngIf=\"stepOneForm.controls['end_time'].errors && ( !stepOneForm.controls['end_time'].pristine || submitted ||stepOneForm.controls['end_time'].touched )\" class=\"error-msg\">\n                               <div [hidden]=\"!stepOneForm.controls['end_time'].errors.required\">End Time is required.</div>\n                               <!-- <div [hidden]=\"!stepOneForm.controls.caseworker_name.hasError('minlength')\">caseworker_name length should be minimum 2 characters.</div> -->\n                             </div> \n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Service Requested</label>\n                            <div class=\"form-check\">\n                                <label class=\"form-check-label\" for=\"gridRadios1\">\n                                <input class=\"form-check-input radio-inline\" \n                               formControlName=\"service_requested\" type=\"radio\" id=\"gridRadios11\"\n                               value=\"1\">\n                               Consecutive\n                                </label>\n                          \n                                <label class=\"form-check-label pl-5\" for=\"gridRadios2\">\n                                <input class=\"form-check-input radio-inline\" \n                                 formControlName=\"service_requested\" type=\"radio\" id=\"gridRadios22\"  \n                                 value=\"2\">\n                                 Simultaneous\n                                </label>\n                            </div>\n                            <div *ngIf=\"stepOneForm.controls['service_requested'].errors && (!stepOneForm.controls['service_requested'].pristine || submitted ||stepOneForm.controls['service_requested'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!stepOneForm.controls['service_requested'].errors.required\">Service requested is required.</div> \n                              </div>\n                        </div>\n\n                        <div class=\"col-sm-6 form-group mb-3\">\n                            <label>Address</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"address\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n                            <!-- <textarea class=\"form-control\" formControlName=\"address\" rows=\"3\" placeholder=\"Address\"></textarea> -->\n                            <div *ngIf=\"stepOneForm.controls['address'].errors && ( !stepOneForm.controls['address'].pristine || submitted ||stepOneForm.controls['address'].touched )\" class=\"error-msg\">\n                               <div [hidden]=\"!stepOneForm.controls['address'].errors.required\">Address is required.</div>\n                               <!-- <div [hidden]=\"!stepOneForm.controls.trails.hasError('minlength')\">Address length should be minimum 2 characters.</div> -->\n                             </div> \n                        </div>\n\n                    </div>\n                    <input type=\"hidden\" class=\"form-control\" formControlName=\"latitude\" >\n                    <input type=\"hidden\" class=\"form-control\" formControlName=\"longitude\"> \n\n                    <!-- <div class=\"col-sm-6 float-left\">\n                        <button type=\"button\" class=\"btn resetbtn\"  (click)=\"stepOneForm.reset()\" >Reset</button>\n                     </div>\n                    <div class=\"col-sm-6 float-right\">\n                       <button type=\"button\" (click)=\"saveForm();stepOneForm.reset()\"  class=\"btn btn-primary\">Submit</button>\n                    </div> -->\n\n                    <div class=\"form-group row\">\n                        <div class=\"col-sm-12\">\n                            <button type=\"button\" (click)=\"saveForm()\" class=\"btn btn-primary\">Save</button>\n                        </div>\n                    </div>\n                </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style type=\"text/css\">\n    .displayNone{\n        display: none;\n    }\n</style>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\nimport {NgbRatingConfig} from '@ng-bootstrap/ng-bootstrap';\nimport { ValidationsService } from 'src/app/shared/services/validations.service';\n\n@Component({\n  selector: 'app-accept-request',\n  templateUrl: './accept-request.component.html',\n  styleUrls: ['./accept-request.component.scss']\n})\nexport class AcceptRequestComponent implements OnInit {\n\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  reminder;\n  noteForm: FormGroup;\n  view_obj;\n  resp_msg;\n  ReadOnlyStyleGuideNotes: boolean =false;\n  call_check:boolean = false;\n  currentRate = 0;\n  // searchControl: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  submitted:boolean;\n  endDate;\n  ratingForm;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router,\n    public config: NgbRatingConfig,\n    public validation: ValidationsService\n  ) {\n    config.max = 5;\n   }\n\n\n  ngOnInit() {\n   \n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n    // console.log(\"userId-\",this.userId)\n    // console.log(\"roleId-\",this.roleId)\n    this.createRatingForm();\n    this.interpreterRequestData('1');\n    // this.searchControl.valueChanges\n    //   .pipe(debounceTime(200))\n    //   .subscribe(value => {\n    //     this.filerData(value);\n    //   });\n      this.createForm();\n    /*this.roleData = JSON.parse(localStorage.getItem('Allpermission'));\n    this.array_Obj = this.roleData['data'][0];\n    if(this.array_Obj.id){\n      this.array_Obj = this.roleData['data'][0];\n      console.log(\"roleData\", this.array_Obj);\n    }\n    */\n  }\n   /*========== Form Value Start Here========*/\n createForm() {\n  this.noteForm = this.fb.group({\n    notes:['']\n  });\n}\ncreateRatingForm() {\n  this.ratingForm = this.fb.group({\n    // rating: ['', this.validation.onlyRequired_validator],\n    // review:['',this.validation.onlyRequired_validator],\n    rating: ['1', this.validation.onlyRequired_validator],\n    review:['',this.validation.onlyRequired_validator],\n  })\n}\ncommingSoon(){\n    this.toastr.warning('Comming Soon')\n\n}\n getRowClass = (row) => {    \n    return {\n      'newRequest': row.status == \"0\",\n      'broadcastRequest': row.status == \"1\",\n      'progressRequest': row.status == \"2\",\n      'completeRequest': row.status == \"3\",\n      'rejecteRequest': row.status == \"4\",\n    };\n   }\n\n   \n/*========== Form Value End Here========*/\n\n  // filerData(val) {\n  //   if (val) {\n  //     val = val.toLowerCase();\n  //   } else {\n  //     console.log(\"xxxxxxx\", this.filteredUser);\n  //     return this.filteredUser = [... this.userData];\n  //   }\n\n  //   const columns = Object.keys(this.userData[0]);\n  //   if (!columns.length) {\n  //     return;\n  //   }\n\n  //   const rows = this.userData.filter(function (d) {\n  //     for (let i = 0; i <= columns.length; i++) {\n  //       const column = columns[i];\n  //       // console.log(d[column]);\n  //       if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n  //         return true;\n  //       }\n  //     }\n  //   });\n  //   this.filteredUser = rows;\n  // }\n\n  interpreterRequestData(e) {\n    this.allData = this.search_name.value;\n    this.startDate = this.range.value.start_date;\n    this.endDate = this.range.value.end_date;\n    // this.service.interpreterRequestList(this.roleId, this.userId, '2', this.allData,\n    this.service.interpreterRequestList(this.roleId, this.userId, '1', this.allData,\n    this.startDate,this.endDate)\n      .subscribe(res => {\n        if (res['status'] == '1') {\n          console.log(\"api response\", res);\n          this.list_Obj = res['data'];\n          this.userData = [...res['data']];\n          // console.log(\"listttttttt\", this.list_Obj);\n          this.filteredUser = this.list_Obj;\n          console.log(\"========================this.filteredUser\",this.filteredUser)\n        }\n\n      });\n  }\n\n  // request completed by interpreter\n  requestComplete(id, modal) {\n\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n     .result.then((result) => {\n      // this.submitted = true;\n      // if (this.ratingForm.invalid) {\n      //   return;\n      // }\n      // this.submitted = false;\n      this.ratingForm.value.id=id;\n      this.ratingForm.value.userId=this.userId;\n        this.service.interpreterReqCompleted(this.ratingForm.value)\n          .subscribe(res => {\n            this.msg = res;\n            if (res['status'] == '1') {\n              this.toastr.success(this.msg.message, '', { timeOut: 1000, positionClass: 'toast-top-center' });\n              this.router.navigate(['/interpreter-request/accept-list']);\n              this.interpreterRequestData(\"1\");\n            }\n            // else{\n            //   this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n            //   this.router.navigate(['/interpreter-request/list']);\n            // }\n\n          })\n      }, (reason) => {\n      });\n  }\n  \n  //send reminder\n  reminder_popup_open(id,risId,modal) {\n    console.log(\"iddddddd\",id,risId);\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n    .result.then((result) => {\n      this.service.getReminderRequest(id,risId,this.noteForm.value.notes)\n        .subscribe(res => {\n          this.reminder = res;\n          // this.msg.message = res;\n          console.log(\"reminder form\", this.reminder);\n          if (res['status'] == 1) {\n            this.toastr.success(this.reminder.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n            this.router.navigate(['/interpreter-request/accept-list']);\n          }\n        })\n    }, (reason) => {\n    });\n    \n  }\n\n\n\n  // trackingLinkSend(row.ris_id, linkConfirmModal)\n\n  trackingLinkSend(user_id,risId,modal) {\n    console.log(\"==================user_id\",user_id)\n    console.log(\"==================risId\",risId)\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n    .result.then((result) => {\n      this.service.interpreterTrackingLinkSend(user_id,risId).subscribe(res => {\n          this.resp_msg = res;\n          // this.msg.message = res;\n          console.log(\"reminder form\", this.reminder);\n          if (res['status'] == 1) {\n            this.toastr.success(this.resp_msg.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n            this.router.navigate(['/interpreter-request/accept-list']);\n          }else{\n            this.toastr.error(this.resp_msg.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n            this.router.navigate(['/interpreter-request/accept-list']);\n          }\n        })\n    }, (reason) => {\n    });\n    \n  }\n\n\n  call_Check(){\n    if(this.ReadOnlyStyleGuideNotes){\n      this.ReadOnlyStyleGuideNotes = false;\n    }\n    else{\n      this.ReadOnlyStyleGuideNotes = true;\n     \n    }\n  }\n\n  email_check(){\n  \n    if( this.call_check){\n      this.call_check = false;\n    }\n    else{\n      this.call_check = true;\n    }\n  }\n  sms_check(){\n    if( this.call_check){\n      this.call_check = true;\n    }\n    else{\n      this.call_check = false;\n    }\n  }\n  push_check(){\n    if( this.call_check){\n      this.call_check = true;\n    }\n    else{\n      this.call_check = false;\n    }\n  }\n\n  viewDetail(request_id){\n    console.log(\"id--\",  request_id);\n    this.service.getRequestDetail(request_id).subscribe(res => {\n      if(res['status'] == 1){\n        this.view_obj = res['data'][0];\n        console.log(\"api data\",  this.view_obj);\n        localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n        this.router.navigate(['/request-scheduler/details',request_id]);\n\n      }else{\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message,'', { timeOut: 2000, positionClass: 'toast-top-center' });\n      }\n        \n    })\n  }\n\n}\n\n","<div class=\"\">\n  <div class=\"breadcrumb\">\n    <ul class=\"heading\">\n        <li><a>In Progress</a></li>\n        <li>List</li>\n    </ul>\n</div>\n  \n    <div class=\"separator-breadcrumb border-top\"></div>\n\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <div class=\"form-group\">\n          <input id=\"search\" (keyup)=\"interpreterRequestData($event.target.value)\" placeholder=\"Search\" [formControl]=\"search_name\"  class=\"form-control form-control-rounded\" type=\"text\">\n        </div>\n       \n  </div>\n  <div class=\"col-md-4 dummy_text\">\n    <mat-form-field appearance=\"fill\">\n      <!-- <mat-label>Enter a date range</mat-label> -->\n      <mat-date-range-input [formGroup]=\"range\" \n      [rangePicker]=\"picker\">\n        <input matStartDate formControlName=\"start_date\" (dateChange)=\"interpreterRequestData($event.target.value)\" placeholder=\"Start date\">\n        <input matEndDate formControlName=\"end_date\" (dateChange)=\"interpreterRequestData($event.target.value)\" placeholder=\"End date\">\n\n      </mat-date-range-input>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n    </mat-form-field>\n  </div>\n\n\n      <div class=\"col-md-12 lang_block\">\n          <div class=\"card  o-hidden\">\n            <ngx-datatable *ngIf=\"filteredUser?.length\"\n              style=\"height: 500px; box-shadow: none\"\n              class=\"material fullscreen\"\n              [columnMode]=\"'force'\"\n              [headerHeight]=\"50\"\n              [footerHeight]=\"50\"\n              [rowHeight]=\"60\"\n              [scrollbarV]=\"true\"\n              [rows]=\"filteredUser\" [rowClass]=\"getRowClass\">\n             <!--  <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                <ng-template ngx-datatable-header-template>\n                 S.No\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                    {{rowIndex +1}}\n                </ng-template>\n               </ngx-datatable-column> -->\n                  <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                    <ng-template ngx-datatable-header-template>\n                      IR\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.ir}}\n                    </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                    <ng-template ngx-datatable-header-template>\n                      Client Name\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.client_name}}\n                    </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                    <ng-template ngx-datatable-header-template>\n                      LOB\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.lob_name}}\n                    </ng-template>\n                  </ngx-datatable-column>\n        \n                  <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                    <ng-template ngx-datatable-header-template>\n                      Assignment Type\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.assignment_type}}\n                    </ng-template>\n                  </ngx-datatable-column>\n                  <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n                    <ng-template ngx-datatable-header-template>\n                      Language\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.lang_name}}\n                    </ng-template>\n                  </ngx-datatable-column>\n        \n                <!--   <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                    <ng-template ngx-datatable-header-template>\n                      Cell Phone\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                    </ng-template>\n                  </ngx-datatable-column> -->\n        \n               <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                <ng-template ngx-datatable-header-template>\n                  Caseworker\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.caseworker_name}}\n                </ng-template>\n              </ngx-datatable-column> -->\n\n               <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                <ng-template ngx-datatable-header-template>\n                  Appointment Type\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.appointment_type}}\n                </ng-template>\n              </ngx-datatable-column> -->\n              <!-- <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                <ng-template ngx-datatable-header-template>\n                  Cell Phone\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.cell_phone | mask: '(000) 000-0000'}}\n                </ng-template>\n              </ngx-datatable-column> -->\n                <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                    <ng-template ngx-datatable-header-template>\n                      Requester\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.requester_name}}\n                    </ng-template>\n                </ngx-datatable-column> -->\n                <!-- <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\">\n                  <ng-template ngx-datatable-header-template>\n                      Interpreter\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.name}}\n                  </ng-template>  \n              </ngx-datatable-column>\n              \n              <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                <ng-template ngx-datatable-header-template>\n                  Interpreter Mobile\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.mobile | mask: '(000) 000-0000'}}\n                </ng-template>  \n             </ngx-datatable-column> -->\n\n             <ngx-datatable-column>\n              <ng-template ngx-datatable-header-template>\n                <span title=\"Requested date\">Requested date</span>\n              </ng-template>\n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n              </ng-template>  \n          </ngx-datatable-column>\n\n          <!-- <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n              <span title=\"Appointment date\">Appointment date</span>\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n            </ng-template>  \n        </ngx-datatable-column> -->\n           \n            <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n              <ng-template ngx-datatable-header-template>Status\n              </ng-template>\n              \n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" >\n                  In Progress\n              </ng-template>\n          </ngx-datatable-column>\n          \n          <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" >\n            <ng-template ngx-datatable-header-template>Action\n            </ng-template>\n            \n            <ng-template  ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" >\n              <button class=\" btn whitebutton mr-1 \" \n              (click)=\"viewDetail(row.ris_id)\">View</button>  \n              \n             <!--  <button *ngIf=\"(roleId=='1' || roleId=='4') && row.status == 1\" class=\"btn btn-outline-secondary\" \n              (click)=\"reminder_popup_open(row.user_id,row.ris_id,reminderConfirmModal)\">Reminder</button>  \n\n              <button *ngIf=\"roleId!='1' && row.status == 1\" class=\"btn btn-outline-danger ml-2\"\n              (click)=\"trackingLinkSend(row.Interpreter_id,row.ris_id, linkConfirmModal)\">\n                Tracking link\n              </button> -->\n\n               <button *ngIf=\"(roleId=='1' || roleId=='4') && row.ir_status == 1\" class=\"btn whitebutton mr-1 \" \n              (click)=\"commingSoon()\">Reminder</button>  \n\n              <button *ngIf=\"roleId!='1' && row.ir_status == 1\" class=\"btn whitebutton mr-1 \"\n              (click)=\"commingSoon()\">\n                Tracking link\n              </button>\n\n\n\n              <button *ngIf=\"roleId!='1' && row.ir_status == 1\" class=\"btn whitebutton mr-1 \"\n              (click)=\"requestComplete(row.ris_id, completeConfirmModal)\">\n                  Mark as completed\n              </button>\n              <button *ngIf=\"roleId!='1' && row.ir_status == 2\" class=\"btn whitebutton mr-1 \"\n              >\n                  Wating for completed by client side\n              </button>\n            </ng-template>\n          </ngx-datatable-column>\n\n           <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" *ngIf=\"roleId!='1'\">\n              <ng-template ngx-datatable-header-template>Action\n              </ng-template>\n              \n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>  \n                <button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>  \n            </ng-template>\n          </ngx-datatable-column> -->\n          </ngx-datatable>\n        </div>\n       <!--  <ng-container *ngIf=\"list_Obj?.length <= 0\">\n            No Data Found\n        </ng-container> -->\n         <div class=\"col-md-12 text-center findnew\" *ngIf=\"list_Obj?.length <= 0\">\n                <img src=\"../assets/images/nosearch.png\"><br><br>\n                <h5><b>We couldn't find what you're looking for</b></h5>\n </div>\n      </div>\n    </div>\n</div>  \n\n<ng-template #completeConfirmModal let-modal>\n  <div class=\"ratingheader modal-header\">\n    <h4>Rating</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n  </div>\n  <div class=\"modal-body rating_star\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-md-12 outer-box\">\n          <div class=\"well well-sm\">\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <form [formGroup]=\"ratingForm\">\n\n                        <label class=\"\">Your rating</label>\n                       <div class=\"form-group\">\n                          <ngb-rating class=\"newrating\" [max]=\"5\" formControlName=\"rating\"></ngb-rating>\n                           \n                        </div>\n                        <label class=\"\">Your message</label>\n                        <div class=\"form-group text-center\">\n                          <textarea class=\"form-control animated\" formControlName=\"review\" cols=\"50\" id=\"new-review\" name=\"comment\" placeholder=\"Enter your review here...\" rows=\"5\"></textarea> \n                        </div>\n                        <!-- <div *ngIf=\"ratingForm.controls['review'].errors && ( !ratingForm.controls['review'].pristine || submitted ||ratingForm.controls['review'].touched )\" class=\"error-msg\">\n                          <div [hidden]=\"!ratingForm.controls['review'].errors.required\"><span class=\"spannew\">Message is required.</span></div>\n                        </div> -->\n                      \n                        <!-- <div *ngIf=\"ratingForm.controls['rating'].errors && ( !ratingForm.controls['rating'].pristine || submitted ||ratingForm.controls['rating'].touched )\" class=\"error-msg\">\n                          <div [hidden]=\"!ratingForm.controls['rating'].errors.required\"><span class=\"spannew\">Rating is required.</span></div>\n                        </div> -->\n                      </form>\n                    </div>\n                </div>\n            </div> \n             \n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n      <button type=\"button\" ngbAutofocus class=\"btn btn-primary btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n  </div>\n</ng-template>\n<!-- <ng-template #completeConfirmModal let-modal>\n  <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n  </div>\n  <div class=\"modal-body\">\n      <p><strong>Are you sure? you want to Completed task?</strong></p>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n      <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n  </div>\n</ng-template> -->\n\n<ng-template #reminderConfirmModal let-modal>\n  <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-title\">Reminder</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n  </div>\n  <div class=\"modal-body\">\n\n    <form [formGroup]=\"noteForm\">\n      <div class=\"form-group\">\n        <label>Note</label>\n        <textarea class=\"form-control\" formControlName=\"notes\" rows=\"3\" placeholder=\"Optional\"></textarea>\n      </div>\n      <div class=\"form-group check_box\">\n\n      <label class=\"container\">Email\n        <input  [disabled]=\"ReadOnlyStyleGuideNotes\" (click) =\"email_check()\" id=\"check1\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n      <label class=\"container\">Sms\n        <input  [disabled]=\"ReadOnlyStyleGuideNotes\" (click) =\"sms_check()\" id=\"check2\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n      <label class=\"container\">Push\n        <input [disabled]=\"ReadOnlyStyleGuideNotes\" (click) =\"push_check()\" id=\"check3\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n      <label class=\"container\">Call\n        <input [disabled]=\"call_check\"  id=\"check4\" (click)=\"call_Check()\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n      </div>\n    </form>\n  \n    </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n      <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-success btn-rounded\" (click)=\"modal.close('Ok')\">Send</button>\n  </div>\n</ng-template>\n\n\n\n<ng-template #linkConfirmModal let-modal>\n  <div class=\"modal-header\">\n      <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n  </div>\n  <div class=\"modal-body\">\n      <p><strong>Are you sure? you want to send tracking link?</strong></p>\n  </div>\n  <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n      <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n  </div>\n</ng-template>\n\n<div class=\"separator-breadcrumb border-top\"></div>\n\n","import { Injectable } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationsService {\n\n  constructor() { }\n  /*===========Validations Expression Start here ===========*/\n  notRequired_validator = [];\n  onlyRequired_validator = [Validators.required];\n  email_validator = [Validators.required, Validators.minLength(6), Validators.maxLength(150),\n    Validators.pattern('^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,25}$')];\n  password_validator = [Validators.required, Validators.minLength(6)];\n  mobile_validator = [Validators.required, Validators.minLength(8), Validators.maxLength(15), Validators.pattern('^[0-9]+$')];\n  name_validation = [Validators.required, Validators.minLength(2), Validators.maxLength(50)]; \n  /*===========Validations Expression End here ===========*/\n}\n"],"sourceRoot":"webpack:///"}