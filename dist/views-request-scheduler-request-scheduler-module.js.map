{"version":3,"sources":["./src/app/views/request-scheduler/request-scheduler-routing.module.ts","./src/app/views/request-scheduler/request-list/request-list.component.ts","./src/app/views/request-scheduler/request-list/request-list.component.html","./src/app/views/request-scheduler/interpreter-list/interpreter-list.component.ts","./src/app/views/request-scheduler/interpreter-list/interpreter-list.component.html","./src/app/views/request-scheduler/request-scheduler.module.ts","./src/app/views/request-scheduler/broadcast-request/broadcast-request.component.ts","./src/app/views/request-scheduler/broadcast-request/broadcast-request.component.html","./src/app/views/request-scheduler/all-request-list-schedular/all-request-list-schedular.component.ts","./src/app/views/request-scheduler/all-request-list-schedular/all-request-list-schedular.component.html","./src/app/views/request-scheduler/complete-request/complete-request.component.ts","./src/app/views/request-scheduler/complete-request/complete-request.component.html","./src/app/views/request-scheduler/all-request-schedular/all-request-schedular.component.ts","./src/app/views/request-scheduler/all-request-schedular/all-request-schedular.component.html","./src/app/views/request-scheduler/cancelled-request/cancelled-request.component.ts","./src/app/views/request-scheduler/cancelled-request/cancelled-request.component.html","./node_modules/angular-ng-autocomplete/__ivy_ngcc__/fesm2015/angular-ng-autocomplete.js","./src/app/views/request-scheduler/request-detail/request-detail.component.ts","./src/app/views/request-scheduler/request-detail/request-detail.component.html","./src/app/views/request-scheduler/accept-request/accept-request.component.ts","./src/app/views/request-scheduler/accept-request/accept-request.component.html"],"names":[],"mappings":"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E;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA,wBAAwB;AACxB;AACA,+BAA+B;AAC/B;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,0DAAY;AACxC;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA,iCAAiC,0DAAY;AAC7C;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA,oBAAoB;AACpB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2DAA2D,uBAAuB;AAClF;AACA,2BAA2B,EAAE;AAC7B,iEAAiE,uBAAuB;AACxF;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,4CAA4C,uBAAuB;AACnE;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,gDAAgD,uBAAuB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,2DAA2D,uBAAuB;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,2BAA2B,sDAAS,+CAA+C,0DAAG;AACtF,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,6BAA6B,sDAAS,iDAAiD,0DAAG;AAC1F,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,kBAAkB,6DAAM;AACxB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,iCAAiC,mEAAY;AAC7C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,6DAAM;AACtC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,6DAAM;AACpC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,6DAAM;AACtC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,8BAA8B,6DAAM;AACpC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,gCAAgC,mEAAY;AAC5C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,6DAAM;AACtC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA,gCAAgC,6DAAM;AACtC,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,uCAAuC,uBAAuB;AAC9D;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,8CAA8C,uBAAuB;AACrE;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA,wEAAwE,yCAAyC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,uDAAgB,GAAG;AAC1M,6BAA6B,+DAAwB,EAAE,kJAAkJ;AACzM,QAAQ,4DAAqB,WAAW,yDAAW;AACnD,KAAK;AACL;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,KAAK,EAAE,4DAA4D;AACnE,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,QAAQ,yDAAkB;AAC1B,KAAK;AACL;AACA,QAAQ,4DAAqB,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","file":"views-request-scheduler-request-scheduler-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AllRequestListSchedularComponent } from './all-request-list-schedular/all-request-list-schedular.component';\nimport { AllRequestSchedularComponent } from './all-request-schedular/all-request-schedular.component';\nimport { RequestListComponent } from './request-list/request-list.component';\nimport { CompleteRequestComponent } from './complete-request/complete-request.component';\nimport { CancelledRequestComponent } from './cancelled-request/cancelled-request.component';\nimport { AcceptRequestComponent } from './accept-request/accept-request.component';\nimport { BroadcastRequestComponent } from './broadcast-request/broadcast-request.component';\nimport { RequestDetailComponent } from './request-detail/request-detail.component';\nimport { InterpreterListComponent } from './interpreter-list/interpreter-list.component';\n\nconst routes: Routes = [\n  { path: 'all-request-schedular', component:AllRequestSchedularComponent },\n  { path: 'all-request-list-schedular', component:AllRequestListSchedularComponent },\n  { path: 'request-list-schedular', component:RequestListComponent },\n  { path: 'progress-list-schedular', component: AcceptRequestComponent },\n  { path: 'completed-list-schedular', component: CompleteRequestComponent },\n  { path: 'cancelled-list-schedular', component: CancelledRequestComponent },\n  { path: 'broadcast-list-schedular', component: BroadcastRequestComponent },\n  { path: 'details/:id', component: RequestDetailComponent },\n  { path: 'interpreter-view/:id', component: InterpreterListComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class RequestSchedulerRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-request-list',\n  templateUrl: './request-list.component.html',\n  styleUrls: ['./request-list.component.scss']\n})\nexport class RequestListComponent implements OnInit {\n  list_Obj: any[];\n  interpreter_obj: any[];\n  view_interpreter;\n  view_obj;\n  userData;\n  filteredUser;\n  user_Obj;\n  status_msg;\n  userId;\n  roleId;\n  searchNameEmail = '';\n  distance = '';\n  rate = '';\n  rating = '';resp_msg;\n  \n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service:HttpService,\n    private router: Router,\n  ) { }\n\n  ngOnInit(){\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n\n    console.log(\"userId-\",this.userId)\n    console.log(\"roleId-\",this.roleId)\n\n    this.userRequestList('1');\n    // this.searchControl.valueChanges\n    // .pipe(debounceTime(200))\n    // .subscribe(value => {\n    //   this.filerData(value);\n    // });\n    // this.products$ = this.productService.getProducts();\n  }\n  getRowClass = (row) => {    \n    return {\n      'newRequest': row.status == \"0\",\n      'broadcastRequest': row.status == \"1\",\n      'progressRequest': row.status == \"2\",\n      'completeRequest': row.status == \"3\",\n      'rejecteRequest': row.status == \"4\",\n    };\n   }\n\n  // filerData(val) {\n  //   if (val) {\n  //     val = val.toLowerCase();\n  //   } else {\n  //     console.log(\"xxxxxxx\",this.filteredUser);\n  //     return this.filteredUser = [... this.userData];\n  //   }\n\n  //   const columns = Object.keys( this.userData[0]);\n  //   if (!columns.length) {\n  //     return;\n  //   }\n\n  //   const rows =  this.userData.filter(function(d) {\n  //     for (let i = 0; i <= columns.length; i++) {\n  //       const column = columns[i];\n  //       // console.log(d[column]);\n  //       if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n  //         return true;\n  //       }\n  //     }\n  //   });\n  //   this.filteredUser = rows;\n  // }\n\n\n\n  userRequestList(e){\n    console.log(\"startDateaaaaaaaaaa\", this.range.value.start_date );\n    this.allData = this.search_name.value;\n    this.startDate = this.range.value.start_date;\n    console.log(\"startDate\",  this.startDate);\n    this.endDate = this.range.value.end_date;\n    console.log(\"all\", this.allData, this.startDate,this.endDate);\n    this.service.getUserRequest(this.allData,this.startDate,this.endDate)\n    .subscribe(res => {\n      console.log(\"==============================res\", res);\n      if(res['status'] == 1){\n        this.list_Obj = res['data'];\n        this.userData = [...res['data']];\n        console.log(\"listttttttt\", this.list_Obj);\n        this.filteredUser = this.list_Obj;\n      }else{\n        this.list_Obj = [];\n        this.userData = [];\n        this.filteredUser = [];\n        // this.resp_msg = res;\n        // this.toastr.error(this.resp_msg.message,'', { timeOut: 2000 });\n      }\n        \n    });\n  }\n\n\n\n  viewDetail(request_id){\n    console.log(\"id--\",  request_id);\n    this.service.getRequestDetail(request_id).subscribe(res => {\n      if(res['status'] == 1){\n        this.view_obj = res['data'][0];\n        console.log(\"view object\",  this.view_obj);\n        localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n        this.router.navigate(['/request-scheduler/details',request_id]);\n        // this.router.navigate(['/user-request/request-view',request_id])\n      }else{\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message,'', { timeOut: 2000 });\n      }\n        \n    })\n  }\n\n\n\n\n  //assign\n  assignMyNearbyInterpreter(service_id,info){\n    \n    // localStorage.setItem('assignData', JSON.stringify(info));\n    // localStorage.setItem('serviceId', JSON.stringify(service_id));\n    this.service.myNearbyInterpreter(service_id,info.language,this.searchNameEmail,this.distance,this.rate,this.rating).subscribe(res => {\n        this.interpreter_obj = res['data'];\n        console.log(\"interpreter_obj\",  this.interpreter_obj);\n        // localStorage.setItem('viewDatainMap', JSON.stringify(this.view_interpreter));\n        this.router.navigate(['/request-scheduler/interpreter-view',service_id])\n    })\n  }\n\n\n\n}\n","<div class=\"\">\r\n    <div class=\"breadcrumb\">\r\n        <ul class=\"heading\">\r\n            <li><a>New Request</a></li>\r\n            <li>List</li>\r\n        </ul>\r\n    </div>\r\n\r\n\r\n    <div class=\"separator-breadcrumb border-top\"></div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n                <input id=\"search\" (keyup)=\"userRequestList($event.target.value)\" placeholder=\"Search\" [formControl]=\"search_name\" class=\"form-control form-control-rounded\" type=\"text\">\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-4 dummy_text\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <!-- <mat-label>Enter a date range</mat-label> -->\r\n                <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\r\n                    <input matStartDate formControlName=\"start_date\" (dateChange)=\"userRequestList($event.target.value)\" placeholder=\"Start date\">\r\n                    <input matEndDate formControlName=\"end_date\" (dateChange)=\"userRequestList($event.target.value)\" placeholder=\"End date\">\r\n                </mat-date-range-input>\r\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                <mat-date-range-picker #picker></mat-date-range-picker>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"col-md-12 requesttable yellowtable yellowtablenew\">\r\n            <div class=\"card  o-hidden\">\r\n                <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\" [columnMode]=\"'force'\" [rowClass]=\"getRowClass\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\">\r\n                   <!--  <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            S.No\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\r\n                            {{rowIndex +1}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column> -->\r\n\r\n                    <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\r\n                  <ng-template ngx-datatable-header-template>\r\n                    Caseworker\r\n                  </ng-template>\r\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                    {{row.caseworker_name}}\r\n                  </ng-template>\r\n                </ngx-datatable-column> -->\r\n                    <ngx-datatable-column name=\"IR\" prop=\"ir\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            IR\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{row.ir}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Client Name\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{row.client_name}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <!-- <ngx-datatable-column name=\"Name Of Contact Person\" prop=\"name_of_contact_person\">\r\n                  <ng-template ngx-datatable-header-template>\r\n                    Contact Person\r\n                  </ng-template>\r\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                    {{row.name_of_contact_person}}\r\n                  </ng-template>\r\n                </ngx-datatable-column> -->\r\n\r\n                    <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            LOB\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{row.lob_name}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                    <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Assignment Type\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{row.assignment_type}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                  <ng-template ngx-datatable-header-template name=\"Email\" prop=\"email\">\r\n                      Email\r\n                  </ng-template>\r\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                      {{row.email}}\r\n                  </ng-template>  \r\n              </ngx-datatable-column> -->\r\n\r\n                    <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\r\n                  <ng-template ngx-datatable-header-template>\r\n                    Requester\r\n                  </ng-template>\r\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                    {{row.requester_name}} \r\n                  </ng-template>\r\n                </ngx-datatable-column> -->\r\n                    <!-- <ngx-datatable-column name=\"Health Department\" prop=\"health_department\">\r\n                      <ng-template ngx-datatable-header-template>\r\n                        Health Department\r\n                      </ng-template>\r\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.health_department}}\r\n                      </ng-template>\r\n                  </ngx-datatable-column> -->\r\n                    <ngx-datatable-column>\r\n                        <ng-template ngx-datatable-header-template name=\"Language\" prop=\"lang_name\">\r\n                            Language\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{row.lang_name}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n                    <!-- <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Cell Phone\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\r\n                        </ng-template>\r\n                    </ngx-datatable-column> -->\r\n                    <!-- <ngx-datatable-column name=\"Business\" prop=\"business_bill\">\r\n                  <ng-template ngx-datatable-header-template>\r\n                    Business\r\n                  </ng-template>\r\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                    {{row.business_bill}}\r\n                  </ng-template>\r\n                </ngx-datatable-column>   -->\r\n                    <!-- <ngx-datatable-column>\r\n                    <ng-template ngx-datatable-header-template name=\"Community Service\" prop=\"north_metro_community_service\">\r\n                        Community Service\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.north_metro_community_service}}\r\n                    </ng-template>  \r\n                </ngx-datatable-column> -->\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                    <ng-template ngx-datatable-header-template name=\"Human Services\" prop=\"human_services\">\r\n                        Human Services\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.human_services}}\r\n                    </ng-template>  \r\n                </ngx-datatable-column> -->\r\n\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                    <ng-template ngx-datatable-header-template name=\"AHS Department\" prop=\"ahs_department\">\r\n                        AHS Department\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.ahs_department}}\r\n                    </ng-template>  \r\n                </ngx-datatable-column> -->\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                    <ng-template ngx-datatable-header-template name=\"Office Phone\" prop=\"office_phone\">\r\n                        Office Phone\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.office_phone | mask: '(000) 000-0000'}}\r\n                    </ng-template>  \r\n                </ngx-datatable-column> -->\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                    <ng-template ngx-datatable-header-template name=\"Cell Phone\" prop=\"cell_phone\">\r\n                        Cell Phone\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.cell_phone}}\r\n                    </ng-template>  \r\n                </ngx-datatable-column> -->\r\n\r\n\r\n\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                    <ng-template ngx-datatable-header-template name=\"Site Contact\" prop=\"site_contact\">\r\n                        Site Contact\r\n                    </ng-template>\r\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                        {{row.site_contact | mask: '(000) 000-0000'}}\r\n                    </ng-template>  \r\n                </ngx-datatable-column> -->\r\n\r\n                    <ngx-datatable-column>\r\n                        <ng-template ngx-datatable-header-template>\r\n                            <span title=\"Requested date\">Requested date</span>\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            <span title=\"{{row.created_at}}\"> {{row.created_at | date:'MM/dd/yyyy' }}</span>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                    <!-- <ngx-datatable-column>\r\n                <ng-template ngx-datatable-header-template>\r\n                  <span title=\"Appointment date\"> Appointment date</span>\r\n                </ng-template>\r\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                  <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\r\n                </ng-template>  \r\n            </ngx-datatable-column> -->\r\n\r\n                    <ngx-datatable-column>\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Status\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            <p *ngIf=\"row.ris_status == '0'\">New Request</p>\r\n                            <p *ngIf=\"row.ris_status == '4'\">Repeat</p>\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\r\n                        <ng-template ngx-datatable-header-template>\r\n                            Actions\r\n                        </ng-template>\r\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\r\n                            <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail(row.id)\">View</button>\r\n                            <button class=\"btn btn-outline-secondary ml-2\" *ngIf=\"roleId =='1' || roleId == '4'\" (click)=\"assignMyNearbyInterpreter(row.id,row)\">Broadcast</button>\r\n                            <!-- <button class=\"btn btn-outline-success ml-2\" (click)=\"editUser(row.id,row)\" [routerLink]=\"['/users/user-edit', row.id]\">Assign</button> -->\r\n                        </ng-template>\r\n                    </ngx-datatable-column>\r\n\r\n                </ngx-datatable>\r\n            </div>\r\n            <!-- <ng-container *ngIf=\"list_Obj?.length <= 0\">\r\n                No Data Found\r\n            </ng-container> -->\r\n            <div class=\"col-md-12 text-center\" *ngIf=\"list_Obj?.length <= 0\">\r\n                            <img src=\"../assets/images/nosearch.png\"><br><br>\r\n                            <h5><b>We couldn't find what you're looking for</b></h5>\r\n                        </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\n// import { MouseEvent } from '@agm/core';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { debounceTime } from 'rxjs/operators';\nimport { ToastrService } from 'ngx-toastr';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Swal from 'sweetalert2'\n\ninterface marker {\n  lat: number;\n  lng: number;\n  label?: string;\n  draggable: boolean;\n  visible: boolean;\n  opacity: number;\n}\n@Component({\n  selector: 'app-interpreter-list',\n  templateUrl: './interpreter-list.component.html',\n  styleUrls: ['./interpreter-list.component.scss']\n})\nexport class InterpreterListComponent implements OnInit {\n  // google maps zoom level\n  zoom: number = 8;\n  list_Obj;\n  serviceid;\n  location;\n  makerId;\n  markers: Array<any> = [];\n  filteredUser;\n  userData;\n  nameShow;\n  mobileShow;\n  emailShow;\n  addressShow;\n  requestId;\n  userId;\n  requestStatus;\n  language_id;\n  assignInfo;\n  searchNameEmail = '';\n  distance = '';\n  rate = '';\n  rating = '';\n  distance_formdata;\n  rates_formdata;\n  ratings_formdata;\n  namemail_formdata;\n  api_res;\n  mapInfo;\n  searchControl: FormControl = new FormControl();\n  distances: FormControl = new FormControl();\n  rates: FormControl = new FormControl();\n  ratings: FormControl = new FormControl();\n  search_name_email: FormControl = new FormControl();\n  // initial center position for the map\n  // lat: number = 0;\n  // lng: number = 0;\n  scroll: boolean = false;\n\n\n\n  lat: number = 22.7261762;\n  lng: number = 76.1305457;\n\n\n  constructor(private formBuilder: FormBuilder,\n    private toastr: ToastrService,\n    private modalService: NgbModal,\n    private router: Router,\n    private route: ActivatedRoute,\n    public service: HttpService) {\n    this.serviceid = route.snapshot.params['id'];\n    // this.serviceid = JSON.parse(localStorage.getItem('serviceId'));\n  }\n\n\n\n  ngOnInit() {\n    this.getRequestDetails();\n    // this.assignInfo = JSON.parse(localStorage.getItem('assignData'));\n    this.service.currentMessage.subscribe(message => {\n      this.mapInfo = message\n      console.log(\"mapView\", this.mapInfo);\n\n    })\n    // this.lat = this.assignInfo.latitude;\n    // this.lng = this.assignInfo.longitude;\n\n    // console.log(\"my testing lat long  --\", this.assignInfo)\n    // this.language_id = this.assignInfo.language;\n  \n\n    \n    // this.searchControl.valueChanges\n    // .pipe(debounceTime(200))\n    // .subscribe(value => {\n    //   this.filerData(value);\n    // });\n  }\n  getRequestDetails() {\n    this.service.get(\"getRequestDetails/\" + this.serviceid).subscribe((res) => {\n      this.assignInfo = res['data'][0];\n      console.log(\"this.assignInfo=============\", this.assignInfo);\n      this.lat = this.assignInfo.latitude;\n      this.lng = this.assignInfo.longitude;\n      this.language_id = this.assignInfo.language_id;\n      this.assignMyNearbyInterpreter();\n    })\n  }\n\n\n\n  clickedMarker(label: string, id, info, index: number, modal) {\n    this.requestId = id;\n    localStorage.setItem('Id', JSON.stringify(id));\n    localStorage.setItem('Info', JSON.stringify(info));\n    this.service.changeMessage(info);\n    this.nameShow = label;\n    this.addressShow = info.address;\n    this.mobileShow = info.mobile;\n    this.emailShow = info.email;\n    // this.language_id = info.language;\n    this.userId = JSON.parse(localStorage.getItem('serviceId'));\n    if (index != 0) {\n      this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n        .result.then((result) => {\n          this.service.sendInterpreterRequest(this.requestId, this.userId).subscribe(res => {\n            this.requestStatus = res;\n            if (this.requestStatus.status == 1) {\n              this.toastr.success(this.requestStatus.message, '', { timeOut: 2000 });\n              this.router.navigate(['/user-request/list'])\n            }\n            else {\n              this.toastr.error(this.requestStatus.message, '', { timeOut: 2000 });\n            }\n          })\n        }, (reason) => {\n        });\n    }\n    // console.log(\"userId, service_id\",  this.userId );\n    // console.log(`clicked the marker: ${id || index}`);\n    // this.markers[index].visible = false;\n  }\n\n  mapClicked($event) {\n    console.log(\"eeeee\", $event);\n    this.markers.push({\n      lat: $event.coords.lat,\n      lng: $event.coords.lng,\n      draggable: true,\n      visible: true,\n      opacity: 0.4\n    });\n  }\n\n  markerDragEnd(m: marker, $event) {\n    console.log('dragEnd', m, $event);\n  }\n\n\n\n\n  /*filerData(val) {\n    if (val) {\n      val = val.toLowerCase();\n    } else {\n      return this.filteredUser = [... this.userData];\n    }\n\n    const columns = Object.keys( this.userData[0]);\n    if (!columns.length) {\n      return;\n    }\n\n    const rows =  this.userData.filter(function(d) {\n      for (let i = 0; i <= columns.length; i++) {\n        const column = columns[i];\n        if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n          return true;\n        }\n      }\n    });\n    this.filteredUser = rows; \n  }\n*/\n  assignMyNearbyInterpreter() {\n    this.distance_formdata = this.distances.value;\n    this.rates_formdata = this.rates.value;\n    this.ratings_formdata = this.ratings.value\n    this.namemail_formdata = this.search_name_email.value\n    this.distance = this.distance_formdata;\n    this.searchNameEmail = this.namemail_formdata;\n    this.rate = this.rates_formdata;\n    this.rating = this.ratings_formdata;\n\n    //  console.log(\"value set\", this.distance);\n    console.log(\"============this.language_id\", this.language_id);\n    console.log(\"============this.serviceid\", this.serviceid);\n    console.log(\"============this.searchNameEmail\", this.searchNameEmail);\n    console.log(\"============this.distance\", this.distance);\n    console.log(\"============this.rate\", this.rate);\n    console.log(\"============this.rating\", this.rating);    \n    this.service.myNearbyInterpreter(this.serviceid, this.language_id, this.searchNameEmail, this.distance, this.rate, this.rating).subscribe(res => {\n      if (res['status'] == 0) {\n\n        this.list_Obj = '';\n        this.userData = '';\n        this.filteredUser = '';\n\n        this.markers = [\n          {\n            lat: this.assignInfo.latitude,\n            lng: this.assignInfo.longitude,\n            label: this.assignInfo.caseworker_name,\n            id: this.assignInfo.id,\n            mobile: this.assignInfo.cell_phone,\n            // address: this.assignInfo.lang_name,\n            address: this.assignInfo.language,\n            email: this.assignInfo.email,\n            draggable: false,\n            visible: false,\n            opacity: 0.7\n          }\n        ]\n\n        // console.log(this.markers)\n        // console.log(this.markers[0])\n        // this.markers=[];\n        // this.markers.filter(item => item !== this.markers[0]);\n      } else {\n\n        this.markers = [\n          {\n            lat: this.assignInfo.latitude,\n            lng: this.assignInfo.longitude,\n            label: this.assignInfo.caseworker_name,\n            id: this.assignInfo.id,\n            mobile: this.assignInfo.cell_phone,\n            // address: this.assignInfo.lang_name,\n            address: this.assignInfo.language,\n            email: this.assignInfo.email,\n            draggable: false,\n            visible: false,\n            opacity: 0.7\n          }\n        ]\n\n\n        this.list_Obj = res['data'];\n        this.userData = [...res['data']];\n        this.filteredUser = this.list_Obj;\n        console.log(\"===============this.filteredUser\",this.filteredUser)\n        for (let i = 0; i < this.list_Obj.length; i++) {\n          this.markers.push({\n            lat: this.list_Obj[i].latitude,\n            lng: this.list_Obj[i].longitude,\n            label: this.list_Obj[i].name,\n            id: this.list_Obj[i].id,\n            mobile: this.list_Obj[i].mobile,\n            address: this.list_Obj[i].address,\n            email: this.list_Obj[i].email,\n            draggable: false,\n            visible: false,\n            opacity: 0.7,\n            icon: \"./assets/images/faces/placeholder.png\"\n          })\n        }\n        console.log(\"clicked the marker:\", this.markers);\n      }\n    });\n  }\n  //}\n\n  viewDetail() {\n    this.router.navigate(['/request-scheduler/details', this.assignInfo.id]);\n    // this.router.navigate(['/user-request/request-view', this.assignInfo.id])\n  }\n\n  requestDetail(id, data, modal) {\n    this.requestId = id;\n    this.userId = JSON.parse(localStorage.getItem('serviceId'));\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.service.sendInterpreterRequest(this.requestId, this.userId).subscribe(res => {\n          this.requestStatus = res;\n          if (this.requestStatus.status == 1) {\n            this.nameShow = data.name;\n            this.addressShow = data.address;\n            this.mobileShow = data.mobile;\n            this.emailShow = data.email;\n            this.toastr.success(this.requestStatus.message, '', { timeOut: 2000 });\n            this.router.navigate(['/user-request/list'])\n          }\n          else {\n            this.router.navigate(['/user-request/list'])\n            this.toastr.error(this.requestStatus.message, '', { timeOut: 2000 });\n          }\n        })\n      }, (reason) => {\n      });\n  }\n\n  assignAllInterpreter() {\n    \n    // this.service.requestAssignAllInterpreter(this.serviceid, this.list_Obj).subscribe(res => {\n     \n\n\n       Swal.fire({\n  title: 'Are you sure want to Broadcast?',\n  icon: 'warning',\n  showCancelButton: true,\n  confirmButtonColor: '#3085d6',\n  cancelButtonColor: '#d33',\n  confirmButtonText: 'Yes'\n}).then((result) => {\n  if (result.isConfirmed) {\n     this.service.requestAssignAllInterpreter(this.serviceid, this.filteredUser).subscribe(res => {\n      console.log(\"res====\", res)\n      this.requestStatus = res;\n      if (res['status'] == '1') {\n        this.router.navigate(['/request-scheduler/broadcast-list-schedular'])\n        this.toastr.success(this.requestStatus.message, '', { timeOut: 2000 });\n      } else {\n        // this.router.navigate(['/user-request/list'])\n        this.toastr.error(this.requestStatus.message, '', { timeOut: 2000 });\n      }\n\n    });\n  }\n})\n\n\n\n  }\n\n\n\n  // viewDetail(){\n  //   this.router.navigate(['/user-request/request-view',this.assignInfo.id])\n  // }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-4\">\n        <div>\n            <label for=\"test\"><b>Client Name  :  </b></label>\n            <span>  {{assignInfo?.client_name}}  </span>\n        </div>\n        <div>\n            <label for=\"test\"><b>Requested By  :   </b></label>\n            <span>  {{assignInfo?.requested_by}}  </span>\n        </div>\n        <div>\n            <label for=\"test\"><b>Email  :   </b></label>\n            <span>  {{assignInfo?.email}}  </span>\n        </div>\n        <div>\n            <label for=\"test\"><b>Mobile No. :   </b></label>\n            <span> {{assignInfo?.phone_code}} {{assignInfo?.cellphone_contact_person | mask: ' (000) 000-0000'}}  </span>\n        </div>\n\n        <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail()\">View Detail</button>\n        <!-- <button class=\"btn btn-outline-secondary\" *ngIf=\"requestBtn\" (click)=\"requestDetail(id,info,requestConfirmModal)\">Assign</button>   -->\n\n\n    </div>\n    <!-- {{markers[0]}} -->\n    <!-- [zoom]=\"zoom\" -->\n    <!-- [zoomControl]=\"true\" -->\n    <div class=\"col-md-8\">\n        <agm-map [latitude]=\"lat\" [longitude]=\"lng\" [disableDefaultUI]=\"true\" (mapClick)=\"mapClicked($event)\">\n            <agm-marker *ngFor=\"let m of markers; let i = index\" (markerClick)=\"clickedMarker(m.label,m.id,m,i,requestConfirmModal)\" [latitude]=\"m.lat\" [iconUrl]=\"m.icon\" [longitude]=\"m.lng\" [label]=\"m.label\" [markerDraggable]=\"m.draggable\" (dragEnd)=\"markerDragEnd(m, $event)\">\n                <agm-info-window>\n                    <strong>{{m.label}}</strong>\n                </agm-info-window>\n            </agm-marker>\n            <!-- [iconUrl]=\"https://developers.google.com/maps/documentation/javascript/examples/full/images/beachflag.png\" -->\n        </agm-map>\n        <!-- <agm-map \n[latitude]=\"lat\"\n[longitude]=\"lng\" \n[zoom]=\"zoom\"\n[disableDefaultUI]=\"true\"\n[zoomControl]=\"true\"\n(mapClick)=\"mapClicked($event)\">\n\n<agm-marker\n    *ngFor=\"let m of markers; let i = index\"\n    (markerClick)=\"clickedMarker(m.label,m.id,m,i,requestConfirmModal)\"\n    [latitude]=\"m.lat\" [longitude]=\"m.lng\" [label]=\"m.label\" [markerDraggable]=\"m.draggable\" \n    (dragEnd)=\"markerDragEnd(m, $event)\">\n    \n  <agm-info-window>\n    <strong>{{m.label}}</strong>\n  </agm-info-window>\n  \n</agm-marker>\n</agm-map> -->\n    </div>\n</div>\n<br/>\n\n<div class=\"row\">\n    <div class=\"col-md-2\">\n        <div class=\"form-grup\">\n            <input id=\"search\" placeholder=\"Name/Email\" [formControl]=\"search_name_email\" class=\"form-control form-control-rounded\" type=\"text\">\n        </div>\n    </div>\n\n    <div class=\"col-md-2\">\n        <div class=\"form-group\">\n            <input id=\"search\" placeholder=\"Distance\" [formControl]=\"distances\" class=\"form-control form-control-rounded\" type=\"text\">\n        </div>\n    </div>\n\n\n    <div class=\"col-md-2\">\n        <div class=\"form-group\">\n\n            <select class=\"form-control form-control-rounded\" placeholder=\"Rate\" [formControl]=\"rates\">\n      <option value=\"\">Select Rate</option>\n      <option value=\"10\">$10/Hours</option>\n      <option value=\"20\">$20/Hours</option>\n      <option value=\"30\">$30/Hours</option>\n      <option value=\"40\">$40/Hours</option>\n      <option value=\"50\">$50/Hours</option>\n\n  </select>\n        </div>\n    </div>\n\n\n\n    <div class=\"col-md-2\">\n        <div class=\"form-group\">\n\n            <select class=\"form-control form-control-rounded\" placeholder=\"Rating\" [formControl]=\"ratings\">\n      <option value=\"\">Select Rating</option>\n      <option value=\"5\">5</option>\n      <option value=\"4\">4</option>\n      <option value=\"3\">3</option>\n      <option value=\"2\">2</option>\n      <option value=\"1\">1</option>\n\n  </select>\n        </div>\n    </div>\n\n\n    <div class=\"col-md-2\">\n        <button class=\"btn btn-outline-secondary\" (click)=\"assignMyNearbyInterpreter()\">Apply</button>\n    </div>\n\n    <div class=\"col-md-2\">\n        <button class=\"btn btn-outline-secondary\" (click)=\"assignAllInterpreter()\">Broadcast All</button>\n    </div>\n    <div class=\"col-md-12\">\n        <div class=\"card  o-hidden\">\n            <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\">\n                <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                    <ng-template ngx-datatable-header-template>\n                        S.No\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                        {{rowIndex +1}}\n                    </ng-template>\n                </ngx-datatable-column>\n\n                <ngx-datatable-column name=\"Name\" prop=\"name\">\n                    <ng-template ngx-datatable-header-template>\n                        Name\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.name}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Email\" prop=\"email\">\n                    <ng-template ngx-datatable-header-template>\n                        Email\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.email}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Mobile\" prop=\"mobile\">\n                    <ng-template ngx-datatable-header-template>\n                        Mobile\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.mobile | mask: '(000) 000-0000'}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Gender\" prop=\"gender\">\n                    <ng-template ngx-datatable-header-template>\n                        Gender\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.gender}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Address\" prop=\"address\">\n                    <ng-template ngx-datatable-header-template>\n                        Address\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.address}}\n                    </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Distance\" prop=\"distance\">\n                    <ng-template ngx-datatable-header-template>\n                        Distance\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.distance | number: '1.2-2' }}\n                    </ng-template>\n                </ngx-datatable-column>\n\n                <ngx-datatable-column name=\"Distance\" prop=\"distance\">\n                    <ng-template ngx-datatable-header-template>\n                        Rating\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.rating}} 0\n                    </ng-template>\n                </ngx-datatable-column>\n\n                <ngx-datatable-column name=\"Distance\" prop=\"distance\">\n                    <ng-template ngx-datatable-header-template>\n                        Reject\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        <p *ngIf=\"row.is_reject == '0'\">No</p>\n                        <p *ngIf=\"row.is_reject == '1'\">Yes</p>\n                    </ng-template>\n                </ngx-datatable-column>\n\n\n                <!-- <ngx-datatable-column>\n              <ng-template ngx-datatable-header-template>\n                  Status\n              </ng-template>\n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  <p *ngIf=\"row.is_reject == '0'\">New</p>\n                  <p *ngIf=\"row.is_reject == '1'\">Repeat</p>\n              </ng-template>  \n\n          </ngx-datatable-column> -->\n\n\n                <!-- <ngx-datatable-column [width]=\"150\" [sortable]=\"false\">\n          <ng-template ngx-datatable-header-template>\n              Actions\n          </ng-template>\n          <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <button class=\"btn btn-outline-secondary\"  (click)=\"requestDetail(row.id,row,requestConfirmModal)\">Assign</button>  \n          </ng-template>\n      </ngx-datatable-column> -->\n\n            </ngx-datatable>\n        </div>\n        <ng-container *ngIf=\"list_Obj?.length <= 0\">\n            No Data Found\n        </ng-container>\n    </div>\n</div>\n<ng-template #requestConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Details</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n    </div>\n    <div class=\"modal-body\">\n        <div>\n            <label class=\"mb-0\"><b>Name</b></label>\n            <p>{{mapInfo.label}}</p>\n            <label class=\"map_label mb-0\"><b>Email</b></label>\n            <span class=\"map_left\">{{mapInfo.email}}</span>\n\n            <label class=\"mb-0\"><b>Mobile</b></label>\n            <p>{{mapInfo.mobile}}</p>\n            <label class=\"mb-0\"><b>Address</b></label>\n            <p>{{mapInfo.address}}</p>\n        </div>\n        <!-- <p><strong>Are you sure? you want to send request.</strong></p> -->\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RequestSchedulerRoutingModule } from './request-scheduler-routing.module';\nimport { AllRequestSchedularComponent } from './all-request-schedular/all-request-schedular.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AllRequestListSchedularComponent } from './all-request-list-schedular/all-request-list-schedular.component';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { SharedComponentsModule } from 'src/app/shared/components/shared-components.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxMaskModule } from 'ngx-mask';\n\nimport { AgmCoreModule } from '@agm/core';\nimport { TimePickerModule } from '@syncfusion/ej2-angular-calendars';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatInputModule} from '@angular/material/input';\nimport { RequestListComponent } from './request-list/request-list.component';\nimport { CompleteRequestComponent } from './complete-request/complete-request.component';\nimport { CancelledRequestComponent } from './cancelled-request/cancelled-request.component';\nimport { AcceptRequestComponent } from './accept-request/accept-request.component';\nimport { BroadcastRequestComponent } from './broadcast-request/broadcast-request.component';\nimport { MaterialModule } from '../../material.module';\n\nimport { RequestDetailComponent } from './request-detail/request-detail.component';\nimport { InterpreterListComponent } from './interpreter-list/interpreter-list.component';\nimport {AutocompleteLibModule} from 'angular-ng-autocomplete';\n\n\n@NgModule({\n  declarations: [\n    AllRequestSchedularComponent,\n    AllRequestListSchedularComponent,\n    RequestListComponent,\n    CompleteRequestComponent,\n    CancelledRequestComponent,\n    AcceptRequestComponent,\n    BroadcastRequestComponent,\n    RequestDetailComponent,\n    InterpreterListComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule,AutocompleteLibModule,\n    RequestSchedulerRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    SharedComponentsModule,\n    NgbModule,\n    TimePickerModule,\n    MatInputModule,\n    MatAutocompleteModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyBC_D6nmnxc-Og6sZJ_hfuxRbHcJB9Is38',//'AIzaSyBkH1R6_PO7fNY5L0z6CvV00oeNX8Vn0iE', \n      libraries: ['places']\n    }),\n    NgxMaskModule.forRoot(),\n  ]\n})\nexport class RequestSchedulerModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'broadcast-request',\n  templateUrl: './broadcast-request.component.html',\n  styleUrls: ['./broadcast-request.component.scss']\n})\nexport class BroadcastRequestComponent implements OnInit {\n  view_obj;\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  resp_msg;\n\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit() {\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n\n    console.log(\"userId-\", this.userId)\n    // console.log(\"roleId-\",this.roleId)\n    this.PendingRequestData('1');\n    // this.interpreterRequestData();\n    // this.searchControl.valueChanges\n    // .pipe(debounceTime(200))\n    // .subscribe(value => {\n    //   this.filerData(value);\n    // });\n    /*this.roleData = JSON.parse(localStorage.getItem('Allpermission'));\n    this.array_Obj = this.roleData['data'][0];\n    if(this.array_Obj.id){\n      this.array_Obj = this.roleData['data'][0];\n      console.log(\"roleData\", this.array_Obj);\n    }\n    */\n  }\n\n  getRowClass = (row) => {    \n    return {\n      'broadcastRequest': row.status == \"1\",\n    };\n   }\n  /*========== Search Filter For Table Start Here========*/\n  filerData(val) {\n    if (val) {\n      val = val.toLowerCase();\n    } else {\n      console.log(\"xxxxxxx\", this.filteredUser);\n      return this.filteredUser = [... this.userData];\n    }\n\n    const columns = Object.keys(this.userData[0]);\n    if (!columns.length) {\n      return;\n    }\n\n    const rows = this.userData.filter(function (d) {\n      for (let i = 0; i <= columns.length; i++) {\n        const column = columns[i];\n        // console.log(d[column]);\n        if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n          return true;\n        }\n      }\n    });\n    this.filteredUser = rows;\n  }\n  /*========== Search Filter For Table End Here========*/\n\n  /*========== Pending Request Start Here========*/\n  PendingRequestData(e) {\n    this.allData = this.search_name.value;\n    this.startDate = this.range.value.start_date;\n    this.endDate = this.range.value.end_date;\n    this.service.AllPendingRequest(this.allData, this.startDate, this.endDate,'')\n      .subscribe(res => {\n        if (res['status'] == '1') {\n          console.log(\"api response\", res);\n          this.list_Obj = res['data'];\n          this.userData = [...res['data']];\n          // console.log(\"listttttttt\", this.list_Obj);\n          this.filteredUser = this.list_Obj;\n          console.log(\"================sss=\",this.filteredUser);\n        }\n      });\n  }\n  /*========== Pending Request End Here========*/\n\n\n\n  //   interpreterRequestData(){\n  //     this.service.interpreterRequestList(this.roleId,this.userId,'1')\n  //     .subscribe(res => {\n  //       if(res['status']=='1'){\n  //         console.log(\"api response\",res);\n  //         this.list_Obj = res['data'];\n  //         this.userData = [...res['data']];\n  //         // console.log(\"listttttttt\", this.list_Obj);\n  //         this.filteredUser = this.list_Obj;\n  //       }\n\n  //     });\n  // }\n\n\n  /*========== Accept/Denay Through Interpreter Start Here========*/\n\n  // requestComplete(id, modal) {\n  interpreterReply(ris_id, res_type, modal) {\n\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.service.interpreterReqReply(this.userId, ris_id, res_type)\n          .subscribe(res => {\n            console.log(\"res---\", res)\n            this.status_msg = res;\n            if (res['status'] == '1') {\n              this.toastr.success(this.status_msg.message, '', { timeOut: 1000, positionClass: 'toast-top-center' });\n              // location.reload();\n\n              if (res_type == '2') {\n                this.router.navigate(['/interpreter-request/accept-list']);\n              } else {\n                this.router.navigate(['/interpreter-request/reject-list']);\n              }\n\n              // this.interpreterRequestData();\n            } else {\n              this.toastr.success(this.status_msg.message, '', { timeOut: 1000 });\n              this.router.navigate(['/interpreter-request/list']);\n            }\n          })\n      }, (reason) => {\n      });\n  }\n  /*========== Accept/Declined Through Interpreter End Here========*/\n\n  /*========== Show Details Start Here========*/\n\n  viewDetail(request_id) {\n    console.log(\"id--\", request_id);\n    this.service.getRequestDetail(request_id).subscribe(res => {\n      if (res['status'] == 1) {\n        this.view_obj = res['data'][0];\n        console.log(\"view object\", this.view_obj);\n        localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n        this.router.navigate(['/request-scheduler/details',request_id]);\n        // this.router.navigate(['/user-request/request-view', request_id])\n      } else {\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n      }\n\n    })\n  }\n  /*========== Show Details End Here========*/\n\n\n  /*\n    interpreterReply_old(user_id,ris_id,res_type,modal){\n      this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      this.service.interpreterReqReply(user_id,ris_id,res_type).subscribe(res => {\n        this.status_msg = res;\n          if (res['status'] == '1') {\n            this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n            // location.reload();\n            this.router.navigate(['/interpreter-request/reject-list']);\n            // this.interpreterRequestData();\n          }else{\n            this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n            this.router.navigate(['/interpreter-request/list']);\n          }\n      })\n      });\n    }\n  */\n  /*========== Number of Interpreter Popup Open Start Here========*/\n\n  numOfInterpreter(id, totalInterpreter, modal) {\n    // this.router.navigate(['/interpreter-request/interpreter-history']);\n    // console.log(\"iddddddddddd\",id);\n    // localStorage.setItem('interhistory', JSON.stringify(id));\n    console.log(\"totalInterpreter\", totalInterpreter)\n    if (totalInterpreter == 0) {\n      this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n    } else {\n      // this.router.navigate(['/languages/interpreter-detail']);\n      this.router.navigate(['/interpreter/interpreter-list/', id, 2]);\n      // interpreter-list/:id/:type\n    }\n\n  }\n\n  /*========== Number of Interpreter Popup Open End Here========*/\n}\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n        <ul class=\"heading\">\n            <li><a>Broadscasting</a></li>\n            <li>List</li>\n        </ul>\n    </div>\n\n    <div class=\"separator-breadcrumb border-top\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <input id=\"search\" (keyup)=\"PendingRequestData($event.target.value)\" placeholder=\"Search\" [formControl]=\"search_name\" class=\"form-control form-control-rounded\" type=\"text\">\n            </div>\n        </div>\n\n        <div class=\"col-md-4 dummy_text\">\n            <mat-form-field appearance=\"fill\">\n                <!-- <mat-label>Enter a date range</mat-label> -->\n                <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n                    <input matStartDate formControlName=\"start_date\" (dateChange)=\"PendingRequestData($event.target.value)\" placeholder=\"Start date\">\n                    <input matEndDate formControlName=\"end_date\" (dateChange)=\"PendingRequestData($event.target.value)\" placeholder=\"End date\">\n\n                </mat-date-range-input>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-date-range-picker #picker></mat-date-range-picker>\n            </mat-form-field>\n        </div>\n\n\n        <div class=\"col-md-12 requesttable broad broadnew\">\n            <div class=\"card  o-hidden\">\n                <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\" [rowClass]=\"getRowClass\">\n                   <!--  <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                        <ng-template ngx-datatable-header-template>\n                            S.No\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                            {{rowIndex +1}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                  <ng-template ngx-datatable-header-template>\n                    Caseworker\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.caseworker_name}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n                    <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                        <ng-template ngx-datatable-header-template>\n                            IR\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.ir}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Client Name\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.client_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                        <ng-template ngx-datatable-header-template>\n                            LOB\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lob_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                        <ng-template ngx-datatable-header-template>\n                            Assignment Type\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.assignment_type}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <!-- <ngx-datatable-column name=\"Email\" prop=\"email\">\n                  <ng-template ngx-datatable-header-template>\n                    Email\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.email}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column name=\"Name Of Contact Person\" prop=\"name_of_contact_person\">\n                  <ng-template ngx-datatable-header-template>\n                    Contact Person\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.name_of_contact_person}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n                    <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                  <ng-template ngx-datatable-header-template>\n                    Appointment Type\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                    {{row.appointment_type}}\n                  </ng-template>\n                </ngx-datatable-column> -->\n\n                    <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Language\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lang_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                   <!--  <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                        <ng-template ngx-datatable-header-template>\n                            Cell Phone\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n                    <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                      <ng-template ngx-datatable-header-template>\n                        Requester\n                      </ng-template>\n                      <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                        {{row.requester_name}}\n                      </ng-template>\n                  </ngx-datatable-column> -->\n                    <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\" *ngIf=\"roleId=='1'\">\n                        <ng-template ngx-datatable-header-template>\n                            No. Of Interpreter\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <span class=\"Cursor_Point\" (click)=\"numOfInterpreter(row.ris_id,row.no_of_interpreter,interpreterConfirmModal)\">{{row.no_of_interpreter}}</span>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <!-- <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                  <ng-template ngx-datatable-header-template>\n                    Interpreter Mobile\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.mobile | mask: '(000) 000-0000'}}\n                  </ng-template>  \n               </ngx-datatable-column> -->\n\n                    <ngx-datatable-column>\n                        <ng-template ngx-datatable-header-template>\n                            <span title=\"Requested date\">Requested date</span>\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <span title=\"{{row.created_at}}\"> {{row.created_at | date:'MM/dd/yyyy' }}</span>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <!-- <ngx-datatable-column>\n              <ng-template ngx-datatable-header-template>\n                <span title=\"Appointment date\">Appointment date</span>\n              </ng-template>\n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n              </ng-template>  \n          </ngx-datatable-column> -->\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" *ngIf=\"roleId=='1'\">\n                        <ng-template ngx-datatable-header-template>Status\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            Pending Acceptance\n                        </ng-template>\n\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                        <ng-template ngx-datatable-header-template>Action\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail(row.ris_id)\">View</button>\n                            <button *ngIf=\"roleId != '1' && roleId != '4'\" class=\"btn btn-outline-danger ml-2\" (click)=\"interpreterReply(row.ris_id,'1', acceptConfirmModal)\">\n                  Accept\n                  </button>\n\n                            <button *ngIf=\"roleId != '1' && roleId != '4'\" class=\"btn btn-outline-danger ml-2\" (click)=\"interpreterReply(row.ris_id,'3', rejectConfirmModal)\">\n                  Reject\n                  </button>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n\n\n                </ngx-datatable>\n            </div>\n           <!--  <ng-container *ngIf=\"list_Obj?.length <= 0\">\n                No Data Found!\n            </ng-container> -->\n            <div class=\"col-md-12 text-center\" *ngIf=\"list_Obj?.length <= 0\">\n                            <img src=\"../assets/images/nosearch.png\"><br><br>\n                            <h5><b>We couldn't find what you're looking for</b></h5>\n                        </div>\n        </div>\n\n    </div>\n</div>\n<ng-template #acceptConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>Are you sure? you want to Accept Request?</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n</ng-template>\n\n\n<ng-template #rejectConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>Are you sure? you want to Reject Request?</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n</ng-template>\n\n<ng-template #interpreterConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>There is no interpreter available.</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <!-- <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button> -->\n    </div>\n</ng-template>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-all-request-list-schedular',\n  templateUrl: './all-request-list-schedular.component.html',\n  styleUrls: ['./all-request-list-schedular.component.scss']\n})\nexport class AllRequestListSchedularComponent implements OnInit {\n\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  reminder;\n  view_obj;\n  resp_msg;\n  status;\n  email_formdata;\n  status_formdata;\n  searchEmail = '';\n  searchStatus = '';\n  request_status: FormControl = new FormControl('select');\n  searchControl: FormControl = new FormControl();\n  search_email: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n    public interval: number = 5;\n\n  constructor(  private productService: ProductService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router) { }\n\n  ngOnInit(){\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n    this.interpreterAllRequest('1');\n    this.GetAllPagesPermission();\n    this.searchControl.valueChanges\n      .pipe(debounceTime(200))\n      .subscribe(value => {\n        this.filerData(value);\n      });\n  } \n  // <option class=\"black-text bg-warning\" value=\"0\">New Request</option>\n  // <option class=\"bg-black text-white\" value=\"1\">Broadcasting</option>\n  // <option class=\"bg-primary text-white\" value=\"2\">In Progress</option>\n  // <option class=\"bg-success black-text\" value=\"3\">Completed</option>\n  getRowClass = (row) => {    \n    return {\n      'newRequest': row.status == \"0\",\n      'broadcastRequest': row.status == \"1\",\n      'progressRequest': row.status == \"2\",\n      'completeRequest': row.status == \"3\",\n      'rejecteRequest': row.status == \"4\",\n    };\n   }\n     /*========== Filter Start Here========*/\n      filerData(val) {\n        if (val) {\n          val = val.toLowerCase();\n        } else {\n          console.log(\"xxxxxxx\", this.filteredUser);\n          return this.filteredUser = [... this.userData];\n        }\n\n        const columns = Object.keys(this.userData[0]);\n        if (!columns.length) {\n          return;\n        }\n\n        const rows = this.userData.filter(function (d) {\n          for (let i = 0; i <= columns.length; i++) {\n            const column = columns[i];\n            // console.log(d[column]);\n            if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n              return true;\n            }\n          }\n        });\n        this.filteredUser = rows;\n      }\n       /*========== Filter End Here========*/\n\n       /*========== All Request List Start Here========*/\n      interpreterAllRequest(e) {\n        // this.allData = this.search_name.value;\n        this.startDate = this.range.value.start_date;\n        this.endDate = this.range.value.end_date;\n        this.status = this.request_status.value ;\n      \n        this.searchStatus = this.status ;\n        // console.log(\"statusssss\",this.searchStatus );\n         this.email_formdata = this.search_email.value;\n         this.searchEmail = this.email_formdata ;\n        //  alert(this.status);\n\n         this.service.interpreterAllRequestList(this.searchStatus == 'select' ? '' : this.searchStatus,this.searchEmail,this.startDate,this.endDate)\n          .subscribe(res => {\n            console.log(\"============interpreterAllRequestList\",res);\n            if (res['status'] == '1') {\n              console.log(\"api response\", res);\n              this.list_Obj = res['data'];\n              this.userData = [...res['data']];\n              this.filteredUser = this.list_Obj;\n            }else{\n              this.list_Obj = [];\n              this.userData = [];\n              this.filteredUser = [];\n            }\n\n          });\n      }\n       /*========== All Request List End Here========*/\n\n       /*========== Detail Start Here========*/\n      viewDetail(request_id){\n        console.log(\"id--\",  request_id);\n        this.service.getRequestDetail(request_id).subscribe(res => {\n          if(res['status'] == 1){\n            this.view_obj = res['data'][0];\n            console.log(\"api data\",  this.view_obj);\n            localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n            this.router.navigate(['/request-scheduler/details',request_id]);\n          }else{\n            this.resp_msg = res;\n            this.toastr.error(this.resp_msg.message,'', { timeOut: 2000 , positionClass: 'toast-top-center' });\n          }\n            \n        })\n      }\n  PermissionData=[]\n      GetAllPagesPermission(){\n        this.service.get('getClientRoleMenusForPages/'+JSON.parse(localStorage.getItem('roleId'))).subscribe(res => {\n        this.PermissionData=res['data'];\n        console.log('PermissionData',this.PermissionData)\n        // for (var i = 0; i < this.PermissionData.length; ++i) {\n        //                    var aa= document.getElementsByClassName('ClientViewId');\n\n        //    if(this.PermissionData[i].module_id == 7){\n        //        if(this.PermissionData[i].add_permission == 'true'){\n        //          document.getElementById('ClientAddId').classList.remove('displayNone')\n        //        }else{\n        //          document.getElementById('ClientAddId').classList.add('displayNone')\n        //       }\n\n        //        if(this.PermissionData[i].view_permission == 'true'){\n        //          for (var nk = 0; nk < aa.length; ++nk) {\n        //          document.getElementsByClassName('ClientViewId')[nk].classList.remove('displayNone')\n        //          }\n\n        //        }else{\n        //          for (var nk = 0; nk < aa.length; ++nk) {\n        //          document.getElementsByClassName('ClientViewId')[nk].classList.add('displayNone')\n        //          }\n        //       }\n        //    }else{\n        //                 document.getElementById('ClientAddId').classList.add('displayNone')\n        //         for (var nk = 0; nk < aa.length; ++nk) {\n        //          document.getElementsByClassName('ClientViewId')[nk].classList.add('displayNone')\n        //          }\n\n        //    }\n        //  } \n        })\n      }\n\n       /*========== Detail End Here========*/\n\n       newRequest(){\n        this.router.navigate(['/request-scheduler/all-request-schedular']);\n       }\n\n searchNameEmail = '';\n  distance = '';\n  rate = '';\n  rating = '';\n  interpreter_obj\n         //assign\n  assignMyNearbyInterpreter(service_id,info){\n    \n    // localStorage.setItem('assignData', JSON.stringify(info));\n    // localStorage.setItem('serviceId', JSON.stringify(service_id));\n    this.service.myNearbyInterpreter(service_id,info.language,this.searchNameEmail,this.distance,this.rate,this.rating).subscribe(res => {\n        this.interpreter_obj = res['data'];\n        console.log(\"interpreter_obj\",  this.interpreter_obj);\n        // localStorage.setItem('viewDatainMap', JSON.stringify(this.view_interpreter));\n        this.router.navigate(['/request-scheduler/interpreter-view',service_id])\n    })\n  }\n\n}\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n        <ul class=\"heading\">\n            <li><a>All Request</a></li>\n            <li>List</li>\n        </ul>\n    </div>\n\n\n    <div class=\"separator-breadcrumb border-top\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <input id=\"search\" placeholder=\"Email\" (keyup)=\"interpreterAllRequest($event.target.value)\" [formControl]=\"search_email\" class=\"form-control form-control-rounded\" type=\"text\">\n            </div>\n\n        </div>\n\n\n        <div class=\"col-md-2\">\n            <div class=\"form-group\">\n                <select class=\"form-control form-control-rounded\" (change)=\"interpreterAllRequest($event.target.value)\" [formControl]=\"request_status\">\n          <option disabled value=\"select\">Select Status</option>\n\n          <option class=\"black-text bg-warning\" value=\"0\">New Request</option>\n          <option class=\"bg-black text-white\" value=\"1\">Broadcasting</option>\n          <option class=\"bg-primary text-white\" value=\"2\">In Progress</option>\n          <option class=\"bg-success black-text\" value=\"3\">Completed</option>\n          <!-- <option class=\"bg-danger text-white\" value=\"5\">Cancelled</option> -->\n          <!-- <option class=\"bg-default black-text\" value=\"6\">Unable To Fill</option> -->\n        </select>\n            </div>\n        </div>\n\n        <div class=\"col-md-4 dummy_text\">\n            <mat-form-field appearance=\"fill\">\n                <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n                    <input matStartDate formControlName=\"start_date\" (dateChange)=\"interpreterAllRequest($event.target.value)\" placeholder=\"Start date\">\n                    <input matEndDate formControlName=\"end_date\" (dateChange)=\"interpreterAllRequest($event.target.value)\" placeholder=\"End date\">\n\n                </mat-date-range-input>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-date-range-picker #picker></mat-date-range-picker>\n            </mat-form-field>\n        </div>\n\n        <div id=\"ClientAddId\" class=\"col-md-2\">\n            <button class=\"btn btn-primary float-right\" (click)=\"newRequest()\">Create New Request</button>\n        </div>\n        <!-- <div class=\"col-md-2\">\n  <button class=\"btn btn-outline-secondary\" (click)=\"interpreterAllRequest()\">Apply</button>\n  </div> -->\n\n\n        <div class=\"col-md-12 requesttable\">\n            <div class=\"card o-hidden\">\n                <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\" [rowClass]=\"getRowClass\">\n                    <!-- <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                        <ng-template ngx-datatable-header-template>\n                            S.No\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                            {{rowIndex +1}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                        <ng-template ngx-datatable-header-template>\n                            IR\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.ir}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Client Name\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.client_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <!-- <ngx-datatable-column name=\"Name Of Contact Person\" prop=\"name_of_contact_person\">\n            <ng-template ngx-datatable-header-template>\n              Contact Person\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.name_of_contact_person}}\n            </ng-template>\n          </ngx-datatable-column> -->\n\n                    <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                        <ng-template ngx-datatable-header-template>\n                            LOB\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lob_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\" [minWidth]=\"150\">\n                        <ng-template ngx-datatable-header-template>\n                            Assignment Type\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.assignment_type}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <!-- <ngx-datatable-column name=\"Email\" prop=\"email\">\n            <ng-template ngx-datatable-header-template>\n              Email\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.email}}\n            </ng-template>\n          </ngx-datatable-column> -->\n\n\n                    <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Language\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lang_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n\n                   <!--  <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                        <ng-template ngx-datatable-header-template>\n                            Cell Phone\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n              <span title=\"Appointment date\"> Appointment date</span>\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <span title=\"{{row.date}}\"> {{row.date | date:'MM/dd/yyyy' }}</span>\n            </ng-template>\n          </ngx-datatable-column> -->\n\n                    <!-- <ngx-datatable-column name=\"Site Contact\" prop=\"site_contact\">\n            <ng-template ngx-datatable-header-template>\n              Site Contact\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.site_contact | mask: '(000) 000-0000'}}\n            </ng-template>\n          </ngx-datatable-column> -->\n                    <ngx-datatable-column>\n                        <ng-template ngx-datatable-header-template>\n                            <span title=\"Requested date\">Requested date</span>\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <span title=\"{{row.created_at}}\"> {{row.created_at | date:'MM/dd/yyyy' }}</span>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" *ngIf=\"roleId=='1' || roleId=='4'\">\n                        <ng-template ngx-datatable-header-template>Status\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <!-- \n              <span class=\"text-warning\" *ngIf=\"row.status==1\">New Request</span>\n              <span class=\"assign-color\" *ngIf=\"row.status==2\">Broadcasting</span>\n              <span class=\"text-primary\" *ngIf=\"row.status==3\">In Progress</span>\n              <span class=\"text-success\" *ngIf=\"row.status==4\">Completed</span>\n              <span class=\"text-danger\" *ngIf=\"row.status==5\">Canceled</span> -->\n\n                            <span *ngIf=\"row.status==0\">New Request</span>\n                            <span *ngIf=\"row.status==1\">Broadcasting</span>\n                            <span *ngIf=\"row.status==2\">In Progress</span>\n                            <span *ngIf=\"row.status==3\">Completed</span>\n                            <span *ngIf=\"row.status==4\">Reassign</span>\n                            <!-- <span *ngIf=\"row.status==5\">Canceled</span> -->\n                            <!-- <span class=\"text-danger\" >Unable to fill</span> -->\n                        </ng-template>\n\n                    </ngx-datatable-column>\n\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                        <ng-template ngx-datatable-header-template>Action\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <button class=\"ClientViewId btn btn-outline-secondary mr-1\" (click)=\"viewDetail(row.id)\">View</button>\n\n                            <button class=\"btn btn-outline-secondary ml-2\" *ngIf=\" row.status == 0 && (roleId =='1' || roleId == '4')\" (click)=\"assignMyNearbyInterpreter(row.id,row)\">Broadcast</button>\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </div>\n           <!--  <ng-container *ngIf=\"list_Obj?.length <= 0\">\n                No Data Found\n            </ng-container> -->\n             <div class=\"col-md-12 text-center findnew\" *ngIf=\"list_Obj?.length <= 0\">\n                            <img src=\"../assets/images/nosearch.png\"><br><br>\n                            <h5>We couldn't find what you're looking for</h5>\n                        </div>\n        </div>\n\n    </div>\n</div>\n\n<style type=\"text/css\">\n    .displayNone {\n        display: none !important;\n    }\n</style>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-complete-request',\n  templateUrl: './complete-request.component.html',\n  styleUrls: ['./complete-request.component.scss']\n})\nexport class CompleteRequestComponent implements OnInit {\n  \n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  view_obj;\n  resp_msg;\n  // searchControl: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private toastr: ToastrService,\n    public service:HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit(){\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n\n    // this.interpreterRequestData('1');\n    this.getCompleteReq('1');\n    // this.searchControl.valueChanges\n    // .pipe(debounceTime(200))\n    // .subscribe(value => {\n    //   this.filerData(value);\n    // });\n   \n  }\n  getRowClass = (row) => {    \n    return {\n      'completeRequest': row.status == \"3\",\n    };\n   }\n  // filerData(val) {\n  //   if (val) {\n  //     val = val.toLowerCase();\n  //   } else {\n  //     console.log(\"xxxxxxx\",this.filteredUser);\n  //     return this.filteredUser = [... this.userData];\n  //   }\n\n  //   const columns = Object.keys( this.userData[0]);\n  //   if (!columns.length) {\n  //     return;\n  //   }\n\n  //   const rows =  this.userData.filter(function(d) {\n  //     for (let i = 0; i <= columns.length; i++) {\n  //       const column = columns[i];\n  //       // console.log(d[column]);\n  //       if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n  //         return true;\n  //       }\n  //     }\n  //   });\n  //   this.filteredUser = rows;\n  // }\n\n//   interpreterRequestData(e){\n//     this.allData = this.search_name.value;\n//     this.startDate = this.range.value.start_date;\n//     this.endDate = this.range.value.end_date;\n//     this.service.interpreterRequestList(this.roleId,this.userId,3,this.allData,\n//     this.startDate,this.endDate)\n//     .subscribe(res => {\n//       if(res['status']=='1'){\n//         console.log(\"api response\",res);\n//         this.list_Obj = res['data'];\n//         this.userData = [...res['data']];\n//         // console.log(\"listttttttt\", this.list_Obj);\n//         this.filteredUser = this.list_Obj;\n//       }\n       \n//     });\n// }\n\ngetCompleteReq(e){\n  this.allData = this.search_name.value;\n  this.startDate = this.range.value.start_date;\n  this.endDate = this.range.value.end_date;\n  this.service.post(\"getCompleteReq\",{role_id:this.roleId,user_id:this.userId,status:'4',search_info:this.allData,start_date: this.startDate,end_date:this.endDate})\n  .subscribe(res => {\n    if(res['status']=='1'){\n      console.log(\"api response=========================\",res);\n      this.list_Obj = res['data'];\n      this.userData = [...res['data']];\n      // console.log(\"listttttttt\", this.list_Obj);\n      this.filteredUser = this.list_Obj;\n    }\n     \n  });\n}\nviewDetail(request_id){\n  console.log(\"id--\",  request_id);\n  this.service.getRequestDetail(request_id).subscribe(res => {\n    if(res['status'] == 1){\n      this.view_obj = res['data'][0];\n      console.log(\"api response\",  this.view_obj);\n      localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n      this.router.navigate(['/request-scheduler/details',request_id]);\n      // this.router.navigate(['/user-request/request-view',request_id])\n    }else{\n      this.resp_msg = res;\n      this.toastr.error(this.resp_msg.message,'', { timeOut: 2000, positionClass: 'toast-top-center' });\n    }   \n  })\n}\n\n\n}\n\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n        <ul class=\"heading\">\n            <li><a>Completed</a></li>\n            <li>List</li>\n        </ul>\n    </div>\n    <div class=\"separator-breadcrumb border-top\"></div>\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <input id=\"search\" (keyup)=\"getCompleteReq($event.target.value)\" placeholder=\"Search\" [formControl]=\"search_name\" class=\"form-control form-control-rounded\" type=\"text\">\n            </div>\n        </div>\n        <div class=\"col-md-4 dummy_text\">\n            <mat-form-field appearance=\"fill\">\n            <!-- <mat-label>Enter a date range</mat-label> -->\n            <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n            <input matStartDate formControlName=\"start_date\" (dateChange)=\"getCompleteReq($event.target.value)\" placeholder=\"Start date\">\n            <input matEndDate formControlName=\"end_date\" (dateChange)=\"getCompleteReq($event.target.value)\" placeholder=\"End date\">\n            </mat-date-range-input>\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n            </mat-form-field>\n        </div>\n        <div class=\"col-md-12\">\n            <div class=\"card o-hidden requesttable greentablenew greentable\">\n                <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen \" [columnMode]=\"'force'\" [rowClass]=\"getRowClass\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\">\n                <!--  <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                <ng-template ngx-datatable-header-template>\n                S.No\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                {{rowIndex +1}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                <ng-template ngx-datatable-header-template>\n                Caseworker\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.caseworker_name}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                <ng-template ngx-datatable-header-template>\n                IR\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.ir}}\n                </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                <ng-template ngx-datatable-header-template>\n                Client Name\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.client_name}}\n                </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                <ng-template ngx-datatable-header-template>\n                LOB\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.lob_name}}\n                </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                <ng-template ngx-datatable-header-template>\n                Assignment Type\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.assignment_type}}\n                </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                <ng-template ngx-datatable-header-template>\n                Language\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.lang_name}}\n                </ng-template>\n                </ngx-datatable-column>\n                <!-- <ngx-datatable-column name=\"Email\" prop=\"email\">\n                <ng-template ngx-datatable-header-template>\n                Email\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.email}}\n                </ng-template>\n                </ngx-datatable-column>   -->\n                <!-- <ngx-datatable-column name=\"Name Of Contact Person\" prop=\"name_of_contact_person\">\n                <ng-template ngx-datatable-header-template>\n                Contact Person\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.name_of_contact_person}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                <ng-template ngx-datatable-header-template>\n                Appointment Type\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.appointment_type}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <!--  <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                <ng-template ngx-datatable-header-template>\n                Cell Phone\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                <ng-template ngx-datatable-header-template>\n                Requester\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.requester_name}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\">\n                <ng-template ngx-datatable-header-template>\n                Interpreter\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.interpreter_name}}\n                </ng-template>\n                </ngx-datatable-column>\n                <!--  <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"interpreter_mobile\">\n                <ng-template ngx-datatable-header-template>\n                Interpreter Mobile\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.interpreter_phoneCode}} {{row.interpreter_mobile | mask: '(000) 000-0000'}}\n                </ng-template>\n                </ngx-datatable-column> -->\n                <ngx-datatable-column>\n                <ng-template ngx-datatable-header-template>\n                <span title=\"Requested date\">Requested date</span>\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n                </ng-template>\n                </ngx-datatable-column>\n                <!-- <ngx-datatable-column>\n                <ng-template ngx-datatable-header-template>\n                <span title=\"Appointment date\"> Appointment date</span>\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n                </ng-template>\n                </ngx-datatable-column> -->\n                <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                <ng-template ngx-datatable-header-template>Status\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                Completed Request\n                </ng-template>\n                </ngx-datatable-column>\n                <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                <ng-template ngx-datatable-header-template>Action\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <button class=\"btn btn-outline-secondary\" (click)=\"viewDetail(row.ris_id)\">View</button>\n                </ng-template>\n                </ngx-datatable-column>\n                <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                <ng-template ngx-datatable-header-template *ngIf=\"roleId=='1';then Status; else Actions\">\n                </ng-template>\n                <ng-template ngx-datatable-header-template #Status>Status\n                </ng-template>\n                <ng-template ngx-datatable-header-template #Actions>Actions\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Status>\n                <button class=\"btn btn-outline-secondary ml-2\" >Request Accept</button>\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Actions>\n                <button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>\n                <button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>\n                </ng-template>\n                </ngx-datatable-column>\n                -->\n                </ngx-datatable>\n            </div>\n            <!--  <ng-container *ngIf=\"list_Obj?.length <= 0\">\n            No Data Found\n            </ng-container> -->\n            <div class=\"col-md-12 text-center findnew\" *ngIf=\"list_Obj?.length <= 0\">\n                <img src=\"../assets/images/nosearch.png\"><br><br>\n                <h5><b>We couldn't find what you're looking for</b></h5>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, NgZone, ViewChild, ElementRef, ViewEncapsulation } from '@angular/core';\n// import { Component, OnInit,TemplateRef, ViewChild } from '@angular/core';\nimport { HttpService } from \"../../../shared/services/http.service\";\nimport { ValidationsService } from 'src/app/shared/services/validations.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n\nimport { HttpClient } from '@angular/common/http';\nimport { DataLayerService } from 'src/app/shared/services/data-layer.service';\nimport { environment } from 'src/environments/environment';\nimport { enableRipple } from '@syncfusion/ej2-base';\nimport * as moment from 'moment';\nimport { MapsAPILoader } from '@agm/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n//enable ripple style\nenableRipple(true);\n@Component({\n  selector: 'app-all-request-schedular',\n  templateUrl: './all-request-schedular.component.html',\n  styleUrls: ['./all-request-schedular.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\n\n\nexport class AllRequestSchedularComponent implements OnInit {\n  public clientObj: string[] = [];\n  public assignment_Obj;\n  public platform_Obj;\n  public language_Obj;\n  public myvar;\n  public onsite;\n  simultaneous_var = false;\n  public country_Obj;\n  // validation form variable start\n  submitted: boolean;\n  submittedMed: boolean;\n  submittedEdu: boolean;\n  submittedComm: boolean;\n  submittedLeg: boolean;\n  submittedOther: boolean;\n  // validation form variable end\n  public save_obj;\n  public save_Msg;\n  public recurrent;\n  default_code;\n  assignment_var = false;\n  days = false;\n  public dailyData;\n  start_end = true;\n  every_show_hide = true;\n  public days_Obj;\n  public event_at;\n  public scheduler_id;\n  public ir_Obj;\n  public entry_By_data;\n  public days2;\n  public editId;\n  public edit_Obj;\n  public lob_Obj;\n\n  public formatString: string = 'HH:mm';\n  public interval: number = 5;\n\n  // map variable start\n  latitude: number;\n  longitude: number;\n\n  zoom: number;\n  address: string;\n  sec_address: string;\n  new_address: string;\n  provider_address: string;\n  client_id;\n  private geoCoder;\n  @ViewChild('search', { static: false }) searchElementRef: ElementRef;\n  // maps the local data column to fields property\n  public localFields: Object = { value: 'name' };\n  //set the placeholder to AutoComplete input\n\n  //auto complete\n  // map variable end\n  form: FormGroup;\n  client_name: FormControl;\n  filterRegions: Observable<any[]>;\n  data1: string[] = [];\n\n  myControl = new FormControl();\n  vci_opi = false;\n\n  // show hide variable start\n  showEductionForm = false;\n  showMedicalForm = false;\n  showLegalForm = false;\n  showCommunityForm = false;\n  showOtherForm = false;\n  // show hide variable end\n\n  // form name start here\n  newRequestForm: FormGroup;\n  educationRequestForm: FormGroup;\n  legalRequestForm: FormGroup;\n  communityRequestForm: FormGroup;\n  medicalRequestForm: FormGroup;\n  otherRequestForm: FormGroup;\n  keyword = 'name';\n  minDate = new Date()\n\n  // form name end here\n  constructor(\n    public validation: ValidationsService,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    private router: Router,\n    private dl: DataLayerService,\n    public service: HttpService,\n    private http: HttpClient,\n    private ngZone: NgZone,\n    private mapsAPILoader: MapsAPILoader,\n  ) { }\n\n\n  ngOnInit() {\n    this.CountryList();\n    this.createForm1();\n    this.createForm2();\n    this.createForm3();\n    this.createForm4();\n    this.createForm5();\n    this.createForm6();\n\n    this.allClientList();\n    // this.allAssignmentTypeList();\n    this.allPlatformList();\n    this.allLanguageList();\n    this.allDayList();\n    this.date_func();\n    this.assign_date_func();\n    this.getIRList();\n    this.getGooleAddress1();\n    this.allLobList();\n\n    this.scheduler_id = JSON.parse(localStorage.getItem('userId'));\n    this.entry_By_data = JSON.parse(localStorage.getItem('loginData'));\n    this.newRequestForm.get('entered_by').patchValue(this.entry_By_data.first_name);\n    this.editId = JSON.parse(localStorage.getItem('rowId'));\n  }\n\n  /*==========google api load Places Autocomplete function start here========*/\n  getGooleAddress1() {\n    this.mapsAPILoader.load().then(() => {\n      this.setCurrentLocation();\n      this.geoCoder = new google.maps.Geocoder;\n\n      let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement);\n      autocomplete.addListener(\"place_changed\", () => {\n        this.ngZone.run(() => {\n          //get the place result\n          let place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          this.new_address = place['formatted_address'];\n          console.log(\"address\", this.new_address);\n\n          this.sec_address = place['formatted_address'];\n\n          //verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n          // console.log(\"place-\",place[0].formatted_address);\n\n          //set latitude, longitude and zoom\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          console.log(\"latitude-\", this.latitude);\n          console.log(\"longitude-\", this.longitude);\n\n          this.zoom = 12;\n\n        });\n      });\n    });\n  }\n  /*==========google api load Places Autocomplete function end here========*/\n\n  /*==========Step Form Value Start Here========*/\n  createForm1() {\n    this.newRequestForm = this.fb.group({\n      ir: ['', this.validation.onlyRequired_validator],\n      entered_by: ['', this.validation.onlyRequired_validator],\n      client_name: ['', this.validation.onlyRequired_validator],\n      // requested_by:['', this.validation.onlyRequired_validator],\n      request_date: ['', this.validation.onlyRequired_validator],\n      platform: ['', this.validation.onlyRequired_validator],\n      assignment_type: ['', this.validation.onlyRequired_validator],\n      // simultaneous:[''],\n      receivers_required: ['', this.validation.onlyRequired_validator],\n      language: ['', this.validation.onlyRequired_validator],\n      assignment_date: ['', this.validation.onlyRequired_validator],\n      from_time: ['', this.validation.onlyRequired_validator],\n      to_time: ['', this.validation.onlyRequired_validator],\n      recurrent_assignment: [''],\n      // name_of_contact_person: ['', this.validation.onlyRequired_validator],\n      // cell_phone: ['', this.validation.onlyRequired_validator],\n      // building_name: ['', this.validation.onlyRequired_validator],\n      // building_address: ['', this.validation.onlyRequired_validator],\n      // room: ['', this.validation.onlyRequired_validator],\n      // notes: ['', this.validation.onlyRequired_validator],\n      // phone_code: ['', this.validation.onlyRequired_validator],\n\n      //  name_of_contact_person: [''],\n      // cell_phone: [''],\n      // building_name: [''],\n      // building_address: [''],\n      // room: [''],\n      // notes: [''],\n      // phone_code: [''],\n\n\n\n      // caseworker_name:[''],\n      // caseworker_lastname:[''],\n      // position:[''],\n      // contact_person_cellphone:[''],\n      // case_name:[''],\n      // client_firstname:[''],\n      // client_lastname:[''],\n      // trails:[''],\n      // home_visit:[''],\n      // apt:[''],\n\n      how_many_receivers: [''],\n      event_start_time: [''],\n      event_end_time: [''],\n      event_start_date: [''],\n      event_end_date: [''],\n      repeats: [''],\n      every: [''],\n      event_duration: [''],\n      event_at: [''],\n      scheduler_id: [''],\n      requested_by: [''],\n      lob: ['', this.validation.onlyRequired_validator],\n      latitude: [''],\n      longitude: [''],\n      address: [''],\n      vci_opi_phone_code: [1],\n      vci_opi_cell_phone: [''],\n      line: [''],\n\n\n    })\n  }\n\n  createForm2() {\n    this.educationRequestForm = this.fb.group({\n      name_of_contact_person: ['', this.validation.onlyRequired_validator],\n      cell_phone: ['', this.validation.onlyRequired_validator],\n      building_name: ['', this.validation.onlyRequired_validator],\n      building_address: ['', this.validation.onlyRequired_validator],\n      room: ['', this.validation.onlyRequired_validator],\n      notes: ['', this.validation.onlyRequired_validator],\n      phone_code: [1, this.validation.onlyRequired_validator],\n      email: ['', this.validation.onlyRequired_validator],\n      address: [''],\n      latitude: [''],\n      longitude: [''],\n    })\n  }\n\n  createForm3() {\n    this.communityRequestForm = this.fb.group({\n      caseworker_firstname: ['', this.validation.onlyRequired_validator],\n      caseworker_lastname: ['', this.validation.onlyRequired_validator],\n      position: ['', this.validation.onlyRequired_validator],\n      contact_person_phone_code: [1, this.validation.onlyRequired_validator],\n      contact_person_cellphone: [, this.validation.onlyRequired_validator],\n      phone_code: [1, this.validation.onlyRequired_validator],\n      name_of_contact_person: ['', this.validation.onlyRequired_validator],\n      cell_phone: ['', this.validation.onlyRequired_validator],\n      case_name: ['', this.validation.onlyRequired_validator],\n      client_firstname: ['', this.validation.onlyRequired_validator],\n      client_lastname: ['', this.validation.onlyRequired_validator],\n      trails: ['', this.validation.onlyRequired_validator],\n      home_visit: ['', this.validation.onlyRequired_validator],\n      apt: [''],\n      address: [''],\n      practice_name: [''],\n      provider_name: [''],\n      provider_address: [''],\n      room: [''],\n      notes: ['', this.validation.onlyRequired_validator],\n      latitude: [''],\n      longitude: [''],\n      provider_latitude: [''],\n      provider_longitude: [''],\n    })\n  }\n\n  createForm4() {\n    this.medicalRequestForm = this.fb.group({\n      practice_name: ['', this.validation.onlyRequired_validator],\n      provider_name: ['', this.validation.onlyRequired_validator],\n      phone_code: [1, this.validation.onlyRequired_validator],\n      cell_phone: ['', this.validation.onlyRequired_validator],\n      room: ['', this.validation.onlyRequired_validator],\n      notes: ['', this.validation.onlyRequired_validator],\n      address: [''],\n      latitude: [''],\n      longitude: [''],\n    })\n  }\n\n  createForm5() {\n    this.legalRequestForm = this.fb.group({\n      name_of_contact_person: ['', this.validation.onlyRequired_validator],\n      cell_phone: ['', this.validation.onlyRequired_validator],\n      building_name: ['', this.validation.onlyRequired_validator],\n      building_address: ['', this.validation.onlyRequired_validator],\n      room: ['', this.validation.onlyRequired_validator],\n      notes: ['', this.validation.onlyRequired_validator],\n      phone_code: [1, this.validation.onlyRequired_validator],\n      email: ['', this.validation.onlyRequired_validator],\n    })\n  }\n  createForm6() {\n    this.otherRequestForm = this.fb.group({\n      name_of_contact_person: ['', this.validation.onlyRequired_validator],\n      cell_phone: ['', this.validation.onlyRequired_validator],\n      building_name: ['', this.validation.onlyRequired_validator],\n      building_address: ['', this.validation.onlyRequired_validator],\n      room: ['', this.validation.onlyRequired_validator],\n      notes: ['', this.validation.onlyRequired_validator],\n      phone_code: [1, this.validation.onlyRequired_validator],\n      email: ['', this.validation.onlyRequired_validator],\n    })\n  }\n\n  /*==========Step Form Value End Here========*/\n\n  /*========== IR Start Here========*/\n  getIRList() {\n    this.service.get('getLastRISEntry')\n      .subscribe(res => {\n        this.ir_Obj = res['data'];\n        this.newRequestForm.get('ir').patchValue(this.ir_Obj.req);\n      });\n  }\n  /*========== IR end Here========*/\n  /*========== Country Code for Mobile Start Here========*/\n  CountryList() {\n    this.service.getCountryMobileCode().subscribe(res => {\n      if (res['status'] == '1') {\n        this.country_Obj = res['data'];\n        console.log(\"=================\", this.country_Obj);\n        this.default_code = this.country_Obj[1].id;\n      }\n    });\n  }\n  /*==========  Country Code for Mobile End Here========*/\n\n  /*==========Client name list start Here========*/\n  public countries = [\n    {\n      id: 1,\n      name: 'Albania',\n    },\n\n  ];\n  allClientList() {\n\n    this.service.get('getAllClients').subscribe(res => {\n      this.clientObj = res['data']\n\n    });\n    this.filterRegions = this.newRequestForm.get('client_name').valueChanges.pipe(startWith(''),\n      map(value => this.getRegions(value)));\n\n\n  }\n\n  getRegions(name: string): any {\n    return this.clientObj.filter((x: any) => x.name.toLocaleLowerCase().indexOf(name.toLocaleLowerCase()) > -1);\n  }\n\n  /*==========Client name list end Here========*/\n\n  /*==========LOB list start Here========*/\n\n  allLobList() {\n    this.service.get('getAllLOB')\n      .subscribe(res => {\n        this.lob_Obj = res['data'];\n\n      });\n  }\n  /*==========LOB list end Here========*/\n\n  /*==========Assignment Type list start Here========*/\n\n  // allAssignmentTypeList() {\n  //   this.service.get('getAllAssignmentTypes')\n  //     .subscribe(res => {\n  //       this.assignment_Obj = res['data'];\n\n  //     });\n  // }\n  /*==========Assignment Type list end Here========*/\n  /*==========Platform start Here========*/\n  allPlatformList() {\n    this.service.get('getAllPlatforms').subscribe(res => {\n      this.platform_Obj = res['data'];\n    });\n\n  }\n  /*==========Platform end Here========*/\n  /*==========Language start Here========*/\n\n  allLanguageList() {\n    this.service.get('getAllLanguages').subscribe(res => { this.language_Obj = res['data'] });\n  }\n  /*==========Language end Here========*/\n\n  /*==========Days api start Here========*/\n  allDayList() {\n    this.service.get('getDays')\n      .subscribe(res => {\n        this.days_Obj = res['data'];\n      });\n  }\n  /*==========Days api end Here========*/\n  onChangeRequest($event) {\n\n  }\n  onChangeClient(e) {\n  }\n  onChangeAssign($event) {\n\n  }\n  onChangeLanguage($event) {\n\n  }\n  /*==========Home visit function start Here========*/\n  homevisit(e) {\n    if (this.communityRequestForm.value.home_visit == '1' || this.communityRequestForm.value.home_visit == '0') {\n      setTimeout(() => {\n        console.log(\"=====\", this.searchElementRef);\n        // this.getGooleAddress1();\n      }, 500);\n    }\n    if (e.target.value == '1') {\n      this.communityRequestForm.controls['address'].setValue('');\n      this.communityRequestForm.controls['apt'].setValue('');\n    }\n    if (e.target.value == '0') {\n      this.communityRequestForm.controls['practice_name'].setValue('');\n      this.communityRequestForm.controls['provider_name'].setValue('');\n      this.communityRequestForm.controls['room'].setValue('');\n      this.communityRequestForm.controls['provider_address'].setValue('');\n    }\n  }\n\n  /*==========Home visit function end Here========*/\n\n  /*==========LOB function start Here========*/\n  onChangeLob(e) {\n    this.service.get('getAllAssignmentTypes/' + this.newRequestForm.value.lob).subscribe(res => { this.assignment_Obj = res['data'] });\n    if (e.target.value == '8') {\n      this.showEductionForm = true;\n      this.showMedicalForm = false;\n      this.showLegalForm = false;\n      this.showCommunityForm = false;\n      this.showOtherForm = false;\n    }\n    if (e.target.value == '3') {\n      this.showMedicalForm = true;\n      this.showEductionForm = false;\n      this.showLegalForm = false;\n      this.showCommunityForm = false;\n      this.showOtherForm = false;\n      setTimeout(() => {\n        console.log(\"=====\", this.searchElementRef);\n        // this.getGooleAddress();\n      }, 500);\n    }\n    if (e.target.value == '2') {\n      this.showMedicalForm = false;\n      this.showEductionForm = false;\n      this.showLegalForm = false;\n      this.showCommunityForm = true;\n      this.showOtherForm = false;\n    }\n    if (e.target.value == '1') {\n      this.showMedicalForm = false;\n      this.showEductionForm = false;\n      this.showLegalForm = true;\n      this.showCommunityForm = false;\n      this.showOtherForm = false;\n    }\n    if (e.target.value == '9') {\n      this.showMedicalForm = false;\n      this.showEductionForm = false;\n      this.showCommunityForm = false;\n      this.showLegalForm = false;\n      this.showOtherForm = true;\n    }\n  }\n  /*==========LOB function end Here========*/\n  /*========== Recurrent Assignment function start here ========*/\n  newRecurrent(ev) {\n    this.recurrent = ev.target.value;\n    if (this.recurrent == '1') {\n      this.assignment_var = true;\n    }\n    else {\n      this.assignment_var = false;\n    }\n  }\n  /*========== Recurrent Assignment function end here ========*/\n\n  /*==========Repeats Function start here ========*/\n  newRepeat(event) {\n    this.dailyData = event.target.value;\n    if (this.dailyData == '1') {\n      this.event_at = [0, 1, 2, 3, 4, 5, 6]\n      this.days = true;\n      this.start_end = false;\n      this.every_show_hide = false;\n      this.days2 = false;\n    }\n    else if (this.dailyData == '2') {\n      this.every_show_hide = true;\n      this.days = false;\n      this.start_end = true;\n      this.days2 = true;\n    }\n    else if (this.dailyData == '3') {\n      this.every_show_hide = false;\n    }\n    else if (this.dailyData == '4') {\n      this.every_show_hide = false;\n    }\n    else {\n      this.days = false;\n      this.start_end = true;\n      this.every_show_hide = true;\n    }\n  }\n  /*==========Repeats Function end here ========*/\n\n  /*==========Platform Function start here ========*/\n  vciOPILine(e) {\n    if (e.target.value == \"VCI + OPI\") this.vci_opi = true;\n    else this.vci_opi = false;\n  }\n  newSimultaneous(e) {\n    console.log(e.target.value);\n    this.myvar = e.target.value\n\n    if (this.myvar == 1 && this.newRequestForm.value.platform == 'On-Site') {\n      this.simultaneous_var = true;\n    }\n    else {\n      this.simultaneous_var = false;\n    }\n\n  }\n  /*==========platform Function end here ========*/\n\n  /*==========Client Name Function start here ========*/\n  changeClient(data) {\n    console.log(data)\n    this.newRequestForm.get('requested_by').patchValue(data.contact_person_name);\n    // this.client_id = this.clientObj[e]['id'];\n\n  }\n\n  /*==========Client Name Function end here ========*/\n  changeCheckbox(i) {\n\n  }\n  lineData;\n  async getLineDetails() {\n    console.log(this.newRequestForm.value)\n    if (this.newRequestForm.value.assignment_date != '' && this.newRequestForm.value.from_time != '' &&  this.newRequestForm.value.platform == \"VCI + OPI\") {\n    var newTime = moment(this.newRequestForm.value.from_time).add(30, 'm').toDate();\n    this.newRequestForm.value.from_time = moment(newTime).format(\"LT\");\n      try {\n        var result = await this.service.post('getDataByAssignmentDate', { assignment_date: this.newRequestForm.value.assignment_date, from_time: this.newRequestForm.value.from_time }).toPromise();\n        if (result['status'] == true) {\n          for (var i = 0; i < result['data'].length; i++) {\n            if (i == 16) {\n              this.toastr.success(\"Lines are already in use\");\n              break;\n            }\n            if (result['data'][i].line == i + 1) {\n              this.lineData = result['data'][i].line + 1;\n              this.newRequestForm.get('line').patchValue('RingCentral '+this.lineData);\n              break;\n            }\n          }\n          this.toastr.success(result['msg']);\n        } else {\n          this.lineData = 1;\n          this.newRequestForm.get('line').patchValue('RingCentral '+this.lineData);\n          this.toastr.warning(result['msg'])\n        }\n      }\n      catch (err) {\n        this.toastr.warning('Something went wrong from server/api');\n      }\n    }\n  }\n  /*==========Today and future date function start here========*/\n  date_func() {\n    if (document.getElementsByName(\"setTodaysDate\") != null) {\n      var today = new Date().toISOString().split('T')[0];\n      if (document.getElementsByName(\"setTodaysDate\")[0] != undefined) {\n        document.getElementsByName(\"setTodaysDate\")[0].setAttribute('max', today);\n      }\n    }\n  }\n  assign_date_func() {\n    if (document.getElementsByName(\"assignDate\") != null) {\n      var date = new Date().toISOString().split('T')[0];\n      if (document.getElementsByName(\"assignDate\")[0] != undefined) {\n        document.getElementsByName(\"assignDate\")[0].setAttribute('min', date);\n      }\n    }\n  }\n  startWithAssignment(e) {\n    if (this.newRequestForm.value.assignment_date == '' || this.newRequestForm.value.assignment_date == 'undefined') {\n      this.toastr.error(\"Select Assignment Date\", '', { timeOut: 2000 });\n      return false;\n    }\n    if (document.getElementsByName(\"event_start_d\") != null) {\n      var date = new Date().toISOString().split('T')[0];\n      if (document.getElementsByName(\"event_start_d\")[0] != undefined) {\n        document.getElementsByName(\"event_start_d\")[0].setAttribute('min', this.newRequestForm.value.assignment_date);\n      }\n    }\n  }\n\n  endWithAssignment(e) {\n    if (this.newRequestForm.value.event_start_date == '' || this.newRequestForm.value.event_start_date == 'undefined') {\n      this.toastr.error(\"Select Start Date\", '', { timeOut: 2000 });\n      return false;\n    }\n    if (document.getElementsByName(\"event_end_d\") != null) {\n      var date = new Date().toISOString().split('T')[0];\n      if (document.getElementsByName(\"event_end_d\")[0] != undefined) {\n        document.getElementsByName(\"event_end_d\")[0].setAttribute('min', this.newRequestForm.value.event_start_date);\n      }\n    }\n  }\n  /*==========Today and future date function end here========*/\n\n  /*==========Start and end time valid function start here========*/\n\n  start_end_date($eve) {\n    var beginningDate = this.newRequestForm.value.event_start_date;\n    var endDate = this.newRequestForm.value.event_end_date;\n    if (beginningDate > endDate) {\n      this.newRequestForm.controls['event_start_date'].setValue('');\n      this.newRequestForm.controls['event_end_date'].setValue('');\n      this.toastr.error(\"Invalid Time\", '', { timeOut: 2000 });\n    }\n    if (beginningDate == endDate) {\n      this.newRequestForm.controls['event_start_date'].setValue('');\n      this.newRequestForm.controls['event_end_date'].setValue('');\n      this.toastr.error(\"Invalid Time\", '', { timeOut: 2000 });\n    }\n    if (beginningDate < endDate) {\n\n      // this.toastr.success(\"Valid Time \",'', { timeOut: 2000 });\n    }\n  }\n\n  start_end_time_repeats(e) {\n    var beginningTimeRep = this.newRequestForm.value.event_start_time;\n    var endTimeRep = this.newRequestForm.value.event_end_time;\n    if (beginningTimeRep > endTimeRep) {\n      this.newRequestForm.controls['event_start_time'].setValue('');\n      this.newRequestForm.controls['event_end_time'].setValue('');\n      this.toastr.error(\"Invalid Time\", '', { timeOut: 2000 });\n    }\n    if (beginningTimeRep == endTimeRep) {\n      this.newRequestForm.controls['event_start_time'].setValue('');\n      this.newRequestForm.controls['event_end_time'].setValue('');\n      this.toastr.error(\"Invalid Time\", '', { timeOut: 2000 });\n    }\n    if (beginningTimeRep < endTimeRep) {\n      // this.toastr.success(\"Valid Time \",'', { timeOut: 2000 });\n    }\n  }\n  /*==========Start and end time valid function end here========*/\n\n  /*======================All Form submitted function start here==============================*/\n  saveUser() {\n    console.log(\"=============Form\", this.newRequestForm.value);\n\n    this.submitted = true;\n    if (this.showEductionForm) {\n      this.submittedEdu = true;\n    }\n    if (this.showMedicalForm == true) {\n      this.submittedMed = true;\n    }\n    if (this.showCommunityForm) {\n      this.submittedComm = true;\n    }\n    if (this.showLegalForm) {\n      this.submittedLeg = true;\n    }\n    if (this.showOtherForm) {\n      this.submittedOther = true;\n    }\n    if ((this.showEductionForm && this.educationRequestForm.invalid && this.newRequestForm.invalid) ||\n      (this.showMedicalForm && this.medicalRequestForm.invalid && this.newRequestForm.invalid) ||\n      (this.showCommunityForm && this.communityRequestForm.invalid && this.newRequestForm.invalid) ||\n      (this.showLegalForm && this.legalRequestForm.invalid && this.newRequestForm.invalid) ||\n      (this.showOtherForm && this.otherRequestForm.invalid && this.newRequestForm.invalid)) {\n      return;\n    } else {\n      if (this.newRequestForm.invalid) {\n        return;\n      }\n    }\n\n    this.newRequestForm.value.from_time = moment(this.newRequestForm.value.from_time).format(\"LT\");;\n    this.newRequestForm.value.to_time = moment(this.newRequestForm.value.to_time).format(\"LT\");\n    this.newRequestForm.value.event_start_time = moment(this.newRequestForm.value.event_start_time).format(\"LT\");\n    this.newRequestForm.value.event_end_time = moment(this.newRequestForm.value.event_end_time).format(\"LT\");\n    this.newRequestForm.value.event_at = this.event_at;\n    this.newRequestForm.value.scheduler_id = this.scheduler_id;\n    this.newRequestForm.value.client_id = this.newRequestForm.value.client_name.id;\n    this.newRequestForm.value.client_name = this.newRequestForm.value.client_name.fullName;\n\n    this.newRequestForm.value.latitude = this.latitude;\n    this.newRequestForm.value.longitude = this.longitude;\n    this.newRequestForm.value.address = this.new_address;\n\n    if (this.showEductionForm) {\n\n\n      this.newRequestForm.value.education = this.educationRequestForm.value;\n    }\n    if (this.showLegalForm) {\n      this.newRequestForm.value.legal = this.legalRequestForm.value;\n    }\n    if (this.showOtherForm) {\n      this.newRequestForm.value.others = this.otherRequestForm.value;\n    }\n    if (this.showMedicalForm) {\n      // this.medicalRequestForm.value.latitude = this.latitude;\n      // this.medicalRequestForm.value.longitude = this.longitude;\n      // this.medicalRequestForm.value.address = this.new_address;\n      this.newRequestForm.value.medical = this.medicalRequestForm.value;\n    }\n    if (this.showCommunityForm) {\n      // this.communityRequestForm.value.latitude = this.latitude;\n      // this.communityRequestForm.value.longitude = this.longitude;\n      // this.communityRequestForm.value.address = this.new_address;\n      this.newRequestForm.value.community = this.communityRequestForm.value;\n    }\n    console.log(\"============form\",this.newRequestForm.value);\n    this.service.post('enterNewInterpreterRequestBasicTab', this.newRequestForm.value).subscribe(res => {\n      if (res['status'] == true) {\n        this.save_obj = res;\n        this.save_Msg = res;\n        this.toastr.success(this.save_Msg.msg, '', { timeOut: 1000, positionClass: 'toast-top-center' });\n        this.router.navigate(['/request-scheduler/all-request-list-schedular']);\n      }\n    });\n  }\n\n  /*==========================All Form submitted function end here==========================*/\n\n  /*==========================Google Api function start here==========================*/\n  // Get Current Location Coordinates\n  private setCurrentLocation() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n\n        this.zoom = 8;\n        this.getAddress(this.latitude, this.longitude);\n      });\n    }\n  }\n\n\n\n  markerDragEnd($event: any) {\n    console.log($event);\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    console.log(\"latitude-\", this.latitude);\n    console.log(\"longitude-\", this.longitude);\n\n    this.getAddress(this.latitude, this.longitude);\n  }\n\n  getAddress(latitude, longitude) {\n    this.geoCoder.geocode({ 'location': { lat: latitude, lng: longitude } }, (results, status) => {\n      console.log(results);\n      console.log(status);\n      if (status === 'OK') {\n        if (results[0]) {\n          this.zoom = 12;\n          this.address = results[0].formatted_address;\n        } else {\n          window.alert('No results found');\n        }\n      } else {\n        window.alert('Geocoder failed due to: ' + status);\n      }\n\n    });\n  }\n  /*==========================Google Api function end here==========================*/\n  selectEvent(item) {\n            console.log(item)\n\n    // do something with selected item\n    this.newRequestForm.get('client_name').patchValue(item);\n    this.newRequestForm.get('requested_by').patchValue(item.contact_person_name);\n  }\n\n  onChangeSearch(search: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e) {\n\n    // do something\n  }\n}\n","<div class=\"breadcrumb\">\n    <!-- <h1>Language</h1> -->\n    <ul class=\"heading\">\n        <li><a>Request Scheduler</a></li>\n        <li>Add</li>\n    </ul>\n</div>\n<div class=\"separator-breadcrumb border-top\"></div>\n<div class=\"row\">\n    <!--     <div class=\"col-md-12 topbtn\" style=\"align-items: center; justify-content: center;\">\n        <div class=\"new-interpriter\">\n            <div class=\"basictap-main\">\n                <h4>Enter New Interpreter Request - Basic Tab</h4>\n            </div>\n            <div class=\"right-buttton float-right\">\n                <button class=\"botton-fst btn btn-primary mb-2 ml-2 float-right\">+ Add Client</button>\n                <button class=\"button-sec btn btn-primary mb-2  float-right\">+ Add Requester</button>\n            </div>\n        </div>\n        \n        \n    </div> -->\n    <div class=\"col-md-12 all_request\">\n        <div class=\"card mb-4\">\n            <div class=\"card-body\">\n                <div class=\"col-md-12 topbtn\" style=\"align-items: center; justify-content: center;\">\n                    <div class=\"new-interpriter\">\n                        <div class=\"basictap-main\">\n                            <!-- <h4>Enter New Interpreter Request - Basic Tab</h4> -->\n                            <h4>Enter New Interpreter Request</h4>\n                        </div>\n                        <div class=\"right-buttton float-right\">\n                            <button routerLink=\"/client/client-add\" class=\"botton-fst btn btn-primary mb-2 ml-2 float-right\">+ Add Client</button>\n                            <button class=\"button-sec btn btn-primary mb-2  float-right\">+ Add Requester</button>\n                        </div>\n                    </div>\n                </div>\n                <form [formGroup]=\"newRequestForm\">\n                    <div class=\"row pl-4\">\n                        <div class=\"col-md-5 form-group mb-3 firstir\">\n                            <label for=\"Last\">IR #:</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"ir\" placeholder=\"IR #\" disabled>\n                            <div *ngIf=\"newRequestForm.controls['ir'].errors && (!newRequestForm.controls['ir'].pristine || submitted ||newRequestForm.controls['ir'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['ir'].errors.required\">IR is required.</div>\n                            </div>\n                        </div>\n                        <div class=\"col-md-5 form-group mb-3 firstir\">\n                            <label for=\"Last\">Entered By</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"entered_by\" placeholder=\"Entered By\" disabled>\n                            <!-- <div *ngIf=\"newRequestForm.controls['entered_by'].errors && (!newRequestForm.controls['entered_by'].pristine || submitted ||newRequestForm.controls['entered_by'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['entered_by'].errors.required\">Entered By is\n                                required.</div>\n                            </div> -->\n                        </div>\n                    </div>\n                    <div class=\"row dummy_text\">\n                        <div class=\"col-sm-4 form-group mb-3\">\n                            <label>Client Name</label>\n\n                            <ng-autocomplete [data]=\"clientObj\" [searchKeyword]=\"keyword\" placeholder=\"Search Client Name\" (selected)='selectEvent($event)' (inputChanged)='onChangeSearch($event)' (inputFocused)='onFocused($event)' historyIdentifier=\"clientObj\" [itemTemplate]=\"itemTemplate\"\n                                [notFoundTemplate]=\"notFoundTemplate\" formControlName=\"client_name\">\n                            </ng-autocomplete>\n                            <ng-template #itemTemplate let-item>\n                                <a [innerHTML]=\"item.fullName\"></a>\n                            </ng-template>\n                            <ng-template #notFoundTemplate let-notFound>\n                                <div [innerHTML]=\"notFound\"></div>\n                            </ng-template>\n                            <div *ngIf=\"newRequestForm.controls['client_name'].errors && ( !newRequestForm.controls['client_name'].pristine || submitted || newRequestForm.controls['client_name'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['client_name'].errors.required\">Client Name is required.\n                                </div>\n                            </div>\n                            <!--  <label>Client Name</label>\n                            <mat-form-field class=\"example-full-width \">\n                            <input type=\"text\" matInput [matAutocomplete]=\"auto\" formControlName=\"client_name\">\n                            <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\" (keyup)=\"getRegions($event)\">\n                            <mat-option *ngFor=\"let option of clientObj; let i = index\" (click)=\"changeClient(option,i)\" [value]=\"option.fullName\">\n                            {{ option.fullName }}\n                            </mat-option>\n                            </mat-autocomplete>\n                            <div *ngIf=\"newRequestForm.controls['client_name'].errors && ( !newRequestForm.controls['client_name'].pristine || submitted || newRequestForm.controls['client_name'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['client_name'].errors.required\">Client Name is required.\n                                </div>\n                            </div>\n                            </mat-form-field> -->\n                            <!-- <ejs-autocomplete  [dataSource]='clientObj' [fields]='localFields' ></ejs-autocomplete> -->\n                            <!-- <select class=\"form-control\" (change)=\"onChangeClient($event)\"\n                                formControlName=\"client_name\" id=\"client_name\" name=\"client_name\">\n                                <option value=\"\">Client Name</option>\n                                <option *ngFor=\"let client of clientObj\" [value]=\"client.name\">\n                                    {{client?.name}}\n                                </option>\n                            </select> -->\n                            <!-- </div> -->\n                            <!-- </div> -->\n                            <!-- <input type=\"text\" class=\"form-control\" formControlName=\"language\" placeholder=\"Language\"> -->\n                        </div>\n                        <div class=\"col-sm-4 form-group mb-3 req_form\">\n                            <label>Requested By</label>\n                            <div class=\"form-group form-field\">\n                                <input type=\"text\" class=\"form-control\" formControlName=\"requested_by\" placeholder=\"Requested By\" disabled>\n                                <div *ngIf=\"newRequestForm.controls['requested_by'].errors && (!newRequestForm.controls['requested_by'].pristine || submitted ||newRequestForm.controls['requested_by'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!newRequestForm.controls['requested_by'].errors.required\">Requested By is required.</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4 form-group mb-3 req_date\">\n                            <label>Request Date</label>\n                            <!--  <input type=\"date\" name=\"setTodaysDate\" class=\"form-control\" formControlName=\"request_date\" placeholder=\"Date\"> -->\n                            <mat-form-field appearance=\"none\">\n                                <input [max]=\"minDate\" (click)=\"picker.open()\" matInput [matDatepicker]=\"picker\" formControlName=\"request_date\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                            </mat-form-field>\n                            <div *ngIf=\"newRequestForm.controls['request_date'].errors && ( !newRequestForm.controls['request_date'].pristine || submitted ||newRequestForm.controls['request_date'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['request_date'].errors.required\">Request Date is required.</div>\n                                <!-- <div [hidden]=\"!newRequestForm.controls.caseworker_name.hasError('minlength')\">caseworker_name length should be minimum 2 characters.</div> -->\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-2 form-group mb-3\">\n                            <label>LOB</label>\n                            <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"onChangeLob($event)\" formControlName=\"lob\" id=\"lob\" name=\"lob\">\n                                    <!-- <option value=\"\">LOB</option> -->\n                                    <option *ngFor=\"let lob of lob_Obj\" [value]=\"lob.id\">\n                                        {{lob?.name}}\n                                    </option>\n                                </select>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['lob'].errors && ( !newRequestForm.controls['lob'].pristine || submitted ||newRequestForm.controls['lob'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['lob'].errors.required\">LOB is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"newRequestForm.value.lob == 'Others'\" class=\"col-sm-2 form-group mb-3\">\n                            <label> Type</label>\n                            <div class=\"form-group form-field\">\n                                <input type=\"text\" class=\"form-control\" placeholder=\"\">\n                            </div>\n                            <!-- <div *ngIf=\"newRequestForm.controls['assignment_type'].errors && ( !newRequestForm.controls['assignment_type'].pristine || submitted ||newRequestForm.controls['assignment_type'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['assignment_type'].errors.required\">Assignment\n                                    Type is required.\n                                </div>\n                            </div> -->\n                        </div>\n                        <div *ngIf=\"newRequestForm.value.lob != 'Others'\" class=\"col-sm-2 form-group mb-3\">\n                            <label>Assignment Type</label>\n                            <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"onChangeAssign($event)\" formControlName=\"assignment_type\" id=\"assignment_type\" name=\"assignment_type\">\n                                    <option value=\"\">Assignment Type</option>\n                                    <option *ngFor=\"let assign of assignment_Obj\" [value]=\"assign.assignment_name\">\n                                        {{assign?.assignment_name}}\n                                    </option>\n                                </select>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['assignment_type'].errors && ( !newRequestForm.controls['assignment_type'].pristine || submitted ||newRequestForm.controls['assignment_type'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['assignment_type'].errors.required\">Assignment Type is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4 form-group mb-3\">\n                            <label>Platform</label>\n                            <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"newSimultaneous($event); vciOPILine($event)\" formControlName=\"platform\" id=\"platform\" name=\"platform\">\n                                    <option value=\"\">Platform</option>\n                                    <option *ngFor=\"let plat of platform_Obj\" [value]=\"plat.platform\">\n                                        {{plat?.platform}}\n                                    </option>\n                                </select>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['platform'].errors && ( !newRequestForm.controls['platform'].pristine || submitted ||newRequestForm.controls['platform'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['platform'].errors.required\">Platform is required.</div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"col-sm-2 form-group mb-3\">\n                            <label>Simultaneous Interpreting?</label>\n                            <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"newSimultaneous($event)\"\n                                    formControlName=\"receivers_required\">\n                                    <option value=\"\">Simultaneous Interpreting?</option>\n                                    <option value=\"1\">Yes</option>\n                                    <option value=\"0\">No</option>\n                                </select>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['receivers_required'].errors && ( !newRequestForm.controls['receivers_required'].pristine || submitted ||newRequestForm.controls['receivers_required'].touched )\"\n                                class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['receivers_required'].errors.required\">Simultaneous Interpreting is required.</div>\n                            </div>\n                        </div> -->\n                        <div class=\"col-sm- form-group mb-3\">\n                            <!-- <i matTooltip=\"Simultaneous\"> eye</i> -->\n                            <label>Simultaneous Interpreting? <i class=\"fas fa-eye\" data-toggle=\"tooltip\" title=\"Simultaneous\"></i> </label>\n                            <div class=\"form-check\">\n                                <label class=\"form-check-label\" for=\"simultaneous_radio1\">\n                                    <input class=\"form-check-input radio-inline \" (change)=\"newSimultaneous($event)\"\n                                    formControlName=\"receivers_required\" type=\"radio\" id=\"simultaneous_radio1\" value=\"1\"\n                                    checked>\n                                    Yes\n                                </label>\n                                <label matTooltip=\"Simultaneous\" class=\"form-check-label pl-5\" for=\"simultaneous_radio2\">\n                                    <input class=\"form-check-input radio-inline\" formControlName=\"receivers_required\"\n                                    type=\"radio\" id=\"simultaneous_radio2\" (change)=\"newSimultaneous($event)\" value=\"0\">\n                                    No\n                                </label>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['receivers_required'].errors && ( !newRequestForm.controls['receivers_required'].pristine || submitted ||newRequestForm.controls['receivers_required'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['receivers_required'].errors.required\">Simultaneous Interpreting is required.</div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"newRequestForm.value.platform == 'On-Site' && newRequestForm.value.receivers_required == '1'\" class=\"col-md-2 form-group mb-3\">\n                            <label for=\"Last\">How many recievers?</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"how_many_receivers\" placeholder=\"How many receivers?\">\n                            <!-- <div *ngIf=\"newRequestForm.controls['recievers_reqiured'].errors && (!newRequestForm.controls['recievers_reqiured'].pristine || submitted ||newRequestForm.controls['recievers_reqiured'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['recievers_reqiured'].errors.required\">Recievers is required.</div>\n                            </div> -->\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-sm-4 form-group mb-3\">\n                            <label>Language</label>\n                            <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"onChangeLanguage($event)\" formControlName=\"language\" id=\"language\" name=\"language\">\n                                    <option value=\"\">Language</option>\n                                    <option *ngFor=\"let lang of language_Obj\" [value]=\"lang.id\">\n                                        {{lang?.name}}\n                                    </option>\n                                </select>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['language'].errors && ( !newRequestForm.controls['language'].pristine || submitted ||newRequestForm.controls['language'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['language'].errors.required\">Language is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-4 form-group mb-3 assign_date\">\n                            <label class=\"date_view\">Assignment Date</label>\n                            <!--  <input type=\"date\" name=\"assignDate\" class=\"form-control\" formControlName=\"assignment_date\" placeholder=\"Assignment Date\"> -->\n                            <mat-form-field appearance=\"none\">\n                                <input (selectedChanged)=\"getLineDetails();\" [min]=\"minDate\" (click)=\"pickerr.open()\" matInput [matDatepicker]=\"pickerr\" formControlName=\"assignment_date\">\n                                <mat-datepicker-toggle matSuffix [for]=\"pickerr\"></mat-datepicker-toggle>\n                                <mat-datepicker #pickerr></mat-datepicker>\n                            </mat-form-field>\n                            <div *ngIf=\"newRequestForm.controls['assignment_date'].errors && ( !newRequestForm.controls['assignment_date'].pristine || submitted ||newRequestForm.controls['assignment_date'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['assignment_date'].errors.required\">Assignment Date is required.</div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2 form-group mb-3\">\n                            <label>From Time</label>\n                            <!-- <input type=\"time\" class=\"form-control\" id=\"txtStartTime\" formControlName=\"from_time\"\n                            placeholder=\"From Time\"> -->\n                            <div class=\"s_Time\">\n                                <ejs-timepicker (blur)=\"getLineDetails();\" [step]='interval' id=\"txtStartTime\" placeholder=\"From Time\" formControlName=\"from_time\"></ejs-timepicker>\n                            </div>\n                            <!-- <ejs-timepicker\n                            ></ejs-timepicker> -->\n                            <div *ngIf=\"newRequestForm.controls['from_time'].errors && ( !newRequestForm.controls['from_time'].pristine || submitted ||newRequestForm.controls['from_time'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['from_time'].errors.required\">From Time is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-2 form-group mb-3\">\n                            <label>To Time</label>\n                            <!-- <input type=\"time\" class=\"form-control\" id=\"txtEndTime\" (change)=\"start_end_time($event)\"\n                            formControlName=\"to_time\" placeholder=\"To Time\"> -->\n                            <div class=\"e_Time\">\n                                <ejs-timepicker [step]='interval' [min]=\"newRequestForm.value.from_time\" id=\"txtEndTime\" placeholder=\"To Time\" formControlName=\"to_time\"></ejs-timepicker>\n                            </div>\n                            <div *ngIf=\"newRequestForm.controls['to_time'].errors && ( !newRequestForm.controls['to_time'].pristine || submitted ||newRequestForm.controls['to_time'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['to_time'].errors.required\">To Time is required.\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- <div class=\"row\"></div> -->\n                    <div class=\"row\">\n                        <div class=\"col-sm-4 form-group mb-3\">\n                            <label for=\"Address\">Address</label>\n                            <input type=\"text\" class=\"form-control\" formControlName=\"address\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n                        </div>\n                        <div class=\"col-sm-2 form-group mb-3\">\n                            <label>Recurrent Assignment?</label>\n                            <div class=\"form-check\">\n                                <label class=\"form-check-label\" for=\"gridRadios1\">\n                                    <input class=\"form-check-input radio-inline \" (change)=\"newRecurrent($event)\"\n                                    formControlName=\"recurrent_assignment\" type=\"radio\" id=\"gridRadios1\" value=\"1\"\n                                    checked>\n                                    Yes\n                                </label>\n                                <label class=\"form-check-label pl-5\" for=\"gridRadios2\">\n                                    <input class=\"form-check-input radio-inline\" formControlName=\"recurrent_assignment\"\n                                    type=\"radio\" id=\"gridRadios2\" (change)=\"newRecurrent($event)\" value=\"0\">\n                                    No\n                                </label>\n                            </div>\n                            <!-- <div class=\"form-group form-field\">\n                                <select class=\"form-control\" (change)=\"newRecurrent($event)\"\n                                    formControlName=\"recurrent_assignment\">\n                                    <option value=\"1\">Yes</option>\n                                    <option value=\"0\">No</option>\n                                </select>\n                            </div> -->\n                        </div>\n                        <div *ngIf=\"vci_opi == true\" class=\"col-md-2\">\n                            <label>Country Code</label>\n                            <select class=\"form-control country_code\" formControlName=\"vci_opi_phone_code\">\n                                <option value=\"\" selected disabled>Code</option>\n                                <option  value=\"1\">United States</option>\n                                <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                    {{isd?.name}} (+{{isd?.phonecode}})\n                                </option>\n                            </select>\n                            <div *ngIf=\"newRequestForm.controls['vci_opi_phone_code'].errors && ( !newRequestForm.controls['vci_opi_phone_code'].pristine || submittedEdu ||newRequestForm.controls['vci_opi_phone_code'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['vci_opi_phone_code'].errors.required\">Code is required.\n                                </div>\n                            </div>\n                        </div>\n                        <div *ngIf=\"vci_opi == true\" class=\"col-md-4\">\n                            <label for=\" Phone No.\">Cell Phone No.</label>\n                            <input placeholder=\"Line\" type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"vci_opi_cell_phone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \"\n                                placeholder=\"Cell Phone No.\">\n                            <div *ngIf=\"newRequestForm.controls['vci_opi_cell_phone'].errors && (!newRequestForm.controls['vci_opi_cell_phone'].pristine || submittedEdu ||newRequestForm.controls['vci_opi_cell_phone'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['vci_opi_cell_phone'].errors.required\">Cell Phone is required.</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div *ngIf=\"vci_opi == true\" class=\"row\">\n                        <div class=\"col-md-4\">\n                            <label for=\" line\">Line</label>\n                            <input disabled type=\"text\" class=\"form-control\" formControlName=\"line\" placeholder=\"Line\">\n                            <div *ngIf=\"newRequestForm.controls['line'].errors && (!newRequestForm.controls['line'].pristine || submittedEdu ||newRequestForm.controls['line'].touched )\" class=\"error-msg\">\n                                <div [hidden]=\"!newRequestForm.controls['line'].errors.required\">Line is required.</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"offset-lg-4\" *ngIf=\"assignment_var\">\n                        <div class=\"col-sm-6 borderfull\">\n                            <!-- <h3>Repeats</h3> -->\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 form-group mb-3\">\n                                    <div class=\"form-group form-field rep_lab\">\n                                        <label>Repeats</label>\n                                        <select class=\"form-control\" (change)=\"newRepeat($event)\" formControlName=\"repeats\">\n                                            <option value=\"1\">Daily</option>\n                                            <option value=\"2\">Weekly</option>\n                                            <option value=\"3\">Monthly</option>\n                                            <option value=\"4\">Yearly</option>\n                                        </select>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div *ngIf=\"every_show_hide\" class=\"col-sm-12 form-group mb-3\">\n                                    <div class=\"form-group form-field border_label span_lab\">\n                                        <label>Every</label>\n                                        <input type=\"text\" class=\"form-control\" formControlName=\"every\" onkeypress=\"if(this.value.length==1) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \" placeholder=\"Every\">\n                                        <span>Week(s)</span>\n                                        <div *ngIf=\"newRequestForm.controls['every'].errors && (!newRequestForm.controls['every'].pristine || submitted ||newRequestForm.controls['every'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!newRequestForm.controls['every'].errors.required\">Every is required.\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"days\" class=\"row new_row\">\n                                <div class=\"col-sm-12 form-group mb-3 border_label\">\n                                    <label>On</label>\n                                    <div class=\"form-check form-check-inline\">\n                                        <div *ngFor=\"let result of days_Obj;let i=index\">\n                                            <input type=\"checkbox\" id=\"result{{result.day_id}}\" (change)=\"changeCheckbox(i)\" class=\"form-check-input\" checked disabled>\n                                            <label for=\"result{{result.day_id}}\" class=\"newlabel  form-check-label checkbox-inline\">\n                                                {{result.day}}\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"days2\" class=\"row new_row\">\n                                <div class=\"col-sm-12 form-group mb-3 border_label\">\n                                    <label>On</label>\n                                    <div class=\"form-check form-check-inline\">\n                                        <div *ngFor=\"let result of days_Obj;let i=index\">\n                                            <input type=\"checkbox\" id=\"result{{result.day_id}}\" class=\"form-check-input\" (change)=\"changeCheckbox(i)\">\n                                            <label for=\"result{{result.day_id}}\" class=\"newlabel form-check-label checkbox-inline\">\n                                                {{result.day}}\n                                            </label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- <div *ngIf=\"start_end\" class=\"row\"> -->\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 form-group mb-3 border_label\">\n                                    <label>Start Date</label>\n                                    <!-- <input type=\"date\" class=\"form-control\" id=\"StartTime\" (click)=\"startWithAssignment($event)\" formControlName=\"event_start_date\" name=\"event_start_d\" placeholder=\"Start Time\"> -->\n                                    <mat-form-field appearance=\"none\">\n                                        <input [min]=\"minDate\" (click)=\"picker2.open()\" id=\"StartTime\" (click)=\"startWithAssignment($event)\" matInput [matDatepicker]=\"picker2\" formControlName=\"event_start_date\" name=\"event_start_d\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker2\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker2></mat-datepicker>\n                                    </mat-form-field>\n                                    <div *ngIf=\"newRequestForm.controls['event_start_date'].errors && ( !newRequestForm.controls['event_start_date'].pristine || submitted ||newRequestForm.controls['event_start_date'].touched )\" class=\"error-msg\">\n                                        <div [hidden]=\"!newRequestForm.controls['event_start_date'].errors.required\">\n                                            Start Date is required.</div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-12 form-group mb-3 border_label\">\n                                    <label>End Date</label>\n                                    <!--     <input type=\"date\" class=\"form-control\" id=\"End Date\" (change)=\"start_end_date($event)\" formControlName=\"event_end_date\" placeholder=\"End Date\" (click)=\"endWithAssignment($event)\" name=\"event_end_d\"> -->\n                                    <mat-form-field appearance=\"none\">\n                                        <input [min]=\"minDate\" (click)=\"picker3.open()\" (change)=\"start_end_date($event)\" id=\"End\" (click)=\"endWithAssignment($event)\" matInput [matDatepicker]=\"picker3\" formControlName=\"event_end_date\" name=\"event_end_d\">\n                                        <mat-datepicker-toggle matSuffix [for]=\"picker3\"></mat-datepicker-toggle>\n                                        <mat-datepicker #picker3></mat-datepicker>\n                                    </mat-form-field>\n                                    <div *ngIf=\"newRequestForm.controls['event_end_date'].errors && ( !newRequestForm.controls['event_end_date'].pristine || submitted ||newRequestForm.controls['event_end_date'].touched )\" class=\"error-msg\">\n                                        <div [hidden]=\"!newRequestForm.controls['event_end_date'].errors.required\">End Date is required.</div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-sm-12 form-group mb-3 border_label\">\n                                    <label>Start Time</label>\n                                    <!-- <input type=\"time\" class=\"form-control\" id=\"StartTime\"\n                                    formControlName=\"event_start_time\" placeholder=\"Start Time\"> -->\n                                    <ejs-timepicker [step]='interval' id=\"StartTime\" placeholder=\"StartTime\" formControlName=\"event_start_time\"></ejs-timepicker>\n                                    <!-- <ejs-timepicker [format]='formatString' [step]='interval' id=\"StartTime\" placeholder=\"StartTime\" formControlName=\"event_start_time\"></ejs-timepicker> -->\n                                    <div *ngIf=\"newRequestForm.controls['event_start_time'].errors && ( !newRequestForm.controls['event_start_time'].pristine || submitted ||newRequestForm.controls['event_start_time'].touched )\" class=\"error-msg\">\n                                        <div [hidden]=\"!newRequestForm.controls['event_start_time'].errors.required\">\n                                            Start Time is required.</div>\n                                    </div>\n                                </div>\n                                <div class=\"col-sm-12 form-group mb-3 border_label\">\n                                    <label>End Time</label>\n                                    <!-- <input type=\"time\" class=\"form-control\" id=\"EndTime\"\n                                    (change)=\"start_end_time_repeats($event)\" formControlName=\"event_end_time\"\n                                    placeholder=\"End Time\"> -->\n                                    <ejs-timepicker [step]='interval' [min]=\"newRequestForm.value.event_start_time\" id=\"EndTime\" placeholder=\"End Time\" formControlName=\"event_end_time\"></ejs-timepicker>\n                                    <!-- <ejs-timepicker [format]='formatString' [step]='interval' [min]=\"newRequestForm.value.event_start_time\" id=\"EndTime\" placeholder=\"End Time\" formControlName=\"event_end_time\"></ejs-timepicker> -->\n                                    <div *ngIf=\"newRequestForm.controls['event_end_time'].errors && ( !newRequestForm.controls['event_end_time'].pristine || submitted ||newRequestForm.controls['event_end_time'].touched )\" class=\"error-msg\">\n                                        <div [hidden]=\"!newRequestForm.controls['event_end_time'].errors.required\">End Time is required.</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n                <!-----------------------------------LOB Education Start  -------------------------->\n                <div *ngIf=\"showEductionForm\">\n                    <form [formGroup]=\"educationRequestForm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Contact Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"name_of_contact_person\" placeholder=\"Contact Name\">\n                                <div *ngIf=\"educationRequestForm.controls['name_of_contact_person'].errors && (!educationRequestForm.controls['name_of_contact_person'].pristine || submittedEdu ||educationRequestForm.controls['name_of_contact_person'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!educationRequestForm.controls['name_of_contact_person'].errors.required\">\n                                        Contact Name is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>Code</label>\n                                        <select class=\"form-control country_code\" formControlName=\"phone_code\">\n                                            <option value=\"\" selected disabled>Code</option>\n                                            <option  value=\"1\">United States</option>\n                                            <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                                {{isd?.name}} (+{{isd?.phonecode}})\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"educationRequestForm.controls['phone_code'].errors && ( !educationRequestForm.controls['phone_code'].pristine || submittedEdu ||educationRequestForm.controls['phone_code'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!educationRequestForm.controls['phone_code'].errors.required\">Code is required.\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <label for=\" Phone No.\">Cell Phone No.</label>\n                                        <input type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"cell_phone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \" placeholder=\"Cell Phone No.\">\n                                        <div *ngIf=\"educationRequestForm.controls['cell_phone'].errors && (!educationRequestForm.controls['cell_phone'].pristine || submittedEdu ||educationRequestForm.controls['cell_phone'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!educationRequestForm.controls['cell_phone'].errors.required\">Cell Phone is required.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Email\n                                </label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"email\" placeholder=\"Email\">\n                                <div *ngIf=\"educationRequestForm.controls['email'].errors && (!educationRequestForm.controls['email'].pristine || submitted ||educationRequestForm.controls['email'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!educationRequestForm.controls['email'].errors.required\">Email is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">School/Building\n                                Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"building_name\" placeholder=\"School/Building Name\">\n                                <div *ngIf=\"educationRequestForm.controls['building_name'].errors && (!educationRequestForm.controls['building_name'].pristine || submittedEdu ||educationRequestForm.controls['building_name'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!educationRequestForm.controls['building_name'].errors.required\">\n                                        School/Building Name is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>School/Building\n                                Address</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"building_address\" placeholder=\"Building Address\">\n                                <div *ngIf=\"educationRequestForm.controls['building_address'].errors && (!educationRequestForm.controls['building_address'].pristine || submittedEdu ||educationRequestForm.controls['building_address'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!educationRequestForm.controls['building_address'].errors.required\">\n                                        Building Address is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Suite/Room/Room\n                                #</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"room\" placeholder=\"Suite/Room/Room\">\n                                <div *ngIf=\"educationRequestForm.controls['room'].errors && (!educationRequestForm.controls['room'].pristine || submittedEdu ||educationRequestForm.controls['room'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!educationRequestForm.controls['room'].errors.required\">Room is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"row\">\n                            <div class=\"col-sm-12 form-group mb-3\">\n                                <label for=\"Address\">Address</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"address\"\n                                (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\"\n                                autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n                            </div>\n                        </div> -->\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 form-group mb-3\">\n                                <label>IR General Notes</label>\n                                <textarea type=\"text\" class=\"form-control\" formControlName=\"notes\" placeholder=\"IR General Notes\"></textarea>\n                                <div *ngIf=\"educationRequestForm.controls['notes'].errors && (!educationRequestForm.controls['notes'].pristine || submittedEdu ||educationRequestForm.controls['notes'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!educationRequestForm.controls['notes'].errors.required\">IR General Notes is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- <input type=\"hidden\" class=\"form-control\" formControlName=\"latitude\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"longitude\"> -->\n                    </form>\n                </div>\n                <!-----------------------------------LOB Education End  -------------------------->\n                <!-----------------------------------LOB Medical start  -------------------------->\n                <div *ngIf=\"showMedicalForm\">\n                    <form [formGroup]=\"medicalRequestForm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Practice Name (Clinic, Hospital, ect)</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"practice_name\" placeholder=\"Practice Name\">\n                                <div *ngIf=\"medicalRequestForm.controls['practice_name'].errors && (!medicalRequestForm.controls['practice_name'].pristine || submittedMed ||medicalRequestForm.controls['practice_name'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!medicalRequestForm.controls['practice_name'].errors.required\">\n                                        Practice Name is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Provider Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"provider_name\" placeholder=\"Provider Name\">\n                                <div *ngIf=\"medicalRequestForm.controls['provider_name'].errors && (!medicalRequestForm.controls['provider_name'].pristine || submittedMed ||medicalRequestForm.controls['provider_name'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!medicalRequestForm.controls['provider_name'].errors.required\">\n                                        Provider Name is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>Code</label>\n                                        <select class=\"form-control country_code\" formControlName=\"phone_code\">\n                                            <option value=\"\" selected disabled>Code</option>\n                                            <option  value=\"1\">United States</option>\n                                            <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                                {{isd?.name}} (+{{isd?.phonecode}})\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"medicalRequestForm.controls['phone_code'].errors && ( !medicalRequestForm.controls['phone_code'].pristine || submittedMed ||medicalRequestForm.controls['phone_code'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!medicalRequestForm.controls['phone_code'].errors.required\">Code is required.\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <label for=\" Phone No.\">Cell Phone No.</label>\n                                        <input type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"cell_phone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \" placeholder=\"Cell Phone No.\">\n                                        <div *ngIf=\"medicalRequestForm.controls['cell_phone'].errors && (!medicalRequestForm.controls['cell_phone'].pristine || submittedMed ||medicalRequestForm.controls['cell_phone'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!medicalRequestForm.controls['cell_phone'].errors.required\">Cell Phone is required.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <!--  <div class=\"col-sm-6 form-group mb-3\">\n                                <label for=\"Address\">Address</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"address\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n                            </div> -->\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Room</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"room\" placeholder=\"Room\">\n                                <div *ngIf=\"medicalRequestForm.controls['room'].errors && (!medicalRequestForm.controls['room'].pristine || submittedMed ||medicalRequestForm.controls['room'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!medicalRequestForm.controls['room'].errors.required\">\n                                        Room is required.</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 form-group mb-3\">\n                                <label>IR General Notes</label>\n                                <textarea type=\"text\" class=\"form-control\" formControlName=\"notes\" placeholder=\"IR General Notes\"></textarea>\n                                <div *ngIf=\"medicalRequestForm.controls['notes'].errors && (!medicalRequestForm.controls['notes'].pristine || submittedMed ||medicalRequestForm.controls['notes'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!medicalRequestForm.controls['notes'].errors.required\">IR General Notes is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"latitude\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"longitude\">\n                    </form>\n                </div>\n                <!-----------------------------------LOB Medical end  -------------------------->\n                <!-----------------------------------LOB Community start  -------------------------->\n                <div *ngIf=\"showCommunityForm\">\n                    <form [formGroup]=\"communityRequestForm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Case Worker First Name </label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"caseworker_firstname\" placeholder=\"Case Worker First Name\">\n                                <div *ngIf=\"communityRequestForm.controls['caseworker_firstname'].errors && (!communityRequestForm.controls['caseworker_firstname'].pristine || submittedComm ||communityRequestForm.controls['caseworker_firstname'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['caseworker_firstname'].errors.required\">\n                                        Contact Name at Assignment.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Case Worker Last Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"caseworker_lastname\" placeholder=\"Case Worker Last Name\">\n                                <div *ngIf=\"communityRequestForm.controls['caseworker_lastname'].errors && (!communityRequestForm.controls['caseworker_lastname'].pristine || submittedComm ||communityRequestForm.controls['caseworker_lastname'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['caseworker_lastname'].errors.required\">\n                                        Case Worker Last Name.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>Code</label>\n                                        <select class=\"form-control country_code\" formControlName=\"phone_code\">\n                                            <option value=\"\" selected disabled>Code</option>\n                                            <option  value=\"1\">United States</option>\n                                            <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                                {{isd?.name}} (+{{isd?.phonecode}})\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"communityRequestForm.controls['phone_code'].errors && ( !communityRequestForm.controls['phone_code'].pristine || submittedComm ||communityRequestForm.controls['phone_code'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!communityRequestForm.controls['phone_code'].errors.required\">Code is required.\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <label for=\" Phone No.\">Cell Phone No.</label>\n                                        <input type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"cell_phone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \" placeholder=\"Cell Phone No.\">\n                                        <div *ngIf=\"communityRequestForm.controls['cell_phone'].errors && (!communityRequestForm.controls['cell_phone'].pristine || submittedComm ||communityRequestForm.controls['cell_phone'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!communityRequestForm.controls['cell_phone'].errors.required\">Cell Phone is required.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Contact Name of Person at Assignment</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"name_of_contact_person\" placeholder=\"Contact Name of Person at Assignment\">\n                                <div *ngIf=\"communityRequestForm.controls['name_of_contact_person'].errors && (!communityRequestForm.controls['name_of_contact_person'].pristine || submittedComm ||communityRequestForm.controls['name_of_contact_person'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['name_of_contact_person'].errors.required\">\n                                        Contact Name of Person at Assignment.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Position</label>\n                                <!-- <input type=\"text\" class=\"form-control\" formControlName=\"position\"\n                                placeholder=\"Position\"> -->\n                                <select class=\"form-control\" formControlName=\"position\">\n                                    <option value=\"\">Position</option>\n                                    <option value=\"Position 1\">Position 1</option>\n                                    <option value=\"Position 2\">Position 2</option>\n                                </select>\n                                <div *ngIf=\"communityRequestForm.controls['position'].errors && (!communityRequestForm.controls['position'].pristine || submittedComm ||communityRequestForm.controls['position'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['position'].errors.required\">Position is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>Code</label>\n                                        <select class=\"form-control country_code\" formControlName=\"contact_person_phone_code\">\n                                            <option value=\"\" selected disabled>Code</option>\n                                            <option  value=\"1\">United States</option>\n                                            <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                                {{isd?.name}} (+{{isd?.phonecode}})\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"communityRequestForm.controls['contact_person_phone_code'].errors && ( !communityRequestForm.controls['contact_person_phone_code'].pristine || submittedComm ||communityRequestForm.controls['contact_person_phone_code'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!communityRequestForm.controls['contact_person_phone_code'].errors.required\">Code is required.\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <label for=\" Phone No.\">Cell Phone No.</label>\n                                        <input type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"contact_person_cellphone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \"\n                                            placeholder=\"Cell Phone No.\">\n                                        <div *ngIf=\"communityRequestForm.controls['contact_person_cellphone'].errors && (!communityRequestForm.controls['contact_person_cellphone'].pristine || submittedComm ||communityRequestForm.controls['contact_person_cellphone'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!communityRequestForm.controls['contact_person_cellphone'].errors.required\">Cell Phone is required.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-3 form-group mb-3\">\n                                <label for=\"Last\">Case Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"case_name\" placeholder=\"Case Name\">\n                                <div *ngIf=\"communityRequestForm.controls['case_name'].errors && (!communityRequestForm.controls['case_name'].pristine || submittedComm ||communityRequestForm.controls['case_name'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['case_name'].errors.required\">\n                                        Case Name.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-3 form-group mb-3\">\n                                <label>Client First Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"client_firstname\" placeholder=\"Client First Name\">\n                                <div *ngIf=\"communityRequestForm.controls['client_firstname'].errors && (!communityRequestForm.controls['client_firstname'].pristine || submittedComm ||communityRequestForm.controls['client_firstname'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['client_firstname'].errors.required\">\n                                        Client First Name is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3 form-group mb-3\">\n                                <label for=\"Last\">Client Last Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"client_lastname\" placeholder=\"Client Last Name\">\n                                <div *ngIf=\"communityRequestForm.controls['client_lastname'].errors && (!communityRequestForm.controls['client_lastname'].pristine || submittedComm ||communityRequestForm.controls['client_lastname'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['client_lastname'].errors.required\">Client Last Name is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-3 form-group mb-3\">\n                                <label for=\"Last\">Trails/Case Number</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"trails\" placeholder=\"Trails/Case Number\">\n                                <div *ngIf=\"communityRequestForm.controls['trails'].errors && (!communityRequestForm.controls['trails'].pristine || submittedComm ||communityRequestForm.controls['trails'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['trails'].errors.required\">Trails/Case Number is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Home Visit?</label>\n                                <div class=\"form-check\">\n                                    <label class=\"form-check-label\" for=\"gridRadios1\">\n                                        <input class=\"form-check-input radio-inline \" (change)=\"homevisit($event)\"\n                                        formControlName=\"home_visit\" type=\"radio\" id=\"gridRadios11\" value=\"1\"\n                                        checked>\n                                        Yes\n                                    </label>\n                                    <label class=\"form-check-label pl-5\" for=\"gridRadios2\">\n                                        <input class=\"form-check-input radio-inline\" formControlName=\"home_visit\"\n                                        type=\"radio\" id=\"gridRadios22\" (change)=\"homevisit($event)\" value=\"0\">\n                                        No\n                                    </label>\n                                </div>\n                                <div *ngIf=\"communityRequestForm.controls['home_visit'].errors && (!communityRequestForm.controls['home_visit'].pristine || submittedComm ||communityRequestForm.controls['home_visit'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['home_visit'].errors.required\">Home Visit is required.\n                                    </div>\n                                </div>\n                            </div>\n                            <div *ngIf=\"communityRequestForm.value.home_visit == '1'\" class=\"col-sm-4 form-group mb-3\">\n                                <label for=\"Address\">Address</label>\n                                <input type=\"text\" id=\"address02\" class=\"form-control\" formControlName=\"address\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n                            </div>\n                            <div *ngIf=\"communityRequestForm.value.home_visit == '1'\" class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Apt #</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"apt\" placeholder=\"Apt\">\n                                <!-- <div *ngIf=\"communityRequestForm.controls['trails'].errors && (!communityRequestForm.controls['trails'].pristine || submittedMed ||communityRequestForm.controls['trails'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['trails'].errors.required\">Room is required.\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n                        <div class=\"row\" *ngIf=\"communityRequestForm.value.home_visit == '0'\">\n                            <div class=\"col-md-3 form-group mb-3\">\n                                <label for=\"Last\">Practice Name (Clinic, Hospital,ect)</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"practice_name\" placeholder=\"Practice Name (Clinic, Hospital,ect)\">\n                                <!-- <div *ngIf=\"communityRequestForm.controls['case_name'].errors && (!communityRequestForm.controls['case_name'].pristine || submittedMed ||communityRequestForm.controls['case_name'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['case_name'].errors.required\">\n                                        School/Building\n                                    Name is required.</div>\n                                </div> -->\n                            </div>\n                            <div class=\"col-sm-3 form-group mb-3\">\n                                <label>Provider Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"provider_name\" placeholder=\"Provider Name\">\n                                <!-- <div *ngIf=\"newRequestForm.controls['client_firstname'].errors && (!newRequestForm.controls['client_firstname'].pristine || submittedMed ||newRequestForm.controls['client_firstname'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!newRequestForm.controls['client_firstname'].errors.required\">\n                                    Position is required.</div>\n                                </div> -->\n                            </div>\n                            <div class=\"col-md-3 form-group mb-3\">\n                                <label for=\"Last\">Address</label>\n                                <input type=\"text\" id=\"address03\" class=\"form-control\" formControlName=\"provider_address\" (keydown.enter)=\"$event.preventDefault()\" placeholder=\"Search Nearest Location\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"off\" type=\"text\" #search>\n                                <!-- <div *ngIf=\"newRequestForm.controls['room'].errors && (!newRequestForm.controls['room'].pristine || submittedMed ||newRequestForm.controls['room'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!newRequestForm.controls['room'].errors.required\">Room is required.\n                                    </div>\n                                </div> -->\n                            </div>\n                            <div class=\"col-md-3 form-group mb-3\">\n                                <label for=\"Last\">Suite/Room/Room #</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"room\" placeholder=\"Suite/Room/Room\">\n                                <!-- <div *ngIf=\"newRequestForm.controls['trails'].errors && (!newRequestForm.controls['trails'].pristine || submittedMed ||newRequestForm.controls['trails'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!newRequestForm.controls['trails'].errors.required\">Room is required.\n                                    </div>\n                                </div> -->\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 form-group mb-3\">\n                                <label>IR General Notes</label>\n                                <textarea type=\"text\" class=\"form-control\" formControlName=\"notes\" placeholder=\"IR General Notes\"></textarea>\n                                <div *ngIf=\"communityRequestForm.controls['notes'].errors && (!communityRequestForm.controls['notes'].pristine || submittedComm ||communityRequestForm.controls['notes'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!communityRequestForm.controls['notes'].errors.required\">IR General Notes is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"latitude\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"longitude\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"provider_latitude\">\n                        <input type=\"hidden\" class=\"form-control\" formControlName=\"provider_longitude\">\n                    </form>\n                </div>\n                <!-----------------------------------LOB Community end  -------------------------->\n                <!-----------------------------------LOB Legal start  -------------------------->\n                <div *ngIf=\"showLegalForm\">\n                    <form [formGroup]=\"legalRequestForm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Contact Name at Assignment</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"name_of_contact_person\" placeholder=\"Contact Name at Assignment\">\n                                <div *ngIf=\"legalRequestForm.controls['name_of_contact_person'].errors && (!legalRequestForm.controls['name_of_contact_person'].pristine || submittedLeg ||legalRequestForm.controls['name_of_contact_person'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['name_of_contact_person'].errors.required\">\n                                        Contact Name at Assignment.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>Code</label>\n                                        <select class=\"form-control country_code\" formControlName=\"phone_code\">\n                                            <option value=\"\" selected disabled>Code</option>\n                                            <option  value=\"1\">United States</option>\n                                            <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                                {{isd?.name}} (+{{isd?.phonecode}})\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"legalRequestForm.controls['phone_code'].errors && ( !legalRequestForm.controls['phone_code'].pristine || submittedLeg ||legalRequestForm.controls['phone_code'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!legalRequestForm.controls['phone_code'].errors.required\">Code is required.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <label for=\" Phone No.\">Cell Phone No.</label>\n                                        <input type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"cell_phone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \" placeholder=\"Cell Phone No.\">\n                                        <div *ngIf=\"legalRequestForm.controls['cell_phone'].errors && (!legalRequestForm.controls['cell_phone'].pristine || submittedLeg ||legalRequestForm.controls['cell_phone'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!legalRequestForm.controls['cell_phone'].errors.required\">\n                                                Cell Phone Number.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <label>Cell Phone Number</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"cell_phone\"\n                                placeholder=\"Cell Phone Number\">\n                                <div *ngIf=\"legalRequestForm.controls['cell_phone'].errors && (!legalRequestForm.controls['cell_phone'].pristine || submittedLeg ||legalRequestForm.controls['cell_phone'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['cell_phone'].errors.required\">\n                                    Cell Phone Number.</div>\n                                </div> -->\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Email\n                                </label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"email\" placeholder=\"Email\">\n                                <div *ngIf=\"legalRequestForm.controls['email'].errors && (!legalRequestForm.controls['email'].pristine || submittedLeg ||legalRequestForm.controls['email'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['email'].errors.required\">Email is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Building/Office Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"building_name\" placeholder=\"Building/Office Name\">\n                                <div *ngIf=\"legalRequestForm.controls['building_name'].errors && (!legalRequestForm.controls['building_name'].pristine || submittedLeg ||legalRequestForm.controls['building_name'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['building_name'].errors.required\">\n                                        School/Building Name is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Building/Office\n                                Address</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"building_address\" placeholder=\"Building/Office Address\">\n                                <div *ngIf=\"legalRequestForm.controls['building_address'].errors && (!legalRequestForm.controls['building_address'].pristine || submittedLeg ||legalRequestForm.controls['building_address'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['building_address'].errors.required\">\n                                        Building Address is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Suite/Room/Room #</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"room\" placeholder=\"Suite/Room/Room\">\n                                <div *ngIf=\"legalRequestForm.controls['room'].errors && (!legalRequestForm.controls['room'].pristine || submittedLeg ||legalRequestForm.controls['room'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['room'].errors.required\">Room is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 form-group mb-3\">\n                                <label>IR General Notes</label>\n                                <textarea type=\"text\" class=\"form-control\" formControlName=\"notes\" placeholder=\"IR General Notes\"></textarea>\n                                <div *ngIf=\"legalRequestForm.controls['notes'].errors && (!legalRequestForm.controls['notes'].pristine || submittedLeg ||legalRequestForm.controls['notes'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!legalRequestForm.controls['notes'].errors.required\">IR General Notes is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <!-----------------------------------LOB Legal end  -------------------------->\n                <!-----------------------------------LOB Community start  -------------------------->\n                <div *ngIf=\"showOtherForm\">\n                    <form [formGroup]=\"otherRequestForm\">\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Contact Name at Assignment</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"name_of_contact_person\" placeholder=\"Contact Name at Assignment\">\n                                <div *ngIf=\"otherRequestForm.controls['name_of_contact_person'].errors && (!otherRequestForm.controls['name_of_contact_person'].pristine || submittedOther ||otherRequestForm.controls['name_of_contact_person'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['name_of_contact_person'].errors.required\">\n                                        Contact Name at Assignment.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <div class=\"row\">\n                                    <div class=\"col-md-4\">\n                                        <label>Code</label>\n                                        <select class=\"form-control country_code\" formControlName=\"phone_code\">\n                                            <option value=\"\" selected disabled>Code</option>\n                                            <option  value=\"1\">United States</option>\n                                            <option *ngFor=\"let isd of country_Obj\" [value]=\"isd.phonecode\">\n                                                {{isd?.name}} (+{{isd?.phonecode}})\n                                            </option>\n                                        </select>\n                                        <div *ngIf=\"otherRequestForm.controls['phone_code'].errors && ( !otherRequestForm.controls['phone_code'].pristine || submittedOther ||otherRequestForm.controls['phone_code'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!otherRequestForm.controls['phone_code'].errors.required\">Code is required.</div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-md-8\">\n                                        <label for=\" Phone No.\">Cell Phone No.</label>\n                                        <input type=\"text\" mask=\"(000) 000-0000\" class=\"form-control\" formControlName=\"cell_phone\" onkeypress=\"if(this.value.length==15) return false;return event.charCode >= 48 && event.charCode <= 57 ||event.charCode == '.' || event.charCode == 250 \" placeholder=\"Cell Phone No.\">\n                                        <div *ngIf=\"otherRequestForm.controls['cell_phone'].errors && (!otherRequestForm.controls['cell_phone'].pristine || submittedOther ||otherRequestForm.controls['cell_phone'].touched )\" class=\"error-msg\">\n                                            <div [hidden]=\"!otherRequestForm.controls['cell_phone'].errors.required\">\n                                                Cell Phone Number.</div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <!-- <label>Cell Phone Number</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"cell_phone\"\n                                placeholder=\"Cell Phone Number\">\n                                <div *ngIf=\"otherRequestForm.controls['cell_phone'].errors && (!otherRequestForm.controls['cell_phone'].pristine || submittedOther ||otherRequestForm.controls['cell_phone'].touched )\"\n                                    class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['cell_phone'].errors.required\">\n                                    Cell Phone Number.</div>\n                                </div> -->\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Email\n                                </label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"email\" placeholder=\"Email\">\n                                <div *ngIf=\"otherRequestForm.controls['email'].errors && (!otherRequestForm.controls['email'].pristine || submittedOther ||otherRequestForm.controls['email'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['email'].errors.required\">Email is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Building/Office Name</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"building_name\" placeholder=\"Building/Office Name\">\n                                <div *ngIf=\"otherRequestForm.controls['building_name'].errors && (!otherRequestForm.controls['building_name'].pristine || submittedOther ||otherRequestForm.controls['building_name'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['building_name'].errors.required\">\n                                        School/Building Name is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-4 form-group mb-3\">\n                                <label>Building/Office Address</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"building_address\" placeholder=\"Building/Office Address\">\n                                <div *ngIf=\"otherRequestForm.controls['building_address'].errors && (!otherRequestForm.controls['building_address'].pristine || submittedOther ||otherRequestForm.controls['building_address'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['building_address'].errors.required\">\n                                        Building Address is required.</div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-4 form-group mb-3\">\n                                <label for=\"Last\">Suite/Room/Room #</label>\n                                <input type=\"text\" class=\"form-control\" formControlName=\"room\" placeholder=\"Suite/Room/Room\">\n                                <div *ngIf=\"otherRequestForm.controls['room'].errors && (!otherRequestForm.controls['room'].pristine || submittedOther ||otherRequestForm.controls['room'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['room'].errors.required\">Room is required.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-12 form-group mb-3\">\n                                <label>IR General Notes</label>\n                                <textarea type=\"text\" class=\"form-control\" formControlName=\"notes\" placeholder=\"IR General Notes\"></textarea>\n                                <div *ngIf=\"otherRequestForm.controls['notes'].errors && (!otherRequestForm.controls['notes'].pristine || submittedOther ||otherRequestForm.controls['notes'].touched )\" class=\"error-msg\">\n                                    <div [hidden]=\"!otherRequestForm.controls['notes'].errors.required\">IR General Notes is required.</div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n                <!-----------------------------------LOB Community end  -------------------------->\n                <div class=\"form-group row\">\n                    <div class=\"col-sm-12\">\n                        <button type=\"button\" (click)=\"saveUser()\" class=\"btn btn-primary float-right\">Save</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ToastrService } from 'ngx-toastr';\n@Component({\n  selector: 'app-cancelled-request',\n  templateUrl: './cancelled-request.component.html',\n  styleUrls: ['./cancelled-request.component.scss']\n})\nexport class CancelledRequestComponent implements OnInit {\n  view_obj;\n  resp_msg;\n  constructor(private router: Router,\n    public service:HttpService,\n    private toastr: ToastrService,) { }\n\n  ngOnInit(){\n  }\n\n  viewDetail(request_id){\n    console.log(\"id--\",  request_id);\n    this.service.getRequestDetail(request_id).subscribe(res => {\n      if(res['status'] == 1){\n        this.view_obj = res['data'][0];\n        console.log(\"view object apiii\",  this.view_obj);\n        localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n        this.router.navigate(['/user-request/request-view',request_id])\n      }\n      else{\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message,'', { timeOut: 2000 });\n      }\n    })\n  }\n\n}\n","<div class=\"\">\n  <div class=\"breadcrumb\">\n    <ul class=\"heading\">\n      <li><a>Cancelled</a></li>\n      <li>List</li>\n    </ul>\n  </div>\n\n  <div class=\"separator-breadcrumb border-top\"></div>\n\n  <div class=\"row\">\n    <!-- <div class=\"col-md-4\">\n      <div class=\"form-group\">\n        <input id=\"search\" placeholder=\"Search\" [formControl]=\"searchControl\" class=\"form-control form-control-rounded\"\n          type=\"text\">\n      </div>\n    </div> -->\n\n    <div class=\"col-md-12\">\n      <!-- <div class=\"card  o-hidden\">\n        <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\"\n          [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\"\n          [rows]=\"filteredUser\"\n          >\n          <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n            <ng-template ngx-datatable-header-template>\n              S.No\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n              {{rowIndex +1}}\n            </ng-template>\n          </ngx-datatable-column> -->\n\n          <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                <ng-template ngx-datatable-header-template>\n                  Caseworker\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.caseworker_name}}\n                </ng-template>\n              </ngx-datatable-column> -->\n\n          <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n            <ng-template ngx-datatable-header-template>\n              Appointment Type\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.appointment_type}}\n            </ng-template>\n          </ngx-datatable-column>\n          <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n            <ng-template ngx-datatable-header-template>\n              Cell Phone\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.cell_phone | mask: '(000) 000-0000'}}\n            </ng-template>\n          </ngx-datatable-column> -->\n          <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                    <ng-template ngx-datatable-header-template>\n                      Requester\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.requester_name}}\n                    </ng-template>\n                </ngx-datatable-column> -->\n          <!-- <ngx-datatable-column name=\"Interpreter\" prop=\"requester_name\">\n            <ng-template ngx-datatable-header-template>\n              Interpreter\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.name}}\n            </ng-template>\n          </ngx-datatable-column>\n\n          <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n            <ng-template ngx-datatable-header-template>\n              Interpreter Mobile\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              {{row.mobile | mask: '(000) 000-0000'}}\n            </ng-template>\n          </ngx-datatable-column>\n        \n          <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n             <span title=\"Requested date\">Requested date</span>\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n            </ng-template>\n          </ngx-datatable-column>\n\n          <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n              Appointment date\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                {{row.date | date:'MM/dd/yyyy' }}\n            </ng-template>  \n        </ngx-datatable-column>\n\n          <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n            <ng-template ngx-datatable-header-template>Status\n            </ng-template>\n\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              Cancelled Request\n            </ng-template>\n\n          </ngx-datatable-column>\n\n          <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" >\n            <ng-template ngx-datatable-header-template>Action\n            </ng-template>\n            \n            <ng-template  ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" >\n              <button class=\"btn btn-outline-secondary\" \n              (click)=\"viewDetail(row.ris_id)\">View</button>  \n            </ng-template>\n          </ngx-datatable-column> -->\n          <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                  <ng-template ngx-datatable-header-template *ngIf=\"roleId=='1';then Status; else Actions\">\n                  </ng-template>\n                  <ng-template ngx-datatable-header-template #Status>Status\n                  </ng-template>\n                  <ng-template ngx-datatable-header-template #Actions>Actions\n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Status>\n                      <button class=\"btn btn-outline-secondary ml-2\" >Request Accept</button>  \n                  </ng-template>\n                  <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\" #Actions>\n                    <button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>  \n                    <button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>  \n                </ng-template>\n              </ngx-datatable-column>\n-->\n        <!-- </ngx-datatable>\n      </div>\n      <ng-container *ngIf=\"list_Obj?.length <= 0\">\n        No Data Found\n      </ng-container> -->\n    </div>\n\n  </div>\n</div>","import { Component, EventEmitter, forwardRef, ViewEncapsulation, ElementRef, Renderer2, ViewChild, Input, Output, ContentChild, TemplateRef, Pipe, NgModule } from '@angular/core';\nimport { fromEvent } from 'rxjs';\nimport { map, filter, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/autocomplete-lib.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nconst _c0 = [\"searchInput\"];\nconst _c1 = [\"filteredListElement\"];\nconst _c2 = [\"historyListElement\"];\nfunction AutocompleteComponent_div_4_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_div_4_Template_div_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.remove($event); });\n    ɵngcc0.ɵɵelementStart(1, \"i\", 14);\n    ɵngcc0.ɵɵtext(2, \"close\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AutocompleteComponent_div_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵelement(1, \"div\", 16);\n    ɵngcc0.ɵɵelement(2, \"div\", 17);\n    ɵngcc0.ɵɵelement(3, \"div\", 18);\n    ɵngcc0.ɵɵelement(4, \"div\", 19);\n    ɵngcc0.ɵɵelement(5, \"div\", 20);\n    ɵngcc0.ɵɵelement(6, \"div\", 21);\n    ɵngcc0.ɵɵelement(7, \"div\", 22);\n    ɵngcc0.ɵɵelement(8, \"div\", 23);\n    ɵngcc0.ɵɵelement(9, \"div\", 24);\n    ɵngcc0.ɵɵelement(10, \"div\", 25);\n    ɵngcc0.ɵɵelement(11, \"div\", 26);\n    ɵngcc0.ɵɵelement(12, \"div\", 27);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction AutocompleteComponent_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 29);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.heading);\n} }\nfunction AutocompleteComponent_li_10_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nconst _c3 = function (a0) { return { $implicit: a0 }; };\nfunction AutocompleteComponent_li_10_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r20 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_li_10_div_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); const item_r13 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.select(item_r13); });\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 33);\n    ɵngcc0.ɵɵpipe(2, \"highlight\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r21 = ɵngcc0.ɵɵnextContext();\n    const idx_r14 = ctx_r21.index;\n    const item_r13 = ctx_r21.$implicit;\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"complete-selected\", idx_r14 === ctx_r15.selectedIdx);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r15.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(7, _c3, ɵngcc0.ɵɵpipeBind2(2, 4, item_r13, ctx_r15.toHighlight)));\n} }\nfunction AutocompleteComponent_li_10_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutocompleteComponent_li_10_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_li_10_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r25); const item_r13 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r23 = ɵngcc0.ɵɵnextContext(); return ctx_r23.select(item_r13); });\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 33);\n    ɵngcc0.ɵɵpipe(2, \"highlight\");\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r26 = ɵngcc0.ɵɵnextContext();\n    const idx_r14 = ctx_r26.index;\n    const item_r13 = ctx_r26.$implicit;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"complete-selected\", idx_r14 === ctx_r16.selectedIdx);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r16.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(8, _c3, ɵngcc0.ɵɵpipeBind3(2, 4, item_r13, ctx_r16.toHighlight, ctx_r16.searchKeyword)));\n} }\nfunction AutocompleteComponent_li_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 30);\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_li_10_div_1_Template, 3, 9, \"div\", 31);\n    ɵngcc0.ɵɵtemplate(2, AutocompleteComponent_li_10_div_2_Template, 3, 10, \"div\", 31);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r13 = ctx.$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.isTypeString(item_r13));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.isTypeString(item_r13));\n} }\nfunction AutocompleteComponent_div_12_Template(rf, ctx) { if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 28);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 29);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(3, \"div\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_div_12_Template_div_click_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r27 = ɵngcc0.ɵɵnextContext(); return ctx_r27.resetHistoryList($event); });\n    ɵngcc0.ɵɵelementStart(4, \"i\", 14);\n    ɵngcc0.ɵɵtext(5, \"delete\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6.historyHeading);\n} }\nfunction AutocompleteComponent_li_15_div_1_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutocompleteComponent_li_15_div_1_Template(rf, ctx) { if (rf & 1) {\n    const _r36 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_div_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r36); const item_r29 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.select(item_r29); });\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 33);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r37 = ɵngcc0.ɵɵnextContext();\n    const idx_r30 = ctx_r37.index;\n    const item_r29 = ctx_r37.$implicit;\n    const ctx_r31 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"complete-selected\", idx_r30 === ctx_r31.selectedIdx);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r31.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c3, item_r29));\n} }\nfunction AutocompleteComponent_li_15_div_2_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutocompleteComponent_li_15_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r41 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 32);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r41); const item_r29 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r39 = ɵngcc0.ɵɵnextContext(); return ctx_r39.select(item_r29); });\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_2_ng_container_1_Template, 1, 0, \"ng-container\", 33);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r42 = ɵngcc0.ɵɵnextContext();\n    const idx_r30 = ctx_r42.index;\n    const item_r29 = ctx_r42.$implicit;\n    const ctx_r32 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"complete-selected\", idx_r30 === ctx_r32.selectedIdx);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r32.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c3, item_r29));\n} }\nfunction AutocompleteComponent_li_15_Template(rf, ctx) { if (rf & 1) {\n    const _r44 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 30);\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_li_15_div_1_Template, 2, 6, \"div\", 31);\n    ɵngcc0.ɵɵtemplate(2, AutocompleteComponent_li_15_div_2_Template, 2, 6, \"div\", 31);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_li_15_Template_div_click_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r44); const idx_r30 = ctx.index; const ctx_r43 = ɵngcc0.ɵɵnextContext(); return ctx_r43.removeHistoryItem(idx_r30, $event); });\n    ɵngcc0.ɵɵelementStart(4, \"i\", 14);\n    ɵngcc0.ɵɵtext(5, \"close\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const item_r29 = ctx.$implicit;\n    const ctx_r8 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r8.isTypeString(item_r29));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r8.isTypeString(item_r29));\n} }\nfunction AutocompleteComponent_div_16_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutocompleteComponent_div_16_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 34);\n    ɵngcc0.ɵɵtemplate(1, AutocompleteComponent_div_16_ng_container_1_Template, 1, 0, \"ng-container\", 33);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.notFoundTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c3, ctx_r9.notFoundText));\n} }\nfunction AutocompleteComponent_div_17_Template(rf, ctx) { if (rf & 1) {\n    const _r47 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 35);\n    ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_div_17_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r47); const ctx_r46 = ɵngcc0.ɵɵnextContext(); return ctx_r46.handleOverlay(); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c4 = function (a0) { return { \"active\": a0 }; };\nconst _c5 = function (a0, a1) { return { \"is-hidden\": a0, \"is-visible\": a1 }; };\nclass AutocompleteLibComponent {\n    constructor() {\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n}\nAutocompleteLibComponent.ɵfac = function AutocompleteLibComponent_Factory(t) { return new (t || AutocompleteLibComponent)(); };\nAutocompleteLibComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutocompleteLibComponent, selectors: [[\"ng-autocomplete-lib\"]], decls: 2, vars: 0, template: function AutocompleteLibComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"p\");\n        ɵngcc0.ɵɵtext(1, \" autocomplete-lib works! \");\n        ɵngcc0.ɵɵelementEnd();\n    } }, encapsulation: 2 });\n/** @nocollapse */\nAutocompleteLibComponent.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutocompleteLibComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-autocomplete-lib',\n                template: `\n    <p>\n      autocomplete-lib works!\n    </p>\n  `\n            }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/autocomplete/autocomplete.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Keyboard events\n * @type {?}\n */\nconst isArrowUp = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 38);\nconst ɵ0 = isArrowUp;\n/** @type {?} */\nconst isArrowDown = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 40);\nconst ɵ1 = isArrowDown;\n/** @type {?} */\nconst isArrowUpDown = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => isArrowUp(keyCode) || isArrowDown(keyCode));\nconst ɵ2 = isArrowUpDown;\n/** @type {?} */\nconst isEnter = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 13);\nconst ɵ3 = isEnter;\n/** @type {?} */\nconst isBackspace = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 8);\nconst ɵ4 = isBackspace;\n/** @type {?} */\nconst isDelete = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 46);\nconst ɵ5 = isDelete;\n/** @type {?} */\nconst isESC = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 27);\nconst ɵ6 = isESC;\n/** @type {?} */\nconst isTab = (/**\n * @param {?} keyCode\n * @return {?}\n */\nkeyCode => keyCode === 9);\nconst ɵ7 = isTab;\nclass AutocompleteComponent {\n    /**\n     * @param {?} elementRef\n     * @param {?} renderer\n     */\n    constructor(elementRef, renderer) {\n        this.renderer = renderer;\n        this.query = ''; // search query\n        // search query\n        this.filteredList = []; // list of items\n        // list of items\n        this.historyList = []; // list of history items\n        // list of history items\n        this.isHistoryListVisible = true;\n        this.selectedIdx = -1;\n        this.toHighlight = '';\n        this.notFound = false;\n        this.isFocused = false;\n        this.isOpen = false;\n        this.isScrollToEnd = false;\n        this.overlay = false;\n        this.manualOpen = undefined;\n        this.manualClose = undefined;\n        // @Inputs\n        /**\n         * Data of items list.\n         * It can be array of strings or array of objects.\n         */\n        this.data = [];\n        // keyword to filter the list\n        this.placeholder = '';\n        this.heading = '';\n        /**\n         * Heading text of history list.\n         * If it is null then history heading is hidden.\n         */\n        this.historyHeading = 'Recently selected';\n        this.historyListMaxNumber = 15; // maximum number of items in the history list.\n        // maximum number of items in the history list.\n        this.notFoundText = 'Not found'; // set custom text when filter returns empty result\n        // input disable/enable\n        /**\n         * The minimum number of characters the user must type before a search is performed.\n         */\n        this.minQueryLength = 1;\n        /**\n         * Focus first item in the list\n         */\n        this.focusFirst = false;\n        // @Output events\n        /**\n         * Event that is emitted whenever an item from the list is selected.\n         */\n        this.selected = new EventEmitter();\n        /**\n         * Event that is emitted whenever an input is changed.\n         */\n        this.inputChanged = new EventEmitter();\n        /**\n         * Event that is emitted whenever an input is focused.\n         */\n        this.inputFocused = new EventEmitter();\n        /**\n         * Event that is emitted whenever an input is cleared.\n         */\n        this.inputCleared = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is opened.\n         */\n        this.opened = new EventEmitter();\n        /**\n         * Event that is emitted when the autocomplete panel is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event that is emitted when scrolled to the end of items.\n         */\n        this.scrolledToEnd = new EventEmitter();\n        /**\n         * Propagates new value when model changes\n         */\n        this.propagateChange = (/**\n         * @return {?}\n         */\n        () => {\n        });\n        this.onTouched = (/**\n         * @return {?}\n         */\n        () => {\n        });\n        this.elementRef = elementRef;\n    }\n    /**\n     * Writes a new value from the form model into the view,\n     * Updates model\n     * @param {?=} value\n     * @return {?}\n     */\n    writeValue(value = '') {\n        this.query = value && !this.isTypeString(value) ? value[this.searchKeyword] : value;\n    }\n    /**\n     * Registers a handler that is called when something in the view has changed\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n    /**\n     * Registers a handler specifically for when a control receives a touch event\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Event that is called when the value of an input element is changed\n     * @param {?} event\n     * @return {?}\n     */\n    onChange(event) {\n        this.propagateChange(event.target.value);\n    }\n    /**\n     * Event that is called when the control status changes to or from DISABLED\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this.initEventStream();\n        this.handleScroll();\n    }\n    /**\n     * Set initial value\n     * @param {?} value\n     * @return {?}\n     */\n    setInitialValue(value) {\n        if (this.initialValue) {\n            this.select(value);\n        }\n    }\n    /**\n     * Update search results\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        this.setInitialValue(this.initialValue);\n        if (changes &&\n            changes.data &&\n            Array.isArray(changes.data.currentValue)) {\n            this.handleItemsChange();\n            if (!changes.data.firstChange && this.isFocused) {\n                this.handleOpen();\n            }\n        }\n    }\n    /**\n     * Items change\n     * @return {?}\n     */\n    handleItemsChange() {\n        this.isScrollToEnd = false;\n        if (!this.isOpen) {\n            return;\n        }\n        this.filteredList = this.data;\n        this.notFound = !this.filteredList || this.filteredList.length === 0;\n        // Filter list when updating data and panel is open\n        if (this.isOpen) {\n            this.filterList();\n        }\n    }\n    /**\n     * Filter data\n     * @return {?}\n     */\n    filterList() {\n        this.selectedIdx = -1;\n        this.initSearchHistory();\n        if (this.query != null && this.data) {\n            this.toHighlight = this.query;\n            this.filteredList = this.customFilter !== undefined ? this.customFilter([...this.data], this.query) : this.defaultFilterFunction();\n            // If [focusFirst]=\"true\" automatically focus the first match\n            if (this.filteredList.length > 0 && this.focusFirst) {\n                this.selectedIdx = 0;\n            }\n        }\n        else {\n            this.notFound = false;\n        }\n    }\n    /**\n     * Default filter function, used unless customFilter is provided\n     * @return {?}\n     */\n    defaultFilterFunction() {\n        return this.data.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => {\n            if (typeof item === 'string') {\n                // string logic, check equality of strings\n                return item.toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }\n            else if (typeof item === 'object' && item instanceof Object) {\n                // object logic, check property equality\n                return item[this.searchKeyword].toLowerCase().indexOf(this.query.toLowerCase()) > -1;\n            }\n        }));\n    }\n    /**\n     * Check if item is a string in the list.\n     * @param {?} item\n     * @return {?}\n     */\n    isTypeString(item) {\n        return typeof item === 'string';\n    }\n    /**\n     * Select item in the list.\n     * @param {?} item\n     * @return {?}\n     */\n    select(item) {\n        this.query = !this.isTypeString(item) ? item[this.searchKeyword] : item;\n        this.isOpen = true;\n        this.overlay = false;\n        this.selected.emit(item);\n        this.propagateChange(item);\n        if (this.initialValue) {\n            // check if history already exists in localStorage and then update\n            /** @type {?} */\n            const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n            if (history) {\n                /** @type {?} */\n                let existingHistory = JSON.parse(localStorage[`${this.historyIdentifier}`]);\n                if (!(existingHistory instanceof Array))\n                    existingHistory = [];\n                // check if selected item exists in existingHistory\n                if (!existingHistory.some((/**\n                 * @param {?} existingItem\n                 * @return {?}\n                 */\n                (existingItem) => !this.isTypeString(existingItem)\n                    ? existingItem[this.searchKeyword] == item[this.searchKeyword] : existingItem == item))) {\n                    existingHistory.unshift(item);\n                    localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n                    // check if items don't exceed max allowed number\n                    if (existingHistory.length >= this.historyListMaxNumber) {\n                        existingHistory.splice(existingHistory.length - 1, 1);\n                        localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(existingHistory));\n                    }\n                }\n                else {\n                    // if selected item exists in existingHistory swap to top in array\n                    if (!this.isTypeString(item)) {\n                        // object logic\n                        /** @type {?} */\n                        const copiedExistingHistory = existingHistory.slice();\n                        // copy original existingHistory array\n                        /** @type {?} */\n                        const selectedIndex = copiedExistingHistory.map((/**\n                         * @param {?} el\n                         * @return {?}\n                         */\n                        (el) => el[this.searchKeyword])).indexOf(item[this.searchKeyword]);\n                        copiedExistingHistory.splice(selectedIndex, 1);\n                        copiedExistingHistory.splice(0, 0, item);\n                        localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n                    }\n                    else {\n                        // string logic\n                        /** @type {?} */\n                        const copiedExistingHistory = existingHistory.slice();\n                        copiedExistingHistory.splice(copiedExistingHistory.indexOf(item), 1);\n                        copiedExistingHistory.splice(0, 0, item);\n                        localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(copiedExistingHistory));\n                    }\n                }\n            }\n            else {\n                this.saveHistory(item);\n            }\n        }\n        else {\n            this.saveHistory(item);\n        }\n        this.handleClose();\n    }\n    /**\n     * Document click\n     * @param {?} e event\n     * @return {?}\n     */\n    handleClick(e) {\n        /** @type {?} */\n        let clickedComponent = e.target;\n        /** @type {?} */\n        let inside = false;\n        do {\n            if (clickedComponent === this.elementRef.nativeElement) {\n                inside = true;\n                if (this.filteredList.length) {\n                    this.handleOpen();\n                }\n            }\n            clickedComponent = clickedComponent.parentNode;\n        } while (clickedComponent);\n        if (!inside) {\n            this.handleClose();\n        }\n    }\n    /**\n     * Handle body overlay\n     * @return {?}\n     */\n    handleOverlay() {\n        this.overlay = false;\n    }\n    /**\n     * Scroll items\n     * @return {?}\n     */\n    handleScroll() {\n        this.renderer.listen(this.filteredListElement.nativeElement, 'scroll', (/**\n         * @return {?}\n         */\n        () => {\n            this.scrollToEnd();\n        }));\n    }\n    /**\n     * Define panel state\n     * @param {?} event\n     * @return {?}\n     */\n    setPanelState(event) {\n        if (event) {\n            event.stopPropagation();\n        }\n        // If controls are untouched\n        if (typeof this.manualOpen === 'undefined'\n            && typeof this.manualClose === 'undefined') {\n            this.isOpen = false;\n            this.handleOpen();\n        }\n        // If one of the controls is untouched and other is deactivated\n        if (typeof this.manualOpen === 'undefined'\n            && this.manualClose === false\n            || typeof this.manualClose === 'undefined'\n                && this.manualOpen === false) {\n            this.isOpen = false;\n            this.handleOpen();\n        }\n        // if controls are touched but both are deactivated\n        if (this.manualOpen === false && this.manualClose === false) {\n            this.isOpen = false;\n            this.handleOpen();\n        }\n        // if open control is touched and activated\n        if (this.manualOpen) {\n            this.isOpen = false;\n            this.handleOpen();\n            this.manualOpen = false;\n        }\n        // if close control is touched and activated\n        if (this.manualClose) {\n            this.isOpen = true;\n            this.handleClose();\n            this.manualClose = false;\n        }\n    }\n    /**\n     * Manual controls\n     * @return {?}\n     */\n    open() {\n        this.manualOpen = true;\n        this.isOpen = false;\n        this.handleOpen();\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        this.manualClose = true;\n        this.isOpen = true;\n        this.handleClose();\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.handleFocus(event);\n    }\n    /**\n     * @return {?}\n     */\n    clear() {\n        this.remove(event);\n    }\n    /**\n     * Remove search query\n     * @param {?} e\n     * @return {?}\n     */\n    remove(e) {\n        e.stopPropagation();\n        this.query = '';\n        this.inputCleared.emit();\n        this.propagateChange(this.query);\n        this.setPanelState(e);\n        if (this.data && !this.data.length) {\n            this.notFound = false;\n        }\n    }\n    /**\n     * Initialize historyList search\n     * @return {?}\n     */\n    initSearchHistory() {\n        this.isHistoryListVisible = false;\n        if (this.historyIdentifier && !this.query) {\n            /** @type {?} */\n            const history = window.localStorage.getItem(`${this.historyIdentifier}`);\n            if (history) {\n                this.isHistoryListVisible = true;\n                this.filteredList = [];\n                this.historyList = history ? JSON.parse(history) : [];\n            }\n            else {\n                this.isHistoryListVisible = false;\n            }\n        }\n        else {\n            this.isHistoryListVisible = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    handleOpen() {\n        if (this.isOpen || this.isOpen && !this.isLoading) {\n            return;\n        }\n        // If data exists\n        if (this.data && this.data.length) {\n            this.isOpen = true;\n            this.overlay = true;\n            this.filterList();\n            this.opened.emit();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    handleClose() {\n        if (!this.isOpen) {\n            this.isFocused = false;\n            return;\n        }\n        this.isOpen = false;\n        this.overlay = false;\n        this.filteredList = [];\n        this.selectedIdx = -1;\n        this.notFound = false;\n        this.isHistoryListVisible = false;\n        this.isFocused = false;\n        this.closed.emit();\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    handleFocus(e) {\n        this.searchInput.nativeElement.focus();\n        if (this.isFocused) {\n            return;\n        }\n        this.inputFocused.emit(e);\n        // if data exists then open\n        if (this.data && this.data.length) {\n            this.setPanelState(event);\n        }\n        this.isFocused = true;\n    }\n    /**\n     * @return {?}\n     */\n    scrollToEnd() {\n        if (this.isScrollToEnd) {\n            return;\n        }\n        /** @type {?} */\n        const scrollTop = this.filteredListElement.nativeElement\n            .scrollTop;\n        /** @type {?} */\n        const scrollHeight = this.filteredListElement.nativeElement\n            .scrollHeight;\n        /** @type {?} */\n        const elementHeight = this.filteredListElement.nativeElement\n            .clientHeight;\n        /** @type {?} */\n        const atBottom = scrollHeight === scrollTop + elementHeight;\n        if (atBottom) {\n            this.scrolledToEnd.emit();\n            this.isScrollToEnd = true;\n        }\n    }\n    /**\n     * Initialize keyboard events\n     * @return {?}\n     */\n    initEventStream() {\n        this.inputKeyUp$ = fromEvent(this.searchInput.nativeElement, 'keyup').pipe(map((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => e)));\n        this.inputKeyDown$ = fromEvent(this.searchInput.nativeElement, 'keydown').pipe(map((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => e)));\n        this.listenEventStream();\n    }\n    /**\n     * Listen keyboard events\n     * @return {?}\n     */\n    listenEventStream() {\n        // key up event\n        this.inputKeyUp$\n            .pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => !isArrowUpDown(e.keyCode) &&\n            !isEnter(e.keyCode) &&\n            !isESC(e.keyCode) &&\n            !isTab(e.keyCode))), debounceTime(this.debounceTime)).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            this.onKeyUp(e);\n        }));\n        // cursor up & down\n        this.inputKeyDown$.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => isArrowUpDown(e.keyCode)))).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            e.preventDefault();\n            this.onFocusItem(e);\n        }));\n        // enter keyup\n        this.inputKeyUp$.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => isEnter(e.keyCode)))).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            //this.onHandleEnter();\n        }));\n        // enter keydown\n        this.inputKeyDown$.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => isEnter(e.keyCode)))).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            this.onHandleEnter();\n        }));\n        // ESC\n        this.inputKeyUp$.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => isESC(e.keyCode)), debounceTime(100))).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            this.onEsc();\n        }));\n        // TAB\n        this.inputKeyDown$.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => isTab(e.keyCode)))).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            this.onTab();\n        }));\n        // delete\n        this.inputKeyDown$.pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => isBackspace(e.keyCode) || isDelete(e.keyCode)))).subscribe((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => {\n            this.onDelete();\n        }));\n    }\n    /**\n     * on keyup == when input changed\n     * @param {?} e event\n     * @return {?}\n     */\n    onKeyUp(e) {\n        this.notFound = false; // search results are unknown while typing\n        // if input is empty\n        if (!this.query) {\n            this.notFound = false;\n            this.inputChanged.emit(e.target.value);\n            this.inputCleared.emit();\n            this.setPanelState(e);\n        }\n        // note that '' can be a valid query\n        if (!this.query && this.query !== '') {\n            return;\n        }\n        // if query >= to minQueryLength\n        if (this.query.length >= this.minQueryLength) {\n            this.inputChanged.emit(e.target.value);\n            this.filterList();\n            // If no results found\n            if (!this.filteredList.length && !this.isLoading) {\n                this.notFoundText ? this.notFound = true : this.notFound = false;\n            }\n            if (this.data && !this.data.length) {\n                this.isOpen = true;\n            }\n        }\n    }\n    /**\n     * Keyboard arrow top and arrow bottom\n     * @param {?} e event\n     * @return {?}\n     */\n    onFocusItem(e) {\n        // move arrow up and down on filteredList or historyList\n        if (!this.historyList.length || !this.isHistoryListVisible) {\n            // filteredList\n            /** @type {?} */\n            const totalNumItem = this.filteredList.length;\n            if (e.key === 'ArrowDown') {\n                /** @type {?} */\n                let sum = this.selectedIdx;\n                sum = (this.selectedIdx === null) ? 0 : sum + 1;\n                this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n            else if (e.key === 'ArrowUp') {\n                if (this.selectedIdx == -1) {\n                    this.selectedIdx = 0;\n                }\n                this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n        }\n        else {\n            // historyList\n            /** @type {?} */\n            const totalNumItem = this.historyList.length;\n            if (e.key === 'ArrowDown') {\n                /** @type {?} */\n                let sum = this.selectedIdx;\n                sum = (this.selectedIdx === null) ? 0 : sum + 1;\n                this.selectedIdx = (totalNumItem + sum) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n            else if (e.key === 'ArrowUp') {\n                if (this.selectedIdx == -1) {\n                    this.selectedIdx = 0;\n                }\n                this.selectedIdx = (totalNumItem + this.selectedIdx - 1) % totalNumItem;\n                this.scrollToFocusedItem(this.selectedIdx);\n            }\n        }\n    }\n    /**\n     * Scroll to focused item\n     * * \\@param index\n     * @param {?} index\n     * @return {?}\n     */\n    scrollToFocusedItem(index) {\n        /** @type {?} */\n        let listElement = null;\n        // Define list element\n        if (!this.historyList.length || !this.isHistoryListVisible) {\n            // filteredList element\n            listElement = this.filteredListElement.nativeElement;\n        }\n        else {\n            // historyList element\n            listElement = this.historyListElement.nativeElement;\n        }\n        /** @type {?} */\n        const items = Array.prototype.slice.call(listElement.childNodes).filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        (node) => {\n            if (node.nodeType === 1) {\n                // if node is element\n                return node.className.includes('item');\n            }\n            else {\n                return false;\n            }\n        }));\n        if (!items.length) {\n            return;\n        }\n        /** @type {?} */\n        const listHeight = listElement.offsetHeight;\n        /** @type {?} */\n        const itemHeight = items[index].offsetHeight;\n        /** @type {?} */\n        const visibleTop = listElement.scrollTop;\n        /** @type {?} */\n        const visibleBottom = listElement.scrollTop + listHeight - itemHeight;\n        /** @type {?} */\n        const targetPosition = items[index].offsetTop;\n        if (targetPosition < visibleTop) {\n            listElement.scrollTop = targetPosition;\n        }\n        if (targetPosition > visibleBottom) {\n            listElement.scrollTop = targetPosition - listHeight + itemHeight;\n        }\n    }\n    /**\n     * Select item on enter click\n     * @return {?}\n     */\n    onHandleEnter() {\n        // click enter to choose item from filteredList or historyList\n        if (this.selectedIdx > -1) {\n            if (!this.historyList.length || !this.isHistoryListVisible) {\n                // filteredList\n                this.query = !this.isTypeString(this.filteredList[this.selectedIdx])\n                    ? this.filteredList[this.selectedIdx][this.searchKeyword]\n                    : this.filteredList[this.selectedIdx];\n                this.saveHistory(this.filteredList[this.selectedIdx]);\n                this.select(this.filteredList[this.selectedIdx]);\n            }\n            else {\n                // historyList\n                this.query = !this.isTypeString(this.historyList[this.selectedIdx])\n                    ? this.historyList[this.selectedIdx][this.searchKeyword]\n                    : this.historyList[this.selectedIdx];\n                this.saveHistory(this.historyList[this.selectedIdx]);\n                this.select(this.historyList[this.selectedIdx]);\n            }\n        }\n        this.isHistoryListVisible = false;\n        this.handleClose();\n    }\n    /**\n     * Esc click\n     * @return {?}\n     */\n    onEsc() {\n        this.searchInput.nativeElement.blur();\n        this.handleClose();\n    }\n    /**\n     * Tab click\n     * @return {?}\n     */\n    onTab() {\n        this.searchInput.nativeElement.blur();\n        this.handleClose();\n    }\n    /**\n     * Delete click\n     * @return {?}\n     */\n    onDelete() {\n        this.isOpen = true;\n    }\n    /**\n     * Select item to save in localStorage\n     * @param {?} selected\n     * @return {?}\n     */\n    saveHistory(selected) {\n        if (this.historyIdentifier) {\n            // check if selected item exists in historyList\n            if (!this.historyList.some((/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => !this.isTypeString(item)\n                ? item[this.searchKeyword] == selected[this.searchKeyword] : item == selected))) {\n                this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n                // check if items don't exceed max allowed number\n                if (this.historyList.length >= this.historyListMaxNumber) {\n                    this.historyList.splice(this.historyList.length - 1, 1);\n                    this.saveHistoryToLocalStorage([selected, ...this.historyList]);\n                }\n            }\n            else {\n                // if selected item exists in historyList swap to top in array\n                if (!this.isTypeString(selected)) {\n                    // object logic\n                    /** @type {?} */\n                    const copiedHistoryList = this.historyList.slice();\n                    // copy original historyList array\n                    /** @type {?} */\n                    const selectedIndex = copiedHistoryList.map((/**\n                     * @param {?} item\n                     * @return {?}\n                     */\n                    (item) => item[this.searchKeyword])).indexOf(selected[this.searchKeyword]);\n                    copiedHistoryList.splice(selectedIndex, 1);\n                    copiedHistoryList.splice(0, 0, selected);\n                    this.saveHistoryToLocalStorage([...copiedHistoryList]);\n                }\n                else {\n                    // string logic\n                    /** @type {?} */\n                    const copiedHistoryList = this.historyList.slice();\n                    copiedHistoryList.splice(this.historyList.indexOf(selected), 1);\n                    copiedHistoryList.splice(0, 0, selected);\n                    this.saveHistoryToLocalStorage([...copiedHistoryList]);\n                }\n            }\n        }\n    }\n    /**\n     * Save item in localStorage\n     * @param {?} selected\n     * @return {?}\n     */\n    saveHistoryToLocalStorage(selected) {\n        window.localStorage.setItem(`${this.historyIdentifier}`, JSON.stringify(selected));\n    }\n    /**\n     * Remove item from localStorage\n     * @param {?} index\n     * @param {?} e event\n     * @return {?}\n     */\n    removeHistoryItem(index, e) {\n        e.stopPropagation();\n        this.historyList = this.historyList.filter((/**\n         * @param {?} v\n         * @param {?} i\n         * @return {?}\n         */\n        (v, i) => i !== index));\n        this.saveHistoryToLocalStorage(this.historyList);\n        if (this.historyList.length == 0) {\n            window.localStorage.removeItem(`${this.historyIdentifier}`);\n            this.filterList();\n        }\n    }\n    /**\n     * Reset localStorage\n     * @param {?} e event\n     * @return {?}\n     */\n    resetHistoryList(e) {\n        e.stopPropagation();\n        this.historyList = [];\n        window.localStorage.removeItem(`${this.historyIdentifier}`);\n        this.filterList();\n    }\n}\nAutocompleteComponent.ɵfac = function AutocompleteComponent_Factory(t) { return new (t || AutocompleteComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nAutocompleteComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutocompleteComponent, selectors: [[\"ng-autocomplete\"]], contentQueries: function AutocompleteComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.customTemplate = _t.first);\n    } }, viewQuery: function AutocompleteComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n        ɵngcc0.ɵɵviewQuery(_c1, true);\n        ɵngcc0.ɵɵviewQuery(_c2, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.searchInput = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.filteredListElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.historyListElement = _t.first);\n    } }, hostAttrs: [1, \"ng-autocomplete\"], hostBindings: function AutocompleteComponent_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function AutocompleteComponent_click_HostBindingHandler($event) { return ctx.handleClick($event); }, false, ɵngcc0.ɵɵresolveDocument);\n    } }, inputs: { data: \"data\", placeholder: \"placeholder\", heading: \"heading\", historyHeading: \"historyHeading\", historyListMaxNumber: \"historyListMaxNumber\", notFoundText: \"notFoundText\", minQueryLength: \"minQueryLength\", focusFirst: \"focusFirst\", disabled: \"disabled\", searchKeyword: \"searchKeyword\", initialValue: \"initialValue\", historyIdentifier: \"historyIdentifier\", isLoading: \"isLoading\", debounceTime: \"debounceTime\", customFilter: \"customFilter\", itemTemplate: \"itemTemplate\", notFoundTemplate: \"notFoundTemplate\" }, outputs: { selected: \"selected\", inputChanged: \"inputChanged\", inputFocused: \"inputFocused\", inputCleared: \"inputCleared\", opened: \"opened\", closed: \"closed\", scrolledToEnd: \"scrolledToEnd\" }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                provide: NG_VALUE_ACCESSOR,\n                useExisting: forwardRef(( /**\n                 * @return {?}\n                 */() => AutocompleteComponent)),\n                multi: true\n            }\n        ]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 18, vars: 22, consts: [[1, \"autocomplete-container\", 3, \"ngClass\"], [1, \"input-container\"], [\"type\", \"text\", \"autocomplete\", \"off\", 3, \"placeholder\", \"ngModel\", \"disabled\", \"ngModelChange\", \"input\", \"focus\", \"blur\"], [\"searchInput\", \"\"], [\"class\", \"x\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"sk-fading-circle\", 4, \"ngIf\"], [1, \"suggestions-container\", 3, \"ngClass\"], [\"class\", \"heading\", 4, \"ngIf\"], [\"filteredListElement\", \"\"], [\"class\", \"item\", 4, \"ngFor\", \"ngForOf\"], [\"historyListElement\", \"\"], [\"class\", \"not-found\", 4, \"ngIf\"], [\"class\", \"autocomplete-overlay\", 3, \"click\", 4, \"ngIf\"], [1, \"x\", 3, \"click\"], [1, \"material-icons\"], [1, \"sk-fading-circle\"], [1, \"sk-circle1\", \"sk-circle\"], [1, \"sk-circle2\", \"sk-circle\"], [1, \"sk-circle3\", \"sk-circle\"], [1, \"sk-circle4\", \"sk-circle\"], [1, \"sk-circle5\", \"sk-circle\"], [1, \"sk-circle6\", \"sk-circle\"], [1, \"sk-circle7\", \"sk-circle\"], [1, \"sk-circle8\", \"sk-circle\"], [1, \"sk-circle9\", \"sk-circle\"], [1, \"sk-circle10\", \"sk-circle\"], [1, \"sk-circle11\", \"sk-circle\"], [1, \"sk-circle12\", \"sk-circle\"], [1, \"heading\"], [1, \"text\"], [1, \"item\"], [3, \"complete-selected\", \"click\", 4, \"ngIf\"], [3, \"click\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"not-found\"], [1, \"autocomplete-overlay\", 3, \"click\"]], template: function AutocompleteComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"input\", 2, 3);\n        ɵngcc0.ɵɵlistener(\"ngModelChange\", function AutocompleteComponent_Template_input_ngModelChange_2_listener($event) { return ctx.query = $event; })(\"input\", function AutocompleteComponent_Template_input_input_2_listener($event) { return ctx.onChange($event); })(\"focus\", function AutocompleteComponent_Template_input_focus_2_listener($event) { return ctx.handleFocus($event); })(\"blur\", function AutocompleteComponent_Template_input_blur_2_listener($event) { return ctx.onTouched($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, AutocompleteComponent_div_4_Template, 3, 0, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(5, AutocompleteComponent_div_5_Template, 13, 0, \"div\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(7, AutocompleteComponent_div_7_Template, 3, 1, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"ul\", null, 8);\n        ɵngcc0.ɵɵtemplate(10, AutocompleteComponent_li_10_Template, 3, 2, \"li\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(11, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(12, AutocompleteComponent_div_12_Template, 6, 1, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(13, \"ul\", null, 10);\n        ɵngcc0.ɵɵtemplate(15, AutocompleteComponent_li_15_Template, 6, 2, \"li\", 9);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(16, AutocompleteComponent_div_16_Template, 2, 4, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(17, AutocompleteComponent_div_17_Template, 1, 0, \"div\", 12);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(14, _c4, ctx.isOpen));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵpropertyInterpolate(\"placeholder\", ctx.placeholder);\n        ɵngcc0.ɵɵproperty(\"ngModel\", ctx.query)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.query && !ctx.isLoading && !ctx.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(16, _c5, ctx.isHistoryListVisible, !ctx.isHistoryListVisible));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.filteredList.length > 0 && ctx.heading);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.filteredList);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(19, _c5, !ctx.isHistoryListVisible, ctx.isHistoryListVisible));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.historyList.length > 0 && ctx.historyHeading);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.historyList);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isLoading ? !ctx.isLoading && ctx.notFound : ctx.notFound);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlay);\n    } }, directives: function () { return [ɵngcc1.NgClass, ɵngcc2.DefaultValueAccessor, ɵngcc2.NgControlStatus, ɵngcc2.NgModel, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet]; }, pipes: function () { return [HighlightPipe]; }, styles: [\"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:0;background-color:#fff;color:rgba(0,0,0,.87);width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:rgba(0,0,0,.54);font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:#fff;height:auto;box-shadow:0 2px 5px rgba(0,0,0,.25);box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;cursor:pointer;color:rgba(0,0,0,.87);font-size:15px}.autocomplete-container .suggestions-container .complete-selected,.autocomplete-container .suggestions-container ul li:hover{background-color:rgba(158,158,158,.18)}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:1px solid #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:rgba(0,0,0,.54);font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:1px solid #f1f1f1;background:#fff}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;-webkit-animation:1.2s ease-in-out infinite both sk-circleFadeDelay;animation:1.2s ease-in-out infinite both sk-circleFadeDelay}.sk-fading-circle .sk-circle2{-webkit-transform:rotate(30deg);transform:rotate(30deg)}.sk-fading-circle .sk-circle3{-webkit-transform:rotate(60deg);transform:rotate(60deg)}.sk-fading-circle .sk-circle4{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.sk-fading-circle .sk-circle5{-webkit-transform:rotate(120deg);transform:rotate(120deg)}.sk-fading-circle .sk-circle6{-webkit-transform:rotate(150deg);transform:rotate(150deg)}.sk-fading-circle .sk-circle7{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.sk-fading-circle .sk-circle8{-webkit-transform:rotate(210deg);transform:rotate(210deg)}.sk-fading-circle .sk-circle9{-webkit-transform:rotate(240deg);transform:rotate(240deg)}.sk-fading-circle .sk-circle10{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.sk-fading-circle .sk-circle11{-webkit-transform:rotate(300deg);transform:rotate(300deg)}.sk-fading-circle .sk-circle12{-webkit-transform:rotate(330deg);transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{-webkit-animation-delay:-1.1s;animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{-webkit-animation-delay:-1s;animation-delay:-1s}.sk-fading-circle .sk-circle4:before{-webkit-animation-delay:-.9s;animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{-webkit-animation-delay:-.8s;animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{-webkit-animation-delay:-.7s;animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{-webkit-animation-delay:-.6s;animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{-webkit-animation-delay:-.5s;animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{-webkit-animation-delay:-.4s;animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{-webkit-animation-delay:-.3s;animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{-webkit-animation-delay:-.2s;animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{-webkit-animation-delay:-.1s;animation-delay:-.1s}@-webkit-keyframes sk-circleFadeDelay{0%,100%,39%{opacity:0}40%{opacity:1}}@keyframes sk-circleFadeDelay{0%,100%,39%{opacity:0}40%{opacity:1}}\"], encapsulation: 2 });\n/** @nocollapse */\nAutocompleteComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nAutocompleteComponent.propDecorators = {\n    searchInput: [{ type: ViewChild, args: ['searchInput',] }],\n    filteredListElement: [{ type: ViewChild, args: ['filteredListElement',] }],\n    historyListElement: [{ type: ViewChild, args: ['historyListElement',] }],\n    data: [{ type: Input }],\n    searchKeyword: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    heading: [{ type: Input }],\n    initialValue: [{ type: Input }],\n    historyIdentifier: [{ type: Input }],\n    historyHeading: [{ type: Input }],\n    historyListMaxNumber: [{ type: Input }],\n    notFoundText: [{ type: Input }],\n    isLoading: [{ type: Input }],\n    debounceTime: [{ type: Input }],\n    disabled: [{ type: Input }],\n    minQueryLength: [{ type: Input }],\n    focusFirst: [{ type: Input }],\n    customFilter: [{ type: Input }],\n    selected: [{ type: Output }],\n    inputChanged: [{ type: Output }],\n    inputFocused: [{ type: Output }],\n    inputCleared: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    scrolledToEnd: [{ type: Output }],\n    itemTemplate: [{ type: Input }],\n    notFoundTemplate: [{ type: Input }],\n    customTemplate: [{ type: ContentChild, args: [TemplateRef,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutocompleteComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ng-autocomplete',\n                template: \"<div class=\\\"autocomplete-container\\\"\\n     [ngClass]=\\\"{ 'active': isOpen}\\\">\\n  <div class=\\\"input-container\\\">\\n    <input #searchInput\\n           type=\\\"text\\\"\\n           placeholder={{placeholder}}\\n           [(ngModel)]=query\\n           (input)=\\\"onChange($event)\\\"\\n           (focus)=handleFocus($event)\\n           (blur)=onTouched($event)\\n           [disabled]=\\\"disabled\\\"\\n           autocomplete=\\\"off\\\">\\n    <div class=\\\"x\\\" *ngIf=\\\"query && !isLoading && !disabled\\\" (click)=\\\"remove($event)\\\">\\n      <i class=\\\"material-icons\\\">close</i>\\n    </div>\\n    <!--Loading mask-->\\n    <div class=\\\"sk-fading-circle\\\" *ngIf=\\\"isLoading\\\">\\n      <div class=\\\"sk-circle1 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle2 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle3 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle4 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle5 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle6 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle7 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle8 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle9 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle10 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle11 sk-circle\\\"></div>\\n      <div class=\\\"sk-circle12 sk-circle\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!--FilteredList items-->\\n  <div class=\\\"suggestions-container\\\"\\n       [ngClass]=\\\"{ 'is-hidden': isHistoryListVisible, 'is-visible': !isHistoryListVisible}\\\">\\n    <!--FilteredList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"filteredList.length > 0 && heading\\\">\\n      <div class=\\\"text\\\">{{heading}}</div>\\n    </div>\\n\\n    <ul #filteredListElement>\\n      <li *ngFor=\\\"let item of filteredList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item | highlight: toHighlight }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)'\\n             (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item | highlight: toHighlight : searchKeyword }\\\">\\n          </ng-container>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--HistoryList items-->\\n  <div class=\\\"suggestions-container\\\"\\n       [ngClass]=\\\"{ 'is-hidden': !isHistoryListVisible, 'is-visible': isHistoryListVisible}\\\">\\n    <!--HistoryList heading-->\\n    <div class=\\\"heading\\\" *ngIf=\\\"historyList.length > 0 && historyHeading\\\">\\n      <div class=\\\"text\\\">{{historyHeading}}</div>\\n      <div class=\\\"x\\\" (click)=\\\"resetHistoryList($event)\\\">\\n        <i class=\\\"material-icons\\\">delete</i>\\n      </div>\\n    </div>\\n\\n    <ul #historyListElement>\\n      <li *ngFor=\\\"let item of historyList; let idx = index\\\" class=\\\"item\\\">\\n        <!--string logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate;  context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <!--object logic-->\\n        <div [class.complete-selected]=\\\"idx === selectedIdx\\\" *ngIf='!isTypeString(item)' (click)=\\\"select(item)\\\">\\n          <ng-container\\n            *ngTemplateOutlet=\\\"itemTemplate; context: { $implicit: item }\\\">\\n          </ng-container>\\n        </div>\\n        <div class=\\\"x\\\" (click)=\\\"removeHistoryItem(idx, $event)\\\">\\n          <i class=\\\"material-icons\\\">close</i>\\n        </div>\\n      </li>\\n    </ul>\\n  </div>\\n\\n  <!--Not found-->\\n  <div class=\\\"not-found\\\" *ngIf=\\\"isLoading ? !isLoading && notFound : notFound\\\">\\n    <ng-container\\n      *ngTemplateOutlet=\\\"notFoundTemplate;  context: { $implicit: notFoundText  }\\\">\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"autocomplete-overlay\\\" *ngIf=\\\"overlay\\\" (click)=\\\"handleOverlay()\\\"></div>\\n\",\n                providers: [\n                    {\n                        provide: NG_VALUE_ACCESSOR,\n                        useExisting: forwardRef(( /**\n                         * @return {?}\n                         */() => AutocompleteComponent)),\n                        multi: true\n                    }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    '(document:click)': 'handleClick($event)',\n                    'class': 'ng-autocomplete'\n                },\n                styles: [\"@import url(https://fonts.googleapis.com/icon?family=Material+Icons);.ng-autocomplete{width:600px}.autocomplete-container{box-shadow:0 1px 3px 0 rgba(0,0,0,.2),0 1px 1px 0 rgba(0,0,0,.14),0 2px 1px -1px rgba(0,0,0,.12);position:relative;overflow:visible;height:40px}.autocomplete-container .input-container input{font-size:14px;box-sizing:border-box;border:none;box-shadow:none;outline:0;background-color:#fff;color:rgba(0,0,0,.87);width:100%;padding:0 15px;line-height:40px;height:40px}.autocomplete-container .input-container input:disabled{background-color:#eee;color:#666}.autocomplete-container .input-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.autocomplete-container .input-container .x i{color:rgba(0,0,0,.54);font-size:22px;vertical-align:middle}.autocomplete-container .suggestions-container{position:absolute;width:100%;background:#fff;height:auto;box-shadow:0 2px 5px rgba(0,0,0,.25);box-sizing:border-box}.autocomplete-container .suggestions-container ul{padding:0;margin:0;max-height:240px;overflow-y:auto}.autocomplete-container .suggestions-container ul li{position:relative;list-style:none;padding:0;margin:0;cursor:pointer}.autocomplete-container .suggestions-container ul li a{padding:14px 15px;display:block;text-decoration:none;cursor:pointer;color:rgba(0,0,0,.87);font-size:15px}.autocomplete-container .suggestions-container .complete-selected,.autocomplete-container .suggestions-container ul li:hover{background-color:rgba(158,158,158,.18)}.autocomplete-container .suggestions-container .heading{position:relative;padding:10px 15px;border:1px solid #f1f1f1}.autocomplete-container .suggestions-container .heading .text{font-size:.85em}.autocomplete-container .suggestions-container .x{position:absolute;right:10px;margin:auto;cursor:pointer;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.autocomplete-container .suggestions-container .x i{color:rgba(0,0,0,.54);font-size:18px;vertical-align:middle}.autocomplete-container .suggestions-container.is-hidden{visibility:hidden}.autocomplete-container .suggestions-container.is-visible{visibility:visible}.autocomplete-container .not-found{padding:0 .75em;border:1px solid #f1f1f1;background:#fff}.autocomplete-container .not-found div{padding:.4em 0;font-size:.95em;line-height:1.4;border-bottom:1px solid rgba(230,230,230,.7)}.autocomplete-container.active{z-index:999}.highlight{font-weight:700}.autocomplete-overlay{position:fixed;background-color:transparent;width:100%;height:100%;top:0;right:0;bottom:0;left:0;z-index:50}input[type=text]::-ms-clear{display:none}.sk-fading-circle{width:20px;height:20px;position:absolute;right:10px;top:0;bottom:0;margin:auto}.sk-fading-circle .sk-circle{width:100%;height:100%;position:absolute;left:0;top:0}.sk-fading-circle .sk-circle:before{content:\\\"\\\";display:block;margin:0 auto;width:15%;height:15%;background-color:#333;border-radius:100%;-webkit-animation:1.2s ease-in-out infinite both sk-circleFadeDelay;animation:1.2s ease-in-out infinite both sk-circleFadeDelay}.sk-fading-circle .sk-circle2{-webkit-transform:rotate(30deg);transform:rotate(30deg)}.sk-fading-circle .sk-circle3{-webkit-transform:rotate(60deg);transform:rotate(60deg)}.sk-fading-circle .sk-circle4{-webkit-transform:rotate(90deg);transform:rotate(90deg)}.sk-fading-circle .sk-circle5{-webkit-transform:rotate(120deg);transform:rotate(120deg)}.sk-fading-circle .sk-circle6{-webkit-transform:rotate(150deg);transform:rotate(150deg)}.sk-fading-circle .sk-circle7{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.sk-fading-circle .sk-circle8{-webkit-transform:rotate(210deg);transform:rotate(210deg)}.sk-fading-circle .sk-circle9{-webkit-transform:rotate(240deg);transform:rotate(240deg)}.sk-fading-circle .sk-circle10{-webkit-transform:rotate(270deg);transform:rotate(270deg)}.sk-fading-circle .sk-circle11{-webkit-transform:rotate(300deg);transform:rotate(300deg)}.sk-fading-circle .sk-circle12{-webkit-transform:rotate(330deg);transform:rotate(330deg)}.sk-fading-circle .sk-circle2:before{-webkit-animation-delay:-1.1s;animation-delay:-1.1s}.sk-fading-circle .sk-circle3:before{-webkit-animation-delay:-1s;animation-delay:-1s}.sk-fading-circle .sk-circle4:before{-webkit-animation-delay:-.9s;animation-delay:-.9s}.sk-fading-circle .sk-circle5:before{-webkit-animation-delay:-.8s;animation-delay:-.8s}.sk-fading-circle .sk-circle6:before{-webkit-animation-delay:-.7s;animation-delay:-.7s}.sk-fading-circle .sk-circle7:before{-webkit-animation-delay:-.6s;animation-delay:-.6s}.sk-fading-circle .sk-circle8:before{-webkit-animation-delay:-.5s;animation-delay:-.5s}.sk-fading-circle .sk-circle9:before{-webkit-animation-delay:-.4s;animation-delay:-.4s}.sk-fading-circle .sk-circle10:before{-webkit-animation-delay:-.3s;animation-delay:-.3s}.sk-fading-circle .sk-circle11:before{-webkit-animation-delay:-.2s;animation-delay:-.2s}.sk-fading-circle .sk-circle12:before{-webkit-animation-delay:-.1s;animation-delay:-.1s}@-webkit-keyframes sk-circleFadeDelay{0%,100%,39%{opacity:0}40%{opacity:1}}@keyframes sk-circleFadeDelay{0%,100%,39%{opacity:0}40%{opacity:1}}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { data: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], heading: [{\n            type: Input\n        }], historyHeading: [{\n            type: Input\n        }], historyListMaxNumber: [{\n            type: Input\n        }], notFoundText: [{\n            type: Input\n        }], minQueryLength: [{\n            type: Input\n        }], focusFirst: [{\n            type: Input\n        }], selected: [{\n            type: Output\n        }], inputChanged: [{\n            type: Output\n        }], inputFocused: [{\n            type: Output\n        }], inputCleared: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], scrolledToEnd: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], searchInput: [{\n            type: ViewChild,\n            args: ['searchInput']\n        }], filteredListElement: [{\n            type: ViewChild,\n            args: ['filteredListElement']\n        }], historyListElement: [{\n            type: ViewChild,\n            args: ['historyListElement']\n        }], searchKeyword: [{\n            type: Input\n        }], initialValue: [{\n            type: Input\n        }], historyIdentifier: [{\n            type: Input\n        }], isLoading: [{\n            type: Input\n        }], debounceTime: [{\n            type: Input\n        }], customFilter: [{\n            type: Input\n        }], itemTemplate: [{\n            type: Input\n        }], notFoundTemplate: [{\n            type: Input\n        }], customTemplate: [{\n            type: ContentChild,\n            args: [TemplateRef]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    AutocompleteComponent.prototype.searchInput;\n    /** @type {?} */\n    AutocompleteComponent.prototype.filteredListElement;\n    /** @type {?} */\n    AutocompleteComponent.prototype.historyListElement;\n    /** @type {?} */\n    AutocompleteComponent.prototype.inputKeyUp$;\n    /** @type {?} */\n    AutocompleteComponent.prototype.inputKeyDown$;\n    /** @type {?} */\n    AutocompleteComponent.prototype.query;\n    /** @type {?} */\n    AutocompleteComponent.prototype.filteredList;\n    /** @type {?} */\n    AutocompleteComponent.prototype.historyList;\n    /** @type {?} */\n    AutocompleteComponent.prototype.isHistoryListVisible;\n    /** @type {?} */\n    AutocompleteComponent.prototype.elementRef;\n    /** @type {?} */\n    AutocompleteComponent.prototype.selectedIdx;\n    /** @type {?} */\n    AutocompleteComponent.prototype.toHighlight;\n    /** @type {?} */\n    AutocompleteComponent.prototype.notFound;\n    /** @type {?} */\n    AutocompleteComponent.prototype.isFocused;\n    /** @type {?} */\n    AutocompleteComponent.prototype.isOpen;\n    /** @type {?} */\n    AutocompleteComponent.prototype.isScrollToEnd;\n    /** @type {?} */\n    AutocompleteComponent.prototype.overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutocompleteComponent.prototype.manualOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutocompleteComponent.prototype.manualClose;\n    /**\n     * Data of items list.\n     * It can be array of strings or array of objects.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.data;\n    /** @type {?} */\n    AutocompleteComponent.prototype.searchKeyword;\n    /** @type {?} */\n    AutocompleteComponent.prototype.placeholder;\n    /** @type {?} */\n    AutocompleteComponent.prototype.heading;\n    /** @type {?} */\n    AutocompleteComponent.prototype.initialValue;\n    /**\n     * History identifier of history list\n     * When valid history identifier is given, then component stores selected item to local storage of user's browser.\n     * If it is null then history is hidden.\n     * History list is visible if at least one history item is stored.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.historyIdentifier;\n    /**\n     * Heading text of history list.\n     * If it is null then history heading is hidden.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.historyHeading;\n    /** @type {?} */\n    AutocompleteComponent.prototype.historyListMaxNumber;\n    /** @type {?} */\n    AutocompleteComponent.prototype.notFoundText;\n    /** @type {?} */\n    AutocompleteComponent.prototype.isLoading;\n    /** @type {?} */\n    AutocompleteComponent.prototype.debounceTime;\n    /** @type {?} */\n    AutocompleteComponent.prototype.disabled;\n    /**\n     * The minimum number of characters the user must type before a search is performed.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.minQueryLength;\n    /**\n     * Focus first item in the list\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.focusFirst;\n    /**\n     * Custom filter function\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.customFilter;\n    /**\n     * Event that is emitted whenever an item from the list is selected.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.selected;\n    /**\n     * Event that is emitted whenever an input is changed.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.inputChanged;\n    /**\n     * Event that is emitted whenever an input is focused.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.inputFocused;\n    /**\n     * Event that is emitted whenever an input is cleared.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.inputCleared;\n    /**\n     * Event that is emitted when the autocomplete panel is opened.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.opened;\n    /**\n     * Event that is emitted when the autocomplete panel is closed.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.closed;\n    /**\n     * Event that is emitted when scrolled to the end of items.\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.scrolledToEnd;\n    /** @type {?} */\n    AutocompleteComponent.prototype.itemTemplate;\n    /** @type {?} */\n    AutocompleteComponent.prototype.notFoundTemplate;\n    /** @type {?} */\n    AutocompleteComponent.prototype.customTemplate;\n    /**\n     * Propagates new value when model changes\n     * @type {?}\n     */\n    AutocompleteComponent.prototype.propagateChange;\n    /** @type {?} */\n    AutocompleteComponent.prototype.onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    AutocompleteComponent.prototype.renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/autocomplete/highlight.pipe.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass HighlightPipe {\n    /**\n     * @param {?} text\n     * @param {?} search\n     * @param {?=} searchKeyword\n     * @return {?}\n     */\n    transform(text, search, searchKeyword) {\n        /** @type {?} */\n        let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n        pattern = pattern.split(' ').filter((/**\n         * @param {?} t\n         * @return {?}\n         */\n        (t) => {\n            return t.length > 0;\n        })).join('|');\n        /** @type {?} */\n        const regex = new RegExp(pattern, 'gi');\n        if (!search) {\n            return text;\n        }\n        if (searchKeyword) {\n            /** @type {?} */\n            const name = text[searchKeyword].replace(regex, (/**\n             * @param {?} match\n             * @return {?}\n             */\n            (match) => `<b>${match}</b>`));\n            // copy original object\n            /** @type {?} */\n            const text2 = Object.assign({}, text);\n            // set bold value into searchKeyword of copied object\n            text2[searchKeyword] = name;\n            return text2;\n        }\n        else {\n            return search ? text.replace(regex, (/**\n             * @param {?} match\n             * @return {?}\n             */\n            (match) => `<b>${match}</b>`)) : text;\n        }\n    }\n}\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) { return new (t || HighlightPipe)(); };\nHighlightPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({ name: \"highlight\", type: HighlightPipe, pure: true });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HighlightPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'highlight'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/autocomplete-lib.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass AutocompleteLibModule {\n}\nAutocompleteLibModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AutocompleteLibModule });\nAutocompleteLibModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function AutocompleteLibModule_Factory(t) { return new (t || AutocompleteLibModule)(); }, imports: [[\n            CommonModule,\n            FormsModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutocompleteLibModule, { declarations: function () { return [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe]; }, imports: function () { return [CommonModule,\n        FormsModule]; }, exports: function () { return [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutocompleteLibModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    FormsModule\n                ],\n                declarations: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe],\n                exports: [AutocompleteLibComponent, AutocompleteComponent, HighlightPipe]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: angular-ng-autocomplete.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { AutocompleteComponent, AutocompleteLibComponent, AutocompleteLibModule, HighlightPipe };\n\n//# sourceMappingURL=angular-ng-autocomplete.js.map","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"../../../shared/services/http.service\";\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-request-detail',\n  templateUrl: './request-detail.component.html',\n  styleUrls: ['./request-detail.component.scss']\n})\nexport class RequestDetailComponent implements OnInit {\n  data;\n  id;\n  event_at = [];\n  len;\n  userId = localStorage.getItem('userId');\n  constructor(public service: HttpService, private router: Router, private route: ActivatedRoute) {\n    this.id = route.snapshot.params['id'];\n  }\n\n  ngOnInit(): void {\n    this.getRequestDetails();\n    this.getRatings();\n  }\n\n  GetAllPagesPermission() {\n    this.service.get('getClientRoleMenusForPages/' + JSON.parse(localStorage.getItem('roleId'))).subscribe(res => {\n      var count = 0;\n      for (var i = 0; i < res['data'].length; ++i) {\n        if (res['data'][i].module_id == 7) {\n          if (res['data'][i].view_permission == 'false') {\n            this.router.navigate(['/client-request/all-request-list']);\n          } else {\n            count = count + 1;\n            alert(count)\n          }\n        }\n        else {\n          let obj = res['data'].find(o => o.module_id === 7);\n          alert(JSON.stringify(obj))\n          if (count == 0) {\n\n            this.router.navigate(['/client-request/all-request-list']);\n          }\n\n        }\n      }\n    })\n  }\n\n  getRequestDetails() {\n    this.service.get(\"getRequestDetails/\" + this.id).subscribe((res) => {\n      this.data = res['data'][0];\n      console.log(\"==========this.data\",this.data);\n      if (this.data.recurrent_assignment == \"1\") {\n        if (this.data.repeats == \"1\" || this.data.repeats == \"2\") {\n          this.event_at = this.data.event_at.split(\",\");\n          this.len = this.event_at.length\n        }\n      }\n    })\n  }\n  showFalse=0;\nratingsArr=[];\n  getRatings() {\n    this.service.get(\"getRatings/\" + this.id).subscribe((res) => {\n      this.ratingsArr = res['data']\n      \n      for (var i = 0; i < res['data'].length; ++i) {\n        if(res['data'][i].user_id == this.userId){\n          this.showFalse = 1;\n        }\n      }\n\n    })\n  }\n}\n","<!-- <div class=\"col-md-12 mb-2\">\n    <button class=\"btn btn-outline-secondary progress_btn\" *ngIf=\"data?.status == '1'\" >In Progress</button>\n    <button class=\"btn btn-outline-secondary progress_btn\" *ngIf=\"data?.status == '2'\" >Request Send</button>\n    <button class=\"btn btn-outline-secondary progress_btn\" *ngIf=\"data?.status =='3'\" >Accept Request</button>\n    <button class=\"btn btn-outline-secondary progress_btn\" *ngIf=\"data?.status =='4'\" >Complete</button>\n    <button class=\"btn btn-outline-secondary progress_btn\" *ngIf=\"data?.status =='5'\" >Cancel</button>\n</div> -->\n<div class=\"row mb-3\">\n    <div class=\"col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <div id=\"print-area\">\n                    <h5 class=\"font-weight-bold\">User Request Details</h5>\n                    <div class=\"mt-3 mb-4 border-top\"></div>\n                    <div class=\"request_Tab userstable mb-3 mb-sm-0 \">\n                        <table>\n                            <tbody>\n                                <tr>\n                                    <td>IR</td>\n                                    <td>{{data?.ir}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Enterd By</td>\n                                    <td>{{data?.entered_by}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Client Name</td>\n                                    <td>{{data?.client_name}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Requested By</td>\n                                    <td>{{data?.requested_by}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Requested Date</td>\n                                    <td>{{data?.request_date | date:'MM-dd-yyyy'}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Assignment Type</td>\n                                    <td>{{data?.assignment_type}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Platform</td>\n                                    <td>{{data?.platform}}</td>\n                                </tr>\n                                <tr *ngIf=\"data?.platform == 'VCI + OPI'\">\n                                    <td>Mobile</td>\n                                    <td>{{data?.vci_opi_phone_code}} {{data?.vci_opi_cell_phone | mask: '(000) 000-0000'}}</td>\n                                </tr>\n                                <tr *ngIf=\"data?.platform == 'VCI + OPI'\">\n                                    <td>Line</td>\n                                    <td>{{data?.line}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Simultaneous Interpreting?</td>\n                                    <td>{{data?.receivers_required ? 'Yes' : 'No'}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Language</td>\n                                    <td>{{data?.language}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Assignment Date</td>\n                                    <td>{{data?.assignment_date | date:'MM-dd-yyyy'}}</td>\n                                </tr>\n                                <tr>\n                                    <td>From Time</td>\n                                    <td>{{data?.from_time}}</td>\n                                </tr>\n                                <tr>\n                                    <td>To Time</td>\n                                    <td>{{data?.to_time}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Recurrent Assignment</td>\n                                    <td>{{data?.recurrent_assignment == '1' ? \"YES\" : \"NO\"}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Request Created Date</td>\n                                    <td>{{data?.created_date }}</td>\n                                </tr>\n                                <tr *ngIf=\"data?.recurrent_assignment == '1'\">\n                                    <td>Repeats</td>\n                                    <td *ngIf=\"data?.repeats == '1'\">Daily</td>\n                                    <td *ngIf=\"data?.repeats == '2'\">Weekly</td>\n                                    <td *ngIf=\"data?.repeats == '3'\">Monthly</td>\n                                    <td *ngIf=\"data?.repeats == '4'\">Yearly</td>\n                                </tr>\n                                <tr *ngIf=\"data?.recurrent_assignment == '1'\">\n                                    <td>Every</td>\n                                    <td *ngIf=\"data?.every == '1'\">First Week</td>\n                                    <td *ngIf=\"data?.every == '2'\">Second Week</td>\n                                    <td *ngIf=\"data?.every == '3'\">Third Week</td>\n                                    <td *ngIf=\"data?.every == '4'\">Fourth Week</td>\n                                </tr>\n                                <tr *ngIf=\"data?.event_at != null && data?.recurrent_assignment == '1'\">\n                                    <td>ON</td>\n                                    <td *ngIf=\"len == 7\">Daily</td>\n                                    <td *ngIf=\"len != 7\">\n                                        <span *ngFor=\"let a of event_at\">\n                                            <span *ngIf=\"a == '1'\">Monday, </span>\n                                            <span *ngIf=\"a == '2'\">Tuesday, </span>\n                                            <span *ngIf=\"a == '3'\">Wednesay, </span>\n                                            <span *ngIf=\"a == '4'\">Thursday, </span>\n                                            <span *ngIf=\"a == '5'\">Friday, </span>\n                                            <span *ngIf=\"a == '6'\">Saturday</span>\n                                            <span *ngIf=\"a == '0'\">Sunday, </span>\n                                        </span>\n                                    </td>\n                                </tr>\n                                <tr *ngIf=\"data?.recurrent_assignment == '1'\">\n                                    <td>Event Start Date</td>\n                                    <td>{{data?.event_start_date | date:'MM-dd-yyyy'}}</td>\n                                </tr>\n                                <tr *ngIf=\"data?.recurrent_assignment == '1'\">\n                                    <td>Event End Date</td>\n                                    <td>{{data?.event_end_date | date:'MM-dd-yyyy'}}</td>\n                                </tr>\n                                <tr *ngIf=\"data?.recurrent_assignment == '1'\">\n                                    <td>Event Start Time</td>\n                                    <td>{{data?.event_start_time}}</td>\n                                </tr>\n                                <tr *ngIf=\"data?.recurrent_assignment == '1'\">\n                                    <td>Event End Time</td>\n                                    <td>{{data?.event_end_time}}</td>\n                                </tr>\n                                <!--\n                                <tr>\n                                    <td>Caseworker</td>\n                                    <td>{{data?.caseworker_name}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Business/Organization-</td>\n                                    <td>{{data?.business_bill}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Requester</td>\n                                    <td>{{data?.requester_name}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Health Department/Division</td>\n                                    <td>{{data?.health_department}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Community Service</td>\n                                    <td>{{data?.north_metro_community_service}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Mesa Country Human Services</td>\n                                    <td>{{data?.human_services}}</td>\n                                </tr>\n                                <tr>\n                                    <td>AHS Department/Division</td>\n                                    <td>{{data?.ahs_department}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Office Phone</td>\n                                    <td>{{data?.office_phone | mask: '(000) 000-0000'}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Cell Phone</td>\n                                    <td>{{data?.cell_phone | mask: '(000) 000-0000'}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Email</td>\n                                    <td>{{data?.email}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Site Contact</td>\n                                    <td>{{data?.site_contact | mask: '(000) 000-0000'}}</td>\n                                </tr>\n                                <tr>\n                                    <td>Create Date</td>\n                                    <td>{{data?.created_date}}</td>\n                                </tr> -->\n                            </tbody>\n                        </table>\n                    </div>\n                    <!--form 1 start-->\n                    <!--    <p>Caseworker- {{data.caseworker_name}}</p>\n                    <p>Business/Organization- {{data.business_bill}}</p>\n                    <p>Requester- {{data.requester_name}}</p>\n                    <p>Health Department/Division- {{data.health_department}}</p>\n                    <p>Community Service- {{data.north_metro_community_service}}</p>\n                    <p>Mesa Country Human Services- {{data.human_services}}</p>\n                    <p>AHS Department/Division- {{data.ahs_department}}</p>\n                    <p>Office Phone- {{data.office_phone}}</p>\n                    <p>Cell Phone- {{data.cell_phone}}</p>\n                    <p>Email- {{data.email}}</p>\n                    <p>Site Contact- {{data.site_contact}}</p>\n                    <p>Create Date- {{data.updated_at | date:'MM-dd-yyyy' }}</p> -->\n                    <!--form 1 end-->\n                    <!-- <div class=\"row\">\n                        <div class=\"col-md-12\">\n                            \n                        </div>\n                    </div> -->\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-6\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"font-weight-bold\">Appointment Details</h5>\n                <h5 class=\"font-weight-bold progress_btn text-warning\" *ngIf=\"data?.status == '0' && (data?.ir_isReject == '0' || data?.ir_isReject == null) \">New request</h5>\n                <h5 class=\"font-weight-bold progress_btn assign-color\" *ngIf=\"data?.status == '1' && (data?.ir_isReject == '0' || data?.ir_isReject == null)\">Assigned</h5>\n                <h5 class=\"font-weight-bold progress_btn text-primary\" *ngIf=\"data?.status == '2' && (data?.ir_isReject == '0' || data?.ir_isReject == null)\">In Progress</h5>\n                <h5 class=\"font-weight-bold progress_btn text-success\" *ngIf=\"data?.status == '3' && (data?.ir_isReject == '0' || data?.ir_isReject == null)\">Completed</h5>\n                <h5 class=\"font-weight-bold progress_btn text-danger\" *ngIf=\"data?.status == '4' && (data?.ir_isReject == '0' || data?.ir_isReject == null)\">Reassign</h5>\n                <h5 class=\"font-weight-bold progress_btn text-danger\" *ngIf=\"data?.ir_isReject == '1'\">Cancelled</h5>\n                <div class=\"mt-3 mb-4 border-top\"></div>\n                <div class=\"request_Tab userstable mb-3 mb-sm-0 \">\n                    <table>\n                        <tbody>\n                            <!-- <tr>\n                                <td>Appointment Type</td>\n                                <td>{{data?.appointment_type}}</td>\n                            </tr>\n                            <tr>\n                                <td>Date</td>\n                                <td>{{data?.date | date:'MM/dd/yyyy' }}</td>\n                            </tr>\n                            <tr>\n                                <td>Start Time</td>\n                                <td>{{data?.start_time}}</td>\n                            </tr>\n                            <tr>\n                                <td>Anticipated End Time</td>\n                                <td>{{data?.anticipated_end_time}}</td>\n                            </tr>\n                            <tr>\n                                <td>Service Requested</td>\n                                <td>{{data?.service_requested}}</td>\n                            </tr> -->\n                            <tr *ngIf=\"data?.caseworker_name != null\">\n                                <td>Caseworker worker</td>\n                                <td>{{data?.caseworker_name}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.cellphone_contact_person != null\">\n                                <td>Cell Phone</td>\n                                <td>{{data?.phone_code}} {{data?.cellphone_contact_person | mask: '(000) 000-0000'}}\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"data?.name_of_contact_person != null\">\n                                <td>Contact Name of Person at Assignment</td>\n                                <td>{{data?.name_of_contact_person}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.email != null && data?.email != 'undefined'\">\n                                <td>Email</td>\n                                <td class=\"text-lowercase\">{{data?.email }}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.practice_name != null && data?.practice_name != ''\">\n                                <td>Practice Name</td>\n                                <td>{{data?.practice_name}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.position != null\">\n                                <td>Position</td>\n                                <td>{{data?.position}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.provider_name != null\">\n                                <td>Provider Name</td>\n                                <td>{{data?.provider_name}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.contact_person_phone_code != null\">\n                                <td>Contact Person</td>\n                                <td>{{data?.contact_person_phone_code}} {{data?.contact_person_cellphone | mask: '(000) 000-0000'}}\n                                </td>\n                            </tr>\n                            <tr *ngIf=\"data?.building_name != null\">\n                                <td>Case Name </td>\n                                <td>{{data?.building_name}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.clientName != null\">\n                                <td>Client Name</td>\n                                <td>{{data?.clientName}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.trails != null\">\n                                <td>Trails/Case Number</td>\n                                <td>{{data?.trails}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.home_visit != null\">\n                                <td>Home Visit</td>\n                                <td>{{data?.home_visit ? 'Yes' : 'No'}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.address != null\">\n                                <td>Address</td>\n                                <td>{{data?.address}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.building_address != null\">\n                                <td>School/Building Address</td>\n                                <td>{{data?.building_address}}</td>\n                            </tr>\n                            <tr *ngIf=\"data?.notes != null\">\n                                <td>Notes</td>\n                                <td>{{data?.notes}}</td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<!-- 1 -->\n<div class=\"row\" *ngIf=\"ratingsArr.length > 0 && showFalse == 0\">\n    <div class=\"col-sm-12\">\n        <h3>Ratings</h3>\n    </div>\n    \n    <div class=\"col-sm-6\" *ngFor=\"let s of ratingsArr;\">\n        <div  class=\"card card-profile-1 mb-5\">\n            <div class=\"card-body text-center\">\n                <div class=\"avatar box-shadow-2 mb-3\">\n                    <img src=\"{{s.profile_img}}\" onerror=\"this.src='./assets/images/avatar.jpg';\">\n                </div>\n                <h5 class=\"m-0\">{{s.first_name}} {{s.last_name}}</h5>\n                <ngb-rating class=\"newrating ratingdetails\" [max]=\"5\" rate=\"{{s.rate}}\"></ngb-rating>\n                <p>{{s.review}}</p>\n                \n            </div>\n        </div>\n    </div>\n</div>\n<!-- 1 -->\n<!-- 2 -->\n<div class=\"row\" *ngIf=\"ratingsArr.length > 0 && showFalse == 1\">\n    <div class=\"col-sm-12\">\n        <h3>Ratings</h3>\n    </div>\n    \n    <div class=\"col-sm-6\">\n        <div *ngFor=\"let s of ratingsArr;\" class=\"card card-profile-1 mb-5\">\n            <div *ngIf=\"s.user_id == userId\" class=\"card-body text-center\">\n                <div class=\"avatar box-shadow-2 mb-3\">\n                    <img src=\"{{s.profile_img}}\" onerror=\"this.src='./assets/images/avatar.jpg';\">\n                </div>\n                <h5 class=\"m-0\">{{s.first_name}} {{s.last_name}}</h5>\n                <ngb-rating class=\"newrating ratingdetails\" [max]=\"5\" rate=\"{{s.rate}}\"></ngb-rating>\n                <p>{{s.review}}</p>\n                \n            </div>\n        </div>\n    </div>\n    <div class=\"col-sm-6\">\n        <div *ngFor=\"let s of ratingsArr;\" class=\"card card-profile-1\">\n            <div *ngIf=\"s.user_id != userId\" class=\"card-body text-center\">\n                <div class=\"avatar box-shadow-2 mb-3\">\n                    <img src=\"{{s.profile_img}}\" onerror=\"this.src='./assets/images/avatar.jpg';\">\n                </div>\n                <h5 class=\"m-0\">{{s.first_name}} {{s.last_name}}</h5>\n                <ngb-rating class=\"newrating ratingdetails\" [max]=\"5\" rate=\"{{s.rate}}\"></ngb-rating>\n                <p>{{s.review}}</p>\n                \n            </div>\n        </div>\n    </div>\n</div>\n<!-- 2 -->","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { HttpService } from 'src/app/shared/services/http.service';\nimport { ProductService } from 'src/app/shared/services/product.service';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { debounceTime } from 'rxjs/operators';\n@Component({\n  selector: 'app-accept-request',\n  templateUrl: './accept-request.component.html',\n  styleUrls: ['./accept-request.component.scss']\n})\nexport class AcceptRequestComponent implements OnInit {\n\n  userId;\n  roleId;\n  list_Obj: any[];\n  user_time: any[];\n  time_var;\n  userdelete_msg;\n  userData;\n  filteredUser;\n  viewUser_obj;\n  user_Obj;\n  status_msg;\n  roleData;\n  array_Obj;\n  msg;\n  reminder;\n  noteForm: FormGroup;\n  view_obj;\n  resp_msg;\n  ReadOnlyStyleGuideNotes: boolean = false;\n  call_check: boolean = false;\n  // searchControl: FormControl = new FormControl();\n\n  //search calendar\n  search_name: FormControl = new FormControl();\n  range = new FormGroup({\n    start_date: new FormControl(),\n    end_date: new FormControl()\n  });\n  allData;\n  startDate;\n  endDate;\n  constructor(\n    private productService: ProductService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private toastr: ToastrService,\n    public service: HttpService,\n    private router: Router,\n  ) { }\n\n\n  ngOnInit() {\n\n    this.userId = JSON.parse(localStorage.getItem('userId'));\n    this.roleId = JSON.parse(localStorage.getItem('roleId'));\n\n    // console.log(\"userId-\",this.userId)\n    // console.log(\"roleId-\",this.roleId)\n\n    this.interpreterRequestData('1');\n    // this.searchControl.valueChanges\n    //   .pipe(debounceTime(200))\n    //   .subscribe(value => {\n    //     this.filerData(value);\n    //   });\n    this.createForm();\n    /*this.roleData = JSON.parse(localStorage.getItem('Allpermission'));\n    this.array_Obj = this.roleData['data'][0];\n    if(this.array_Obj.id){\n      this.array_Obj = this.roleData['data'][0];\n      console.log(\"roleData\", this.array_Obj);\n    }\n    */\n  }\n\n  getRowClass = (row) => {    \n    return {\n      'progressRequest': row.status == \"2\",\n    };\n   }\n  /*========== Form Value Start Here========*/\n  createForm() {\n    this.noteForm = this.fb.group({\n      notes: ['']\n    });\n  }\n  /*========== Form Value End Here========*/\n\n  // filerData(val) {\n  //   if (val) {\n  //     val = val.toLowerCase();\n  //   } else {\n  //     console.log(\"xxxxxxx\", this.filteredUser);\n  //     return this.filteredUser = [... this.userData];\n  //   }\n\n  //   const columns = Object.keys(this.userData[0]);\n  //   if (!columns.length) {\n  //     return;\n  //   }\n\n  //   const rows = this.userData.filter(function (d) {\n  //     for (let i = 0; i <= columns.length; i++) {\n  //       const column = columns[i];\n  //       // console.log(d[column]);\n  //       if (d[column] && d[column].toString().toLowerCase().indexOf(val) > -1) {\n  //         return true;\n  //       }\n  //     }\n  //   });\n  //   this.filteredUser = rows;\n  // }\n\n  interpreterRequestData(e) {\n    this.allData = this.search_name.value;\n    this.startDate = this.range.value.start_date;\n    this.endDate = this.range.value.end_date;\n    this.service.interpreterRequestList(this.roleId, this.userId, 2, this.allData,\n      this.startDate, this.endDate)\n      .subscribe(res => {\n        console.log(\"==============resssss\",res);\n        if (res['status'] == '1') {\n          console.log(\"api response\", res);\n          this.list_Obj = res['data'];\n          this.userData = [...res['data']];\n          // console.log(\"listttttttt\", this.list_Obj);\n          this.filteredUser = this.list_Obj;\n        }\n      });\n    console.log(\"=======================filter\", this.filteredUser)\n  }\n\n  // request completed by interpreter\n  requestComplete(id, modal) {\n    console.log(\"idddddddddd\", id);\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.service.interpreterReqCompleted({id:id, userId:this.userId})\n          .subscribe(res => {\n            this.msg = res;\n            if (res['status'] == '1') {\n              this.toastr.success(this.msg.message, '', { timeOut: 1000, positionClass: 'toast-top-center' });\n\n              this.router.navigate(['/interpreter-request/completed-list']);\n            }\n            // else{\n            //   this.toastr.success(this.status_msg.message,'', { timeOut: 1000 });\n            //   this.router.navigate(['/interpreter-request/list']);\n            // }\n\n          })\n      }, (reason) => {\n      });\n  }\n\n  //send reminder\n  reminder_popup_open(id, risId, modal) {\n    console.log(\"iddddddd\", id, risId);\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.service.getReminderRequest(id, risId, this.noteForm.value.notes)\n          .subscribe(res => {\n            this.reminder = res;\n            // this.msg.message = res;\n            console.log(\"reminder form\", this.reminder);\n            if (res['status'] == 1) {\n              this.toastr.success(this.reminder.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n              this.router.navigate(['/interpreter-request/accept-list']);\n            }\n          })\n      }, (reason) => {\n      });\n\n  }\n\n\n\n  // trackingLinkSend(row.ris_id, linkConfirmModal)\n\n  trackingLinkSend(id, risId, modal) {\n    console.log(\"iddddddd\", id, risId);\n    this.modalService.open(modal, { ariaLabelledBy: 'modal-basic-title', centered: true })\n      .result.then((result) => {\n        this.service.interpreterTrackingLinkSend(id, risId).subscribe(res => {\n          this.resp_msg = res;\n          // this.msg.message = res;\n          console.log(\"reminder form\", this.reminder);\n          if (res['status'] == 1) {\n            this.toastr.success(this.resp_msg.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n            this.router.navigate(['/interpreter-request/accept-list']);\n          } else {\n            this.toastr.error(this.resp_msg.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n            this.router.navigate(['/interpreter-request/accept-list']);\n          }\n        })\n      }, (reason) => {\n      });\n\n  }\n\n\n  call_Check() {\n    if (this.ReadOnlyStyleGuideNotes) {\n      this.ReadOnlyStyleGuideNotes = false;\n    }\n    else {\n      this.ReadOnlyStyleGuideNotes = true;\n\n    }\n  }\n\n  email_check() {\n\n    if (this.call_check) {\n      this.call_check = false;\n    }\n    else {\n      this.call_check = true;\n    }\n  }\n  sms_check() {\n    if (this.call_check) {\n      this.call_check = true;\n    }\n    else {\n      this.call_check = false;\n    }\n  }\n  push_check() {\n    if (this.call_check) {\n      this.call_check = true;\n    }\n    else {\n      this.call_check = false;\n    }\n  }\n\n  viewDetail(request_id) {\n    console.log(\"id--\", request_id);\n    this.service.getRequestDetail(request_id).subscribe(res => {\n      if (res['status'] == 1) {\n        this.view_obj = res['data'][0];\n        console.log(\"api data\", this.view_obj);\n        localStorage.setItem('userViewData', JSON.stringify(this.view_obj));\n        this.router.navigate(['/request-scheduler/details',request_id]);\n        // this.router.navigate(['/user-request/request-view', request_id]);\n      } else {\n        this.resp_msg = res;\n        this.toastr.error(this.resp_msg.message, '', { timeOut: 2000, positionClass: 'toast-top-center' });\n      }\n\n    })\n  }\n\n}\n\n","<div class=\"\">\n    <div class=\"breadcrumb\">\n        <ul class=\"heading\">\n            <li><a>In Progress</a></li>\n            <li>List</li>\n        </ul>\n    </div>\n\n    <div class=\"separator-breadcrumb border-top\"></div>\n\n    <div class=\"row\">\n        <div class=\"col-md-4\">\n            <div class=\"form-group\">\n                <input id=\"search\" (keyup)=\"interpreterRequestData($event.target.value)\" placeholder=\"Search\" [formControl]=\"search_name\" class=\"form-control form-control-rounded\" type=\"text\">\n            </div>\n\n        </div>\n        <div class=\"col-md-4 dummy_text\">\n            <mat-form-field appearance=\"fill\">\n                <!-- <mat-label>Enter a date range</mat-label> -->\n                <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n                    <input matStartDate formControlName=\"start_date\" (dateChange)=\"interpreterRequestData($event.target.value)\" placeholder=\"Start date\">\n                    <input matEndDate formControlName=\"end_date\" (dateChange)=\"interpreterRequestData($event.target.value)\" placeholder=\"End date\">\n\n                </mat-date-range-input>\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-date-range-picker #picker></mat-date-range-picker>\n            </mat-form-field>\n        </div>\n\n        <div class=\"col-md-12 requesttable bluetable bluetablenew\">\n            <div class=\"card  o-hidden\">\n                <ngx-datatable *ngIf=\"filteredUser?.length\" style=\"height: 500px; box-shadow: none\" class=\"material fullscreen\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\" [rowHeight]=\"60\" [scrollbarV]=\"true\" [rows]=\"filteredUser\" [rowClass]=\"getRowClass\">\n                   <!--  <ngx-datatable-column name=\"S.No\" [sortable]=\"false\" [maxWidth]=\"100\">\n                        <ng-template ngx-datatable-header-template>\n                            S.No\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-rowIndex=\"rowIndex\" let-row=\"row\">\n                            {{rowIndex +1}}\n                        </ng-template>\n                    </ngx-datatable-column>\n -->\n                    <!-- <ngx-datatable-column name=\"Caseworker\" prop=\"caseworker_name\">\n                <ng-template ngx-datatable-header-template>\n                  Caseworker\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.caseworker_name}}\n                </ng-template>\n              </ngx-datatable-column> -->\n                    <ngx-datatable-column name=\"IR\" prop=\"ir\">\n                        <ng-template ngx-datatable-header-template>\n                            IR\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.ir}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Client Name\" prop=\"client_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Client Name\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.client_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"LOB\" prop=\"lob_name\">\n                        <ng-template ngx-datatable-header-template>\n                            LOB\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lob_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <ngx-datatable-column name=\"Assignment Type\" prop=\"assignment_type\">\n                        <ng-template ngx-datatable-header-template>\n                            Assignment Type\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.assignment_type}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <!-- <ngx-datatable-column name=\"Email\" prop=\"email\">\n                <ng-template ngx-datatable-header-template>\n                  Email\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.email}}\n                </ng-template>\n              </ngx-datatable-column>     -->\n                    <!-- <ngx-datatable-column name=\"Name Of Contact Person\" prop=\"name_of_contact_person\">\n                <ng-template ngx-datatable-header-template>\n                  Contact Person\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.name_of_contact_person}}\n                </ng-template>\n              </ngx-datatable-column> -->\n                    <!-- <ngx-datatable-column name=\"Appointment Type\" prop=\"appointment_type\">\n                <ng-template ngx-datatable-header-template>\n                  Appointment Type\n                </ng-template>\n                <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                  {{row.appointment_type}}\n                </ng-template>\n              </ngx-datatable-column> -->\n                 <!--    <ngx-datatable-column name=\"Cell Phone\" prop=\"cell_phone\">\n                        <ng-template ngx-datatable-header-template>\n                            Cell Phone\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.phoneCode}} {{row.cellPhone | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n                    <!-- <ngx-datatable-column name=\"Requester\" prop=\"requester_name\">\n                    <ng-template ngx-datatable-header-template>\n                      Requester\n                    </ng-template>\n                    <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                      {{row.requester_name}}\n                    </ng-template>\n                </ngx-datatable-column> -->\n                 <ngx-datatable-column name=\"Language\" prop=\"lang_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Language\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.lang_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Interpreter Name\" prop=\"interpreter_name\">\n                        <ng-template ngx-datatable-header-template>\n                            Interpreter\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.interpreter_name}}\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                   <!--  <ngx-datatable-column name=\"Interpreter Mobile\" prop=\"mobile\">\n                        <ng-template ngx-datatable-header-template>\n                            Interpreter Mobile\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            {{row.interpreter_phoneCode}} {{row.interpreter_mobile | mask: '(000) 000-0000'}}\n                        </ng-template>\n                    </ngx-datatable-column> -->\n\n                    <ngx-datatable-column>\n                        <ng-template ngx-datatable-header-template>\n                            <span title=\"Requested date\">Requested date</span>\n                        </ng-template>\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <span title=\"{{row.created_at}}\">{{row.created_at | date:'MM/dd/yyyy' }}</span>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <!-- <ngx-datatable-column>\n            <ng-template ngx-datatable-header-template>\n              <span title=\"Appointment date\">Appointment date</span>\n            </ng-template>\n            <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n              <span title=\"{{row.date}}\">{{row.date | date:'MM/dd/yyyy' }}</span>\n            </ng-template>  \n        </ngx-datatable-column> -->\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" *ngIf=\"roleId=='1' || roleId=='4'\">\n                        <ng-template ngx-datatable-header-template>Status\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            In Progress\n                        </ng-template>\n\n                    </ngx-datatable-column>\n\n\n                    <ngx-datatable-column [width]=\"120\" [sortable]=\"false\">\n                        <ng-template ngx-datatable-header-template>Action\n                        </ng-template>\n\n                        <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                            <button class=\"btn btn-outline-secondary mr-1\" (click)=\"viewDetail(row.ris_id)\">View</button>\n\n                            <button *ngIf=\"roleId=='1' || roleId == '4'\" class=\"btn btn-outline-secondary\" (click)=\"reminder_popup_open(row.user_id,row.ris_id,reminderConfirmModal)\">Reminder</button>\n\n                            <button *ngIf=\"roleId!='1' && roleId!='4'\" class=\"btn btn-outline-danger ml-2\" (click)=\"trackingLinkSend(row.user_id,row.ris_id, linkConfirmModal)\">\n                Tracking link\n              </button>\n\n                            <button *ngIf=\"roleId!='1' && roleId!='4'\" class=\"btn btn-outline-danger ml-2\" (click)=\"requestComplete(row.ris_id, completeConfirmModal)\">\n                  Completed\n              </button>\n                        </ng-template>\n                    </ngx-datatable-column>\n\n                    <!-- <ngx-datatable-column [width]=\"120\" [sortable]=\"false\" *ngIf=\"roleId!='1'\">\n              <ng-template ngx-datatable-header-template>Action\n              </ng-template>\n              \n              <ng-template ngx-datatable-cell-template let-value=\"value\" let-row=\"row\">\n                <button class=\"btn btn-outline-secondary\" (click)=\"interpreterReply(row.user_id,row.ris_id,'2')\">Accept</button>  \n                <button class=\"btn btn-outline-secondary ml-2\" (click)=\"interpreterReply(row.user_id,row.ris_id,'3')\">Reject</button>  \n            </ng-template>\n          </ngx-datatable-column> -->\n\n\n\n                </ngx-datatable>\n            </div>\n            <!-- <ng-container *ngIf=\"list_Obj?.length <= 0\">\n                No Data Found\n            </ng-container> -->\n\n              <div class=\"col-md-12 text-center\" *ngIf=\"list_Obj?.length <= 0\">\n                            <img src=\"../assets/images/nosearch.png\"><br><br>\n                            <h5><b>We couldn't find what you're looking for</b></h5>\n                        </div>\n\n                        \n        </div>\n\n    </div>\n</div>\n<ng-template #completeConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>Are you sure? you want to Completed task?</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n</ng-template>\n\n<ng-template #reminderConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Reminder</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n\n        <form [formGroup]=\"noteForm\">\n            <div class=\"form-group\">\n                <label>Note</label>\n                <textarea class=\"form-control\" formControlName=\"notes\" rows=\"3\" placeholder=\"Optional\"></textarea>\n            </div>\n            <div class=\"form-group check_box\">\n\n                <label class=\"container\">Email\n        <input  [disabled]=\"ReadOnlyStyleGuideNotes\" (click) =\"email_check()\" id=\"check1\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n                <label class=\"container\">Sms\n        <input  [disabled]=\"ReadOnlyStyleGuideNotes\" (click) =\"sms_check()\" id=\"check2\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n                <label class=\"container\">Push\n        <input [disabled]=\"ReadOnlyStyleGuideNotes\" (click) =\"push_check()\" id=\"check3\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n                <label class=\"container\">Call\n        <input [disabled]=\"call_check\"  id=\"check4\" (click)=\"call_Check()\" type=\"checkbox\">\n        <span class=\"checkmark\"></span>\n      </label>\n            </div>\n        </form>\n\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-success btn-rounded\" (click)=\"modal.close('Ok')\">Send</button>\n    </div>\n</ng-template>\n\n\n\n<ng-template #linkConfirmModal let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-title\">Alert</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close button\" aria-describedby=\"modal-title\" (click)=\"modal.dismiss('Cross click')\">\n          <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n        <p><strong>Are you sure? you want to send tracking link?</strong></p>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-outline-secondary btn-rounded\" (click)=\"modal.dismiss('cancel')\">Cancel</button>\n        <button type=\"button\" ngbAutofocus class=\"btn btn-wide btn-danger btn-rounded\" (click)=\"modal.close('Ok')\">Ok</button>\n    </div>\n</ng-template>"],"sourceRoot":"webpack:///"}